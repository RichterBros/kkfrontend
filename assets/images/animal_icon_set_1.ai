%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: icons_animals.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: User
%%CreationDate: 9/29/2015
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151805, 2013/04/09-12:08:21        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2016-01-09T16:26:43+02:00"
   xmp:ModifyDate="2015-09-29T20:41:16+03:00"
   xmp:CreateDate="2015-09-29T20:41:16+03:00"
   xmp:CreatorTool="Adobe Illustrator CC 2014 (Windows)"
   xmpMM:InstanceID="xmp.iid:3d264dd7-84ca-0e44-bc3b-b0bc4504755c"
   xmpMM:DocumentID="xmp.did:82337590-dc55-074f-8d40-75011ea54bf8"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of flat style vector avatars of animals</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>User</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of flat style vector avatars of animals</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>media</rdf:li>
     <rdf:li>social</rdf:li>
     <rdf:li>minimal</rdf:li>
     <rdf:li>isolated</rdf:li>
     <rdf:li>kangaroo</rdf:li>
     <rdf:li>bear</rdf:li>
     <rdf:li>user</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>sign</rdf:li>
     <rdf:li>life</rdf:li>
     <rdf:li>symbol</rdf:li>
     <rdf:li>head</rdf:li>
     <rdf:li>template</rdf:li>
     <rdf:li>elements</rdf:li>
     <rdf:li>character</rdf:li>
     <rdf:li>koala</rdf:li>
     <rdf:li>graphic</rdf:li>
     <rdf:li>typography</rdf:li>
     <rdf:li>abstract</rdf:li>
     <rdf:li>wolf</rdf:li>
     <rdf:li>portrait</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>icon</rdf:li>
     <rdf:li>giraffe</rdf:li>
     <rdf:li>decorative</rdf:li>
     <rdf:li>avatar</rdf:li>
     <rdf:li>panda</rdf:li>
     <rdf:li>collection</rdf:li>
     <rdf:li>web</rdf:li>
     <rdf:li>face</rdf:li>
     <rdf:li>design</rdf:li>
     <rdf:li>color</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>poster</rdf:li>
     <rdf:li>picture</rdf:li>
     <rdf:li>banner</rdf:li>
     <rdf:li>vintage</rdf:li>
     <rdf:li>style</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>wild</rdf:li>
     <rdf:li>nature</rdf:li>
     <rdf:li>rabbit</rdf:li>
     <rdf:li>dog</rdf:li>
     <rdf:li>fox</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>animal</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FWiQBU9MSVU/rNt/v1P+CGU/mcf86PzDPw5dxd9Ztv8Afqf8EMfzOP8AnR+YXw5dxd9Z&#xA;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&#xA;q//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:088b8f48-e19d-44c5-af84-beac770f25e1"
    stRef:documentID="xmp.did:f2786f39-18c1-0642-92b7-aa7a0fefbb40"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:f2786f39-18c1-0642-92b7-aa7a0fefbb40"
      stEvt:when="2015-09-28T15:40:56+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2014 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:82337590-dc55-074f-8d40-75011ea54bf8"
      stEvt:when="2015-09-29T20:41:16+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2014 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3d264dd7-84ca-0e44-bc3b-b0bc4504755c"
      stEvt:when="2016-01-09T16:26:43+02:00"
      stEvt:softwareAgent="Adobe Bridge CC (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1000.000000"
    stDim:h="1000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
         
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .956863 .956863 rgb
f
503.274 830.841 mo
503.274 851.677 493.111 870.139 477.47 881.539 cv
467.083 877.5 454.394 881.417 440.605 881.417 cv
426.781 881.417 415.167 875.833 403.613 881.483 cv
388.016 870.079 377.885 851.643 377.885 830.841 cv
377.885 796.216 405.954 768.147 440.58 768.147 cv
475.205 768.147 503.274 796.216 503.274 830.841 cv
cp
.858824 .466667 .345098 rgb
f
483.972 805.543 mo
481.895 805.335 458.455 824.741 456.323 824.741 cv
425.174 824.741 422.948 808.263 418.072 838.033 cv
448.934 887 li
458.807 885.383 471.583 877.583 477.508 881.511 cv
493.127 870.109 503.274 851.66 503.274 830.841 cv
503.274 828.71 503.167 826.603 502.96 824.526 cv
483.972 805.543 li
cp
.647059 .313726 .219608 rgb
f
440.605 840.594 mo
419.929 840.594 403.168 856.448 403.168 876.006 cv
403.168 877.869 403.321 879.698 403.614 881.484 cv
409.988 886.144 417.275 889.631 425.157 891.625 cv
429.5 888.917 434.595 887.667 439.917 887.667 cv
445.265 887.667 451.124 888.5 456.076 891.606 cv
463.953 889.603 471.234 886.109 477.602 881.442 cv
477.891 879.669 478.041 877.854 478.041 876.006 cv
478.041 856.448 461.28 840.594 440.605 840.594 cv
cp
.729412 .694118 .682353 rgb
f
440.605 845.644 mo
427.673 845.644 417.19 857.399 417.19 871.899 cv
417.19 879.759 420.27 886.81 425.15 891.622 cv
430.087 892.871 435.255 893.536 440.58 893.536 cv
445.928 893.536 451.119 892.865 456.076 891.605 cv
460.946 886.794 464.02 879.75 464.02 871.899 cv
464.02 857.399 453.536 845.644 440.605 845.644 cv
cp
.886275 .862745 .870588 rgb
f
490.262 815.762 mo
486.816 804.633 476.299 798.002 466.77 800.953 cv
463.705 801.902 461.116 803.729 459.128 806.139 cv
454.655 803.308 448.645 801.62 440.605 801.62 cv
432.545 801.62 426.525 803.316 422.049 806.159 cv
420.059 803.739 417.464 801.905 414.389 800.953 cv
404.861 798.002 394.343 804.633 390.897 815.762 cv
387.451 826.891 392.382 838.304 401.91 841.255 cv
404.652 842.104 407.475 842.158 410.188 841.542 cv
412.701 854.333 425.362 857.204 440.605 857.204 cv
455.843 857.204 468.501 854.334 471.019 841.553 cv
473.718 842.157 476.524 842.099 479.249 841.255 cv
488.778 838.304 493.708 826.891 490.262 815.762 cv
cp
.8 .756863 .741176 rgb
f
417.478 823.992 mo
415.615 830.01 409.928 833.595 404.776 832 cv
399.624 830.404 396.958 824.233 398.821 818.215 cv
400.684 812.198 406.371 808.613 411.523 810.208 cv
416.676 811.803 419.342 817.975 417.478 823.992 cv
cp
.647059 .627451 .623529 rgb
f
463.681 823.992 mo
465.544 830.01 471.232 833.595 476.384 832 cv
481.536 830.404 484.202 824.233 482.338 818.215 cv
480.475 812.198 474.788 808.613 469.636 810.208 cv
464.484 811.803 461.818 817.975 463.681 823.992 cv
cp
f
447.233 856.988 mo
449.408 856.834 451.121 855.043 451.124 852.862 cv
451.124 852.847 451.124 852.833 451.124 852.819 cv
451.124 842.9 446.403 834.858 440.58 834.858 cv
434.757 834.858 430.036 842.9 430.036 852.819 cv
430.036 852.832 430.036 852.845 430.036 852.858 cv
430.039 855.038 431.751 856.828 433.925 856.984 cv
436.076 857.139 438.311 857.204 440.605 857.204 cv
442.88 857.204 445.098 857.14 447.233 856.988 cv
cp
f
447.795 843.764 mo
447.795 848.362 444.565 857.204 440.58 857.204 cv
436.595 857.204 433.364 848.362 433.364 843.764 cv
433.364 839.166 436.595 835.438 440.58 835.438 cv
444.565 835.438 447.795 839.166 447.795 843.764 cv
cp
.886275 .862745 .870588 rgb
f
449.079 842.481 mo
449.079 844.466 445.274 846.588 440.58 846.588 cv
435.886 846.588 432.081 844.466 432.081 842.481 cv
432.081 840.496 435.886 839.399 440.58 839.399 cv
445.274 839.399 449.079 840.496 449.079 842.481 cv
cp
.227451 .192157 .266667 rgb
f
440.58 840.38 mo
440.58 842.788 438.64 844.74 436.248 844.74 cv
433.856 844.74 431.916 842.788 431.916 840.38 cv
431.916 837.973 433.856 836.021 436.248 836.021 cv
438.64 836.021 440.58 837.973 440.58 840.38 cv
cp
.886275 .862745 .870588 rgb
f
449.243 840.38 mo
449.243 842.788 447.304 844.74 444.911 844.74 cv
442.519 844.74 440.58 842.788 440.58 840.38 cv
440.58 837.973 442.519 836.021 444.911 836.021 cv
447.304 836.021 449.243 837.973 449.243 840.38 cv
cp
f
442.939 842.797 mo
438.22 842.797 li
436.273 842.797 434.679 841.203 434.679 839.256 cv
434.679 832.59 li
434.679 830.741 435.545 829 437.019 827.884 cv
437.019 827.884 li
439.125 826.291 442.034 826.291 444.14 827.884 cv
444.14 827.884 li
445.614 829 446.48 830.741 446.48 832.59 cv
446.48 839.256 li
446.48 841.203 444.887 842.797 442.939 842.797 cv
cp
.227451 .192157 .266667 rgb
f
434.385 824.741 mo
434.385 827.378 432.247 829.516 429.611 829.516 cv
426.974 829.516 424.836 827.378 424.836 824.741 cv
424.836 822.104 426.974 819.967 429.611 819.967 cv
432.247 819.967 434.385 822.104 434.385 824.741 cv
cp
.886275 .862745 .870588 rgb
f
456.323 824.741 mo
456.323 827.378 454.186 829.516 451.549 829.516 cv
448.912 829.516 446.775 827.378 446.775 824.741 cv
446.775 822.104 448.912 819.967 451.549 819.967 cv
454.186 819.967 456.323 822.104 456.323 824.741 cv
cp
f
432.225 824.741 mo
432.225 826.185 431.055 827.356 429.611 827.356 cv
428.167 827.356 426.996 826.185 426.996 824.741 cv
426.996 823.297 428.167 822.127 429.611 822.127 cv
431.055 822.127 432.225 823.297 432.225 824.741 cv
cp
.109804 .109804 .109804 rgb
f
454.163 824.741 mo
454.163 826.185 452.993 827.356 451.549 827.356 cv
450.105 827.356 448.934 826.185 448.934 824.741 cv
448.934 823.297 450.105 822.127 451.549 822.127 cv
452.993 822.127 454.163 823.297 454.163 824.741 cv
cp
f
431.856 823.832 mo
431.856 824.57 431.258 825.168 430.52 825.168 cv
429.782 825.168 429.184 824.57 429.184 823.832 cv
429.184 823.094 429.782 822.496 430.52 822.496 cv
431.258 822.496 431.856 823.094 431.856 823.832 cv
cp
1 1 1 rgb
f
453.795 823.832 mo
453.795 824.57 453.197 825.168 452.459 825.168 cv
451.722 825.168 451.124 824.57 451.124 823.832 cv
451.124 823.094 451.722 822.496 452.459 822.496 cv
453.197 822.496 453.795 823.094 453.795 823.832 cv
cp
f
923.512 830.841 mo
923.512 856.941 907.564 879.315 884.881 888.752 cv
878 885.34 869.556 887 861.031 887 cv
852.505 887 844.343 886.875 836.755 888.752 cv
814.071 879.316 798.122 856.941 798.122 830.841 cv
798.122 796.216 826.192 768.147 860.817 768.147 cv
895.442 768.147 923.512 796.216 923.512 830.841 cv
cp
.392157 .866667 .501961 rgb
f
873.05 816.177 mo
847.472 790.411 li
842.367 843.531 li
850.097 858.586 li
867.479 890.166 li
872.609 889.398 879.938 887.375 884.876 888.753 cv
907.561 879.318 923.512 856.943 923.512 830.841 cv
923.512 826.573 923.084 822.405 922.272 818.376 cv
888.689 784.577 li
873.05 816.177 li
cp
.309804 .639216 .364706 rgb
f
863.252 852.685 mo
858.382 852.685 li
852.19 852.685 847.124 857.751 847.124 863.942 cv
847.124 892.035 li
848.652 892.375 850.201 892.66 851.768 892.887 cv
854.75 891.21 857.744 892 860.817 892 cv
863.89 892 866.75 891.813 869.866 892.887 cv
871.433 892.66 872.982 892.375 874.51 892.035 cv
874.51 863.942 li
874.51 857.751 869.444 852.685 863.252 852.685 cv
cp
.639216 .501961 .372549 rgb
f
886.935 819.1 mo
882.145 830.331 873.446 830.409 867.916 827.599 cv
862.387 824.789 861.788 813.407 866.577 802.177 cv
871.367 790.946 882.181 781.005 887.71 783.815 cv
893.24 786.625 891.724 807.869 886.935 819.1 cv
cp
.741176 .588235 .419608 rgb
f
882.151 820.336 mo
878.591 828.683 873.387 828.062 869.909 826.295 cv
866.432 824.528 866.843 818.469 870.403 810.122 cv
873.962 801.775 881.382 794.074 884.859 795.841 cv
888.337 797.608 885.71 811.989 882.151 820.336 cv
cp
.6 .466667 .337255 rgb
f
834.7 819.1 mo
839.489 830.331 848.188 830.409 853.718 827.599 cv
859.247 824.789 859.846 813.407 855.057 802.177 cv
850.267 790.946 839.453 781.005 833.924 783.815 cv
828.394 786.625 829.91 807.869 834.7 819.1 cv
cp
.741176 .588235 .419608 rgb
f
839.484 820.336 mo
843.043 828.683 848.247 828.062 851.725 826.295 cv
855.202 824.528 854.791 818.469 851.232 810.122 cv
847.672 801.775 840.253 794.074 836.775 795.841 cv
833.297 797.608 835.924 811.989 839.484 820.336 cv
cp
.6 .466667 .337255 rgb
f
887.289 847.778 mo
887.289 864.828 875.437 868.419 860.817 868.419 cv
846.197 868.419 834.345 864.828 834.345 847.778 cv
834.345 830.728 843.563 812.835 860.817 812.835 cv
878.071 812.835 887.289 830.728 887.289 847.778 cv
cp
.741176 .588235 .419608 rgb
f
869.016 864.884 mo
869.016 867.998 865.345 870.521 860.817 870.521 cv
856.289 870.521 852.618 867.998 852.618 864.884 cv
852.618 861.771 856.289 859.247 860.817 859.247 cv
865.345 859.247 869.016 861.771 869.016 864.884 cv
cp
.337255 .227451 .156863 rgb
f
861.031 865.397 mo
861.031 867.756 858.583 869.668 855.564 869.668 cv
852.545 869.668 850.097 867.756 850.097 865.397 cv
850.097 863.038 852.545 861.126 855.564 861.126 cv
858.583 861.126 861.031 863.038 861.031 865.397 cv
cp
.827451 .658824 .490196 rgb
f
871.537 865.397 mo
871.537 867.756 869.089 869.668 866.07 869.668 cv
863.051 869.668 860.604 867.756 860.604 865.397 cv
860.604 863.038 863.051 861.126 866.07 861.126 cv
869.089 861.126 871.537 863.038 871.537 865.397 cv
cp
f
861.584 860.601 mo
860.05 860.601 li
856.807 860.601 854.155 857.948 854.155 854.706 cv
854.155 843.323 li
854.155 840.081 856.807 837.428 860.05 837.428 cv
861.584 837.428 li
864.827 837.428 867.479 840.081 867.479 843.323 cv
867.479 854.706 li
867.479 857.948 864.827 860.601 861.584 860.601 cv
cp
f
869.016 858.322 mo
869.016 861.435 865.345 863.959 860.817 863.959 cv
856.289 863.959 852.618 861.435 852.618 858.322 cv
852.618 855.209 856.289 852.685 860.817 852.685 cv
865.345 852.685 869.016 855.209 869.016 858.322 cv
cp
.509804 .388235 .290196 rgb
f
860.866 868.173 mo
860.768 868.173 li
860.56 868.173 860.39 868.003 860.39 867.795 cv
860.39 860.522 li
860.39 860.314 860.56 860.144 860.768 860.144 cv
860.866 860.144 li
861.074 860.144 861.244 860.314 861.244 860.522 cv
861.244 867.795 li
861.244 868.003 861.074 868.173 860.866 868.173 cv
cp
.337255 .227451 .156863 rgb
f
876.67 835.616 mo
876.67 838.252 874.532 840.39 871.895 840.39 cv
869.258 840.39 867.121 838.252 867.121 835.616 cv
867.121 832.979 869.258 830.841 871.895 830.841 cv
874.532 830.841 876.67 832.979 876.67 835.616 cv
cp
.6 .466667 .337255 rgb
f
874.51 835.616 mo
874.51 837.06 873.339 838.23 871.895 838.23 cv
870.451 838.23 869.281 837.06 869.281 835.616 cv
869.281 834.172 870.451 833.001 871.895 833.001 cv
873.339 833.001 874.51 834.172 874.51 835.616 cv
cp
.109804 .109804 .109804 rgb
f
874.141 834.706 mo
874.141 835.444 873.543 836.042 872.806 836.042 cv
872.068 836.042 871.47 835.444 871.47 834.706 cv
871.47 833.969 872.068 833.371 872.806 833.371 cv
873.543 833.371 874.141 833.969 874.141 834.706 cv
cp
1 1 1 rgb
f
854.513 835.616 mo
854.513 838.252 852.376 840.39 849.739 840.39 cv
847.102 840.39 844.965 838.252 844.965 835.616 cv
844.965 832.979 847.102 830.841 849.739 830.841 cv
852.376 830.841 854.513 832.979 854.513 835.616 cv
cp
.6 .466667 .337255 rgb
f
852.353 835.616 mo
852.353 837.06 851.183 838.23 849.739 838.23 cv
848.295 838.23 847.124 837.06 847.124 835.616 cv
847.124 834.172 848.295 833.001 849.739 833.001 cv
851.183 833.001 852.353 834.172 852.353 835.616 cv
cp
.109804 .109804 .109804 rgb
f
851.985 834.706 mo
851.985 835.444 851.387 836.042 850.649 836.042 cv
849.912 836.042 849.314 835.444 849.314 834.706 cv
849.314 833.969 849.912 833.371 850.649 833.371 cv
851.387 833.371 851.985 833.969 851.985 834.706 cv
cp
1 1 1 rgb
f
869.016 858.322 mo
869.016 861.435 865.345 863.959 860.817 863.959 cv
856.289 863.959 852.618 861.435 852.618 858.322 cv
852.618 855.209 856.289 859.817 860.817 859.817 cv
865.345 859.817 869.016 855.209 869.016 858.322 cv
cp
.337255 .227451 .156863 rgb
f
860.817 893.536 mo
869.364 893.536 877.511 891.825 884.936 888.727 cv
878.291 882.212 869.917 878.327 860.817 878.327 cv
851.717 878.327 843.344 882.212 836.698 888.727 cv
844.123 891.825 852.27 893.536 860.817 893.536 cv
cp
.639216 .501961 .372549 rgb
f
860.817 893.536 mo
863.89 893.536 866.911 893.314 869.866 892.887 cv
867.141 890.326 864.068 888.883 860.817 888.883 cv
857.566 888.883 854.493 890.326 851.768 892.887 cv
854.723 893.314 857.744 893.536 860.817 893.536 cv
cp
.827451 .658824 .490196 rgb
f
923.512 357.079 mo
923.512 382.057 908.905 403.623 887.767 413.702 cv
879.603 417.595 870.464 416.667 860.817 416.667 cv
851.206 416.667 842.099 417.611 833.958 413.745 cv
812.771 403.685 798.122 382.093 798.122 357.079 cv
798.122 322.454 826.192 294.384 860.817 294.384 cv
895.442 294.384 923.512 322.454 923.512 357.079 cv
cp
.760784 .364706 .819608 rgb
f
922.961 348.74 mo
905.928 331.608 li
903.804 333.435 li
886.328 315.958 li
878.071 327.236 li
862.416 310.676 li
850.262 343.036 li
825.485 366.189 li
825.485 366.189 879.428 417.636 887.532 413.813 cv
908.797 403.783 923.512 382.149 923.512 357.079 cv
923.512 354.251 923.323 351.468 922.961 348.74 cv
cp
.572549 .298039 .619608 rgb
f
905.97 400.572 mo
902.032 389.449 li
901.626 388.304 902.231 387.048 903.379 386.651 cv
915.843 382.341 li
917.373 381.812 917.818 379.862 916.669 378.721 cv
907.309 369.43 li
906.447 368.575 906.447 367.181 907.309 366.325 cv
916.669 357.034 li
917.818 355.893 917.373 353.943 915.843 353.414 cv
903.379 349.104 li
902.231 348.707 901.626 347.451 902.032 346.306 cv
906.433 333.875 li
906.974 332.348 905.726 330.784 904.118 330.972 cv
891.018 332.496 li
889.812 332.637 888.722 331.768 888.591 330.56 cv
887.162 317.45 li
886.987 315.84 885.185 314.972 883.817 315.839 cv
872.676 322.896 li
871.65 323.546 870.291 323.236 869.649 322.205 cv
862.674 311.013 li
861.817 309.639 859.817 309.639 858.96 311.013 cv
851.985 322.205 li
851.343 323.236 849.984 323.546 848.958 322.896 cv
837.817 315.839 li
836.449 314.972 834.647 315.84 834.472 317.45 cv
833.043 330.56 li
832.912 331.768 831.822 332.637 830.616 332.496 cv
817.516 330.972 li
815.908 330.784 814.661 332.348 815.201 333.875 cv
819.603 346.306 li
820.008 347.451 819.403 348.707 818.255 349.104 cv
805.791 353.414 li
804.261 353.943 803.816 355.893 804.965 357.034 cv
814.325 366.325 li
815.187 367.181 815.187 368.575 814.325 369.43 cv
804.965 378.721 li
803.816 379.862 804.261 381.812 805.791 382.341 cv
818.255 386.651 li
819.403 387.048 820.008 388.304 819.603 389.449 cv
815.664 400.573 li
816.99 401.948 818.377 403.265 819.823 404.515 cv
830.616 403.259 li
831.822 403.118 832.912 403.987 833.043 405.195 cv
833.976 413.752 li
835.615 414.53 837.294 415.239 839.008 415.875 cv
840.12 416.288 848.958 412.859 848.958 412.859 cv
849.984 412.209 851.343 412.519 851.985 413.55 cv
869.649 413.55 li
870.291 412.519 871.65 412.209 872.676 412.859 cv
872.676 412.859 881.5 416.293 882.605 415.883 cv
884.327 415.245 886.012 414.533 887.658 413.752 cv
888.591 405.195 li
888.722 403.987 889.812 403.118 891.018 403.259 cv
901.811 404.515 li
903.257 403.265 904.644 401.948 905.97 400.572 cv
cp
.243137 .137255 .0941176 rgb
f
860.817 361.215 mo
854.225 361.215 848.472 361.99 843.898 370.66 cv
838.254 381.357 835.323 400.925 839.008 415.875 cv
845.801 418.395 853.148 419.773 860.817 419.773 cv
868.486 419.773 875.834 418.395 882.626 415.875 cv
886.312 400.925 883.38 381.357 877.736 370.66 cv
873.162 361.99 867.409 361.215 860.817 361.215 cv
cp
.886275 .741176 .505882 rgb
f
860.817 372.348 mo
851.829 372.348 844.543 374.614 844.543 392.507 cv
844.543 403.51 847.299 413.231 851.511 419.086 cv
854.547 419.538 857.655 419.773 860.817 419.773 cv
863.979 419.773 867.087 419.538 870.124 419.086 cv
874.335 413.231 877.091 403.51 877.091 392.507 cv
877.091 374.614 869.805 372.348 860.817 372.348 cv
cp
.976471 .894118 .752941 rgb
f
888.955 363.071 mo
888.955 380.121 873.181 392.192 860.817 392.192 cv
848.453 392.192 832.679 380.121 832.679 363.071 cv
832.679 342.27 851.713 358.087 860.817 358.087 cv
869.921 358.087 888.955 343.807 888.955 363.071 cv
cp
.980392 .823529 .54902 rgb
f
871.372 386.469 mo
871.372 392.522 866.647 392.192 860.817 392.192 cv
854.988 392.192 850.262 392.522 850.262 386.469 cv
850.262 380.417 854.988 375.51 860.817 375.51 cv
866.647 375.51 871.372 380.417 871.372 386.469 cv
cp
.847059 .705882 .486275 rgb
f
866.283 388.096 mo
866.283 390.36 863.836 392.196 860.817 392.196 cv
857.798 392.196 855.351 390.36 855.351 388.096 cv
855.351 385.832 857.798 383.996 860.817 383.996 cv
863.836 383.996 866.283 385.832 866.283 388.096 cv
cp
.243137 .137255 .0941176 rgb
f
876.24 372.895 mo
876.24 375.532 874.102 377.67 871.465 377.67 cv
868.829 377.67 866.691 375.532 866.691 372.895 cv
866.691 370.259 868.829 368.121 871.465 368.121 cv
874.102 368.121 876.24 370.259 876.24 372.895 cv
cp
.847059 .705882 .486275 rgb
f
874.08 372.895 mo
874.08 374.339 872.909 375.51 871.465 375.51 cv
870.021 375.51 868.851 374.339 868.851 372.895 cv
868.851 371.451 870.021 370.281 871.465 370.281 cv
872.909 370.281 874.08 371.451 874.08 372.895 cv
cp
.109804 .109804 .109804 rgb
f
873.712 371.986 mo
873.712 372.724 873.114 373.322 872.376 373.322 cv
871.638 373.322 871.04 372.724 871.04 371.986 cv
871.04 371.248 871.638 370.65 872.376 370.65 cv
873.114 370.65 873.712 371.248 873.712 371.986 cv
cp
1 1 1 rgb
f
854.943 372.895 mo
854.943 375.532 852.805 377.67 850.169 377.67 cv
847.532 377.67 845.394 375.532 845.394 372.895 cv
845.394 370.259 847.532 368.121 850.169 368.121 cv
852.805 368.121 854.943 370.259 854.943 372.895 cv
cp
.847059 .705882 .486275 rgb
f
852.783 372.895 mo
852.783 374.339 851.613 375.51 850.169 375.51 cv
848.725 375.51 847.554 374.339 847.554 372.895 cv
847.554 371.451 848.725 370.281 850.169 370.281 cv
851.613 370.281 852.783 371.451 852.783 372.895 cv
cp
.109804 .109804 .109804 rgb
f
852.415 371.986 mo
852.415 372.724 851.817 373.322 851.079 373.322 cv
850.341 373.322 849.743 372.724 849.743 371.986 cv
849.743 371.248 850.341 370.65 851.079 370.65 cv
851.817 370.65 852.415 371.248 852.415 371.986 cv
cp
1 1 1 rgb
f
879.597 358.561 mo
877.657 356.591 877.474 353.479 879.167 351.292 cv
882.325 347.213 888.781 340.671 892.318 343.905 cv
896.931 348.121 893.928 358.677 889.871 364.763 cv
888.568 366.719 885.659 366.651 884.453 364.634 cv
883.082 362.341 881.207 360.197 879.597 358.561 cv
cp
.847059 .705882 .486275 rgb
f
887.56 351.691 mo
885.445 349.758 881.585 353.669 879.697 356.108 cv
879.291 356.632 879.069 357.245 879.019 357.867 cv
879.19 358.11 879.382 358.343 879.597 358.561 cv
881.207 360.197 883.082 362.341 884.453 364.634 cv
884.532 364.766 884.618 364.888 884.71 365.003 cv
885.245 364.946 885.76 364.668 886.097 364.163 cv
888.523 360.524 890.318 354.212 887.56 351.691 cv
cp
.686275 .564706 .407843 rgb
f
842.037 358.561 mo
843.977 356.591 844.16 353.479 842.467 351.292 cv
839.309 347.213 832.853 340.671 829.316 343.905 cv
824.703 348.121 827.706 358.677 831.763 364.763 cv
833.066 366.719 835.975 366.651 837.181 364.634 cv
838.552 362.341 840.427 360.197 842.037 358.561 cv
cp
.847059 .705882 .486275 rgb
f
834.074 351.691 mo
836.189 349.758 840.049 353.669 841.937 356.108 cv
842.343 356.632 842.565 357.245 842.616 357.867 cv
842.444 358.11 842.252 358.343 842.037 358.561 cv
840.427 360.197 838.552 362.341 837.181 364.634 cv
837.102 364.766 837.016 364.888 836.924 365.003 cv
836.389 364.946 835.874 364.668 835.537 364.163 cv
833.112 360.524 831.316 354.212 834.074 351.691 cv
cp
.686275 .564706 .407843 rgb
f
783.628 357.079 mo
783.628 382.557 768.431 404.485 746.607 414.293 cv
738.771 417.814 729.941 416.628 720.794 416.628 cv
711.52 416.628 702.857 417.76 694.938 414.147 cv
673.287 404.268 658.239 382.431 658.239 357.079 cv
658.239 322.454 686.309 294.384 720.934 294.384 cv
755.559 294.384 783.628 322.454 783.628 357.079 cv
cp
.772549 .847059 .34902 rgb
f
725.891 414.75 mo
734.235 414.463 739.4 417.531 746.607 414.292 cv
768.431 404.484 783.628 382.557 783.628 357.079 cv
783.628 353.675 783.356 350.336 782.834 347.079 cv
743.369 307.614 li
734.655 342.702 li
709.014 312.82 li
717.688 358.856 li
704.193 394.523 li
725.891 414.75 li
cp
.592157 .627451 .270588 rgb
f
720.794 418.458 mo
725.623 418.458 730.464 419.227 734.979 418.194 cv
739.031 417.266 742.933 415.946 746.644 414.276 cv
740.552 401.548 730.495 394.165 720.763 394.165 cv
711.064 394.165 701.041 401.499 694.944 414.148 cv
698.648 415.838 702.545 417.178 706.593 418.125 cv
711.198 419.203 715.859 418.458 720.794 418.458 cv
cp
.647059 .513726 .384314 rgb
f
699.202 347.505 mo
703.546 360.201 711.434 360.29 716.448 357.113 cv
721.462 353.937 722.006 341.069 717.663 328.372 cv
713.319 315.676 703.513 304.438 698.499 307.614 cv
693.485 310.791 694.859 334.808 699.202 347.505 cv
cp
.741176 .588235 .419608 rgb
f
703.541 348.902 mo
706.769 358.338 711.488 357.637 714.641 355.639 cv
717.795 353.642 717.422 346.791 714.194 337.355 cv
710.966 327.919 704.238 319.212 701.084 321.21 cv
697.931 323.208 700.313 339.466 703.541 348.902 cv
cp
.6 .466667 .337255 rgb
f
742.665 347.505 mo
738.322 360.201 730.434 360.29 725.419 357.113 cv
720.405 353.937 719.862 341.069 724.205 328.372 cv
728.549 315.676 738.355 304.438 743.369 307.614 cv
748.383 310.791 747.009 334.808 742.665 347.505 cv
cp
.741176 .588235 .419608 rgb
f
738.327 348.902 mo
735.099 358.338 730.38 357.637 727.227 355.639 cv
724.073 353.642 724.446 346.791 727.674 337.355 cv
730.902 327.919 737.63 319.212 740.784 321.21 cv
743.937 323.208 741.555 339.466 738.327 348.902 cv
cp
.6 .466667 .337255 rgb
f
747.406 385.243 mo
747.406 402.293 735.554 405.884 720.934 405.884 cv
706.314 405.884 694.462 402.293 694.462 385.243 cv
694.462 368.193 706.826 350.299 720.934 350.299 cv
735.042 350.299 747.406 368.193 747.406 385.243 cv
cp
.741176 .588235 .419608 rgb
f
714.739 372.244 mo
714.739 374.881 712.602 377.019 709.965 377.019 cv
707.328 377.019 705.19 374.881 705.19 372.244 cv
705.19 369.608 707.328 367.47 709.965 367.47 cv
712.602 367.47 714.739 369.608 714.739 372.244 cv
cp
.866667 .694118 .521569 rgb
f
736.677 372.244 mo
736.677 374.881 734.54 377.019 731.903 377.019 cv
729.266 377.019 727.129 374.881 727.129 372.244 cv
727.129 369.608 729.266 367.47 731.903 367.47 cv
734.54 367.47 736.677 369.608 736.677 372.244 cv
cp
f
726.062 395.772 mo
726.062 398.605 723.766 400.901 720.934 400.901 cv
718.102 400.901 715.806 398.605 715.806 395.772 cv
715.806 392.94 718.102 390.644 720.934 390.644 cv
723.766 390.644 726.062 392.94 726.062 395.772 cv
cp
f
712.579 372.244 mo
712.579 373.688 711.409 374.859 709.965 374.859 cv
708.521 374.859 707.35 373.688 707.35 372.244 cv
707.35 370.8 708.521 369.63 709.965 369.63 cv
711.409 369.63 712.579 370.8 712.579 372.244 cv
cp
.109804 .109804 .109804 rgb
f
734.518 372.244 mo
734.518 373.688 733.347 374.859 731.903 374.859 cv
730.459 374.859 729.288 373.688 729.288 372.244 cv
729.288 370.8 730.459 369.63 731.903 369.63 cv
733.347 369.63 734.518 370.8 734.518 372.244 cv
cp
f
712.21 371.335 mo
712.21 372.073 711.612 372.671 710.874 372.671 cv
710.137 372.671 709.539 372.073 709.539 371.335 cv
709.539 370.597 710.137 369.999 710.874 369.999 cv
711.612 369.999 712.21 370.597 712.21 371.335 cv
cp
1 1 1 rgb
f
734.149 371.335 mo
734.149 372.073 733.551 372.671 732.813 372.671 cv
732.076 372.671 731.478 372.073 731.478 371.335 cv
731.478 370.597 732.076 369.999 732.813 369.999 cv
733.551 369.999 734.149 370.597 734.149 371.335 cv
cp
f
712.942 318.315 mo
708.496 311.003 702.878 306.002 699.22 307.267 cv
702.646 317.236 708.264 319.399 712.942 318.315 cv
cp
.407843 .337255 .305882 rgb
f
742.648 307.267 mo
738.99 306.002 733.372 311.003 728.926 318.315 cv
733.604 319.399 739.222 317.236 742.648 307.267 cv
cp
f
721.105 393.125 mo
721.105 395.957 718.809 398.253 715.977 398.253 cv
713.144 398.253 710.849 395.957 710.849 393.125 cv
710.849 390.292 713.144 387.997 715.977 387.997 cv
718.809 387.997 721.105 390.292 721.105 393.125 cv
cp
.109804 .109804 .109804 rgb
f
731.019 393.125 mo
731.019 395.957 728.723 398.253 725.891 398.253 cv
723.059 398.253 720.763 395.957 720.763 393.125 cv
720.763 390.292 723.059 387.997 725.891 387.997 cv
728.723 387.997 731.019 390.292 731.019 393.125 cv
cp
f
720.934 392.1 mo
720.934 394.932 718.638 397.228 715.806 397.228 cv
712.974 397.228 710.678 394.932 710.678 392.1 cv
710.678 389.267 712.974 386.972 715.806 386.972 cv
717.22 386.972 720.934 389.267 720.934 392.1 cv
cp
.6 .466667 .337255 rgb
f
731.19 392.1 mo
731.19 394.932 728.894 397.228 726.062 397.228 cv
723.23 397.228 720.934 394.932 720.934 392.1 cv
720.934 389.267 724.436 386.972 726.062 386.972 cv
728.894 386.972 731.19 389.267 731.19 392.1 cv
cp
f
726.21 386.412 mo
726.088 386.32 li
725.936 386.205 725.687 386.205 725.535 386.32 cv
721.094 389.656 li
721.023 389.709 720.844 389.709 720.774 389.656 cv
716.333 386.32 li
716.181 386.205 715.932 386.205 715.78 386.32 cv
715.657 386.412 li
715.36 386.635 715.36 387.001 715.657 387.224 cv
720.474 390.84 li
720.529 394.118 li
720.532 394.343 720.715 394.523 720.934 394.523 cv
721.153 394.523 721.336 394.343 721.339 394.118 cv
721.394 390.855 li
721.399 390.852 721.402 390.852 721.409 390.847 cv
726.21 387.224 li
726.508 387.001 726.508 386.635 726.21 386.412 cv
cp
.109804 .109804 .109804 rgb
f
720.934 419.773 mo
725.763 419.773 730.464 419.227 734.979 418.194 cv
731.313 412.493 726.296 408.978 720.763 408.978 cv
715.252 408.978 710.254 412.464 706.591 418.124 cv
711.198 419.203 715.999 419.773 720.934 419.773 cv
cp
.866667 .694118 .521569 rgb
f
643.698 357.079 mo
643.698 377.842 633.605 396.247 618.057 407.657 cv
607.677 415.275 594.89 413.625 581.028 413.625 cv
567.207 413.625 554.405 415.301 544.041 407.724 cv
528.441 396.32 518.308 377.883 518.308 357.079 cv
518.308 322.454 546.378 294.384 581.003 294.384 cv
615.628 294.384 643.698 322.454 643.698 357.079 cv
cp
.34902 .823529 .847059 rgb
f
612.269 325.906 mo
581.028 411.015 li
582.075 411.067 583.44 413.783 584.5 413.783 cv
598.316 413.783 607.591 415.304 617.953 407.733 cv
633.495 396.375 643.614 378.038 643.696 357.333 cv
612.269 325.906 li
cp
.25098 .627451 .627451 rgb
f
594.151 329.809 mo
594.151 329.809 606.354 318.492 612.996 326.711 cv
619.637 334.929 608.322 353.05 608.322 353.05 cv
608.322 353.05 590.423 344.71 590.772 343.942 cv
591.122 343.174 594.151 329.809 594.151 329.809 cv
cp
.94902 .94902 .94902 rgb
f
597.628 332.956 mo
597.628 332.956 605.073 326.051 609.125 331.066 cv
613.177 336.08 606.274 347.135 606.274 347.135 cv
606.274 347.135 595.353 342.047 595.567 341.578 cv
595.78 341.11 597.628 332.956 597.628 332.956 cv
cp
.458824 .458824 .458824 rgb
f
567.855 329.809 mo
567.855 329.809 555.652 318.492 549.01 326.711 cv
542.369 334.929 553.684 353.05 553.684 353.05 cv
553.684 353.05 571.584 344.71 571.234 343.942 cv
570.884 343.174 567.855 329.809 567.855 329.809 cv
cp
.94902 .94902 .94902 rgb
f
564.378 332.956 mo
564.378 332.956 556.933 326.051 552.881 331.066 cv
548.829 336.08 555.733 347.135 555.733 347.135 cv
555.733 347.135 566.653 342.047 566.44 341.578 cv
566.226 341.11 564.378 332.956 564.378 332.956 cv
cp
.458824 .458824 .458824 rgb
f
581.028 366.831 mo
560.352 366.831 543.591 382.686 543.591 402.243 cv
543.591 404.106 543.744 405.936 544.038 407.721 cv
554.402 415.3 567.18 419.773 581.003 419.773 cv
594.852 419.773 607.651 415.283 618.026 407.679 cv
618.314 405.907 618.465 404.092 618.465 402.243 cv
618.465 382.686 601.704 366.831 581.028 366.831 cv
cp
.898039 .898039 .898039 rgb
f
581.028 371.881 mo
568.096 371.881 557.613 383.636 557.613 398.137 cv
557.613 405.996 560.694 413.048 565.574 417.86 cv
570.51 419.109 575.679 419.773 581.003 419.773 cv
586.351 419.773 591.543 419.103 596.499 417.843 cv
601.369 413.032 604.443 405.987 604.443 398.137 cv
604.443 383.636 593.96 371.881 581.028 371.881 cv
cp
.74902 .74902 .74902 rgb
f
611.899 362.801 mo
611.899 379.851 598.078 383.442 581.028 383.442 cv
563.978 383.442 550.156 379.851 550.156 362.801 cv
550.156 345.751 554.837 327.858 581.028 327.858 cv
607.219 327.858 611.899 345.751 611.899 362.801 cv
cp
.94902 .94902 .94902 rgb
f
591.891 350.875 mo
589.255 350.875 587.117 353.013 587.117 355.65 cv
587.117 355.98 587.151 356.302 587.214 356.614 cv
585.952 355.522 584.311 354.858 582.521 354.858 cv
579.485 354.858 li
577.695 354.858 576.054 355.522 574.792 356.614 cv
574.855 356.302 574.889 355.98 574.889 355.65 cv
574.889 353.013 572.751 350.875 570.115 350.875 cv
567.478 350.875 565.34 353.013 565.34 355.65 cv
565.34 358.286 567.478 360.424 570.115 360.424 cv
571.069 360.424 571.958 360.143 572.704 359.66 cv
572.437 360.41 572.291 361.214 572.291 362.052 cv
572.291 364.687 li
572.291 368.644 575.528 371.881 579.485 371.881 cv
582.521 371.881 li
586.478 371.881 589.715 368.644 589.715 364.687 cv
589.715 362.052 li
589.715 361.214 589.569 360.41 589.303 359.66 cv
590.049 360.143 590.937 360.424 591.891 360.424 cv
594.528 360.424 596.666 358.286 596.666 355.65 cv
596.666 353.013 594.528 350.875 591.891 350.875 cv
cp
.74902 .74902 .74902 rgb
f
594.506 355.65 mo
594.506 357.094 593.335 358.264 591.891 358.264 cv
590.448 358.264 589.277 357.094 589.277 355.65 cv
589.277 354.206 590.448 353.035 591.891 353.035 cv
593.335 353.035 594.506 354.206 594.506 355.65 cv
cp
.109804 .109804 .109804 rgb
f
594.138 354.74 mo
594.138 355.478 593.54 356.076 592.802 356.076 cv
592.064 356.076 591.466 355.478 591.466 354.74 cv
591.466 354.003 592.064 353.405 592.802 353.405 cv
593.54 353.405 594.138 354.003 594.138 354.74 cv
cp
1 1 1 rgb
f
572.729 355.65 mo
572.729 357.094 571.559 358.264 570.115 358.264 cv
568.671 358.264 567.5 357.094 567.5 355.65 cv
567.5 354.206 568.671 353.035 570.115 353.035 cv
571.559 353.035 572.729 354.206 572.729 355.65 cv
cp
.109804 .109804 .109804 rgb
f
572.361 354.74 mo
572.361 355.478 571.763 356.076 571.025 356.076 cv
570.287 356.076 569.689 355.478 569.689 354.74 cv
569.689 354.003 570.287 353.405 571.025 353.405 cv
571.763 353.405 572.361 354.003 572.361 354.74 cv
cp
1 1 1 rgb
f
591.088 374.522 mo
590.972 374.281 590.683 374.179 590.442 374.295 cv
590.398 374.316 586.069 376.364 581.43 376.463 cv
581.43 372.62 li
585.824 372.465 589.319 369.932 589.319 366.831 cv
589.319 363.63 585.596 361.035 581.003 361.035 cv
576.41 361.035 572.687 363.63 572.687 366.831 cv
572.687 369.932 576.182 372.465 580.576 372.62 cv
580.576 376.458 li
576.208 376.308 571.648 374.31 571.601 374.289 cv
571.357 374.18 571.07 374.291 570.962 374.535 cv
570.854 374.78 570.964 375.065 571.208 375.174 cv
571.416 375.266 576.361 377.436 581.085 377.436 cv
586.079 377.436 590.668 375.26 590.861 375.168 cv
591.102 375.052 591.203 374.763 591.088 374.522 cv
cp
.188235 .188235 .188235 rgb
f
503.274 357.079 mo
503.274 377.876 493.148 396.308 477.557 407.713 cv
467.19 415.297 454.408 416.083 440.58 416.083 cv
426.748 416.083 413.962 415.294 403.594 407.707 cv
388.008 396.301 377.885 377.872 377.885 357.079 cv
377.885 322.454 405.954 294.384 440.58 294.384 cv
475.205 294.384 503.274 322.454 503.274 357.079 cv
cp
.415686 .839216 .356863 rgb
f
503.267 356.153 mo
474.972 327.858 li
467.172 330.828 li
461.478 336.409 li
451.468 338.471 li
419.5 340.723 li
426.723 359.547 li
439.833 407.417 li
442.572 407.782 444.244 410.75 447.083 410.75 cv
460.882 410.75 467.136 415.316 477.491 407.761 cv
493.12 396.36 503.274 377.905 503.274 357.079 cv
503.274 356.77 503.271 356.461 503.267 356.153 cv
cp
.345098 .647059 .290196 rgb
f
440.605 366.831 mo
419.929 366.831 403.168 382.686 403.168 402.243 cv
403.168 404.106 403.321 405.936 403.614 407.721 cv
413.979 415.3 426.757 419.773 440.58 419.773 cv
454.428 419.773 467.228 415.283 477.602 407.679 cv
477.891 405.907 478.041 404.092 478.041 402.243 cv
478.041 382.686 461.28 366.831 440.605 366.831 cv
cp
.576471 .368627 .164706 rgb
f
440.605 371.881 mo
427.673 371.881 417.19 383.636 417.19 398.137 cv
417.19 405.996 420.27 413.048 425.15 417.86 cv
430.087 419.109 435.255 419.773 440.58 419.773 cv
445.928 419.773 451.119 419.103 456.076 417.843 cv
460.946 413.032 464.02 405.987 464.02 398.137 cv
464.02 383.636 453.536 371.881 440.605 371.881 cv
cp
.427451 .278431 .129412 rgb
f
477.016 333.526 mo
477.016 328.62 473.039 324.643 468.133 324.643 cv
463.577 324.643 459.825 328.073 459.312 332.491 cv
454.82 329.591 448.754 327.858 440.605 327.858 cv
432.427 327.858 426.347 329.602 421.851 332.52 cv
421.352 328.088 417.592 324.643 413.027 324.643 cv
408.121 324.643 404.143 328.62 404.143 333.526 cv
404.143 338.432 408.121 342.41 413.027 342.41 cv
413.149 342.41 413.271 342.405 413.393 342.4 cv
410.548 348.443 409.733 355.695 409.733 362.801 cv
409.733 379.851 423.555 383.442 440.605 383.442 cv
457.654 383.442 471.476 379.851 471.476 362.801 cv
471.476 355.695 470.661 348.444 467.817 342.402 cv
467.922 342.405 468.027 342.41 468.133 342.41 cv
473.039 342.41 477.016 338.432 477.016 333.526 cv
cp
.619608 .407843 .164706 rgb
f
451.468 350.875 mo
448.831 350.875 446.694 353.013 446.694 355.65 cv
446.694 355.98 446.727 356.302 446.791 356.614 cv
445.529 355.522 443.888 354.858 442.098 354.858 cv
439.061 354.858 li
437.272 354.858 435.631 355.522 434.368 356.614 cv
434.432 356.302 434.466 355.98 434.466 355.65 cv
434.466 353.013 432.328 350.875 429.691 350.875 cv
427.055 350.875 424.917 353.013 424.917 355.65 cv
424.917 358.286 427.055 360.424 429.691 360.424 cv
430.646 360.424 431.534 360.143 432.28 359.66 cv
432.014 360.41 431.867 361.214 431.867 362.052 cv
431.867 364.687 li
431.867 368.644 435.105 371.881 439.061 371.881 cv
442.098 371.881 li
446.055 371.881 449.292 368.644 449.292 364.687 cv
449.292 362.052 li
449.292 361.214 449.146 360.41 448.879 359.66 cv
449.625 360.143 450.514 360.424 451.468 360.424 cv
454.105 360.424 456.242 358.286 456.242 355.65 cv
456.242 353.013 454.105 350.875 451.468 350.875 cv
cp
.427451 .278431 .129412 rgb
f
454.083 355.65 mo
454.083 357.094 452.912 358.264 451.468 358.264 cv
450.024 358.264 448.854 357.094 448.854 355.65 cv
448.854 354.206 450.024 353.035 451.468 353.035 cv
452.912 353.035 454.083 354.206 454.083 355.65 cv
cp
.109804 .109804 .109804 rgb
f
453.714 354.74 mo
453.714 355.478 453.116 356.076 452.379 356.076 cv
451.641 356.076 451.043 355.478 451.043 354.74 cv
451.043 354.003 451.641 353.405 452.379 353.405 cv
453.116 353.405 453.714 354.003 453.714 354.74 cv
cp
1 1 1 rgb
f
432.306 355.65 mo
432.306 357.094 431.135 358.264 429.691 358.264 cv
428.247 358.264 427.077 357.094 427.077 355.65 cv
427.077 354.206 428.247 353.035 429.691 353.035 cv
431.135 353.035 432.306 354.206 432.306 355.65 cv
cp
.109804 .109804 .109804 rgb
f
431.937 354.74 mo
431.937 355.478 431.339 356.076 430.602 356.076 cv
429.864 356.076 429.266 355.478 429.266 354.74 cv
429.266 354.003 429.864 353.405 430.602 353.405 cv
431.339 353.405 431.937 354.003 431.937 354.74 cv
cp
1 1 1 rgb
f
450.665 374.522 mo
450.549 374.281 450.26 374.179 450.019 374.295 cv
449.974 374.316 445.646 376.364 441.007 376.463 cv
441.007 372.62 li
445.401 372.465 448.896 369.932 448.896 366.831 cv
448.896 363.63 445.173 361.035 440.58 361.035 cv
435.987 361.035 432.264 363.63 432.264 366.831 cv
432.264 369.932 435.758 372.465 440.153 372.62 cv
440.153 376.458 li
435.785 376.308 431.225 374.31 431.178 374.289 cv
430.933 374.18 430.647 374.291 430.539 374.535 cv
430.43 374.78 430.54 375.065 430.785 375.174 cv
430.993 375.266 435.938 377.436 440.662 377.436 cv
445.655 377.436 450.245 375.26 450.438 375.168 cv
450.679 375.052 450.78 374.763 450.665 374.522 cv
cp
.188235 .188235 .188235 rgb
f
473.077 333.526 mo
473.077 336.257 470.864 338.471 468.133 338.471 cv
465.402 338.471 463.189 336.257 463.189 333.526 cv
463.189 330.796 465.402 328.582 468.133 328.582 cv
470.864 328.582 473.077 330.796 473.077 333.526 cv
cp
.427451 .278431 .129412 rgb
f
417.971 333.526 mo
417.971 336.257 415.757 338.471 413.027 338.471 cv
410.296 338.471 408.082 336.257 408.082 333.526 cv
408.082 330.796 410.296 328.582 413.027 328.582 cv
415.757 328.582 417.971 330.796 417.971 333.526 cv
cp
f
363.131 357.079 mo
363.131 380.096 350.727 400.216 332.24 411.12 cv
322.916 416.619 312.044 414.5 300.436 414.5 cv
288.828 414.5 277.956 416.618 268.632 411.119 cv
250.145 400.215 237.742 380.095 237.742 357.079 cv
237.742 322.454 265.811 294.384 300.436 294.384 cv
335.061 294.384 363.131 322.454 363.131 357.079 cv
cp
.458824 .580392 .776471 rgb
f
363.127 356.494 mo
338.643 327.233 li
299.417 411 li
301.721 411.257 302.395 413.5 304.768 413.5 cv
316.367 413.5 322.898 416.624 332.217 411.133 cv
350.717 400.233 363.131 380.106 363.131 357.079 cv
363.131 356.884 363.129 356.689 363.127 356.494 cv
cp
.32549 .423529 .568627 rgb
f
300.436 374.536 mo
282.872 374.536 268.634 390.356 268.634 409.871 cv
268.634 410.293 268.643 410.714 268.656 411.133 cv
277.975 416.624 288.838 419.773 300.436 419.773 cv
312.035 419.773 322.897 416.624 332.216 411.133 cv
332.229 410.714 332.238 410.293 332.238 409.871 cv
332.238 390.356 318 374.536 300.436 374.536 cv
cp
.945098 .733333 .443137 rgb
f
300.436 419.773 mo
306.763 419.773 312.87 418.834 318.628 417.091 cv
318.092 398.509 310.153 383.76 300.436 383.76 cv
290.72 383.76 282.78 398.509 282.244 417.091 cv
288.002 418.834 294.109 419.773 300.436 419.773 cv
cp
.858824 .623529 .345098 rgb
f
346.815 357.079 mo
346.815 382.693 326.051 403.458 300.436 403.458 cv
274.822 403.458 254.057 382.693 254.057 357.079 cv
254.057 331.464 274.822 310.7 300.436 310.7 cv
326.051 310.7 346.815 331.464 346.815 357.079 cv
cp
.698039 .321569 .0156863 rgb
f
329.34 349.555 mo
329.34 365.505 316.411 381.648 300.461 381.648 cv
284.512 381.648 271.582 365.505 271.582 349.555 cv
271.582 341.668 283.873 330.337 298.885 337.212 cv
299.88 337.668 301.021 337.646 302.003 337.165 cv
316.058 330.281 329.34 342.284 329.34 349.555 cv
cp
.945098 .733333 .443137 rgb
f
308.038 371.386 mo
308.038 375.467 304.646 378.774 300.461 378.774 cv
296.276 378.774 292.884 375.467 292.884 371.386 cv
292.884 367.306 296.276 363.998 300.461 363.998 cv
304.646 363.998 308.038 367.306 308.038 371.386 cv
cp
1 .933333 .803922 rgb
f
308.607 368.718 mo
308.607 370.704 304.949 372.825 300.436 372.825 cv
295.924 372.825 292.266 370.704 292.266 368.718 cv
292.266 366.733 295.924 365.636 300.436 365.636 cv
304.949 365.636 308.607 366.733 308.607 368.718 cv
cp
.156863 .137255 .121569 rgb
f
300.436 366.618 mo
300.436 369.026 298.497 370.977 296.104 370.977 cv
293.712 370.977 291.773 369.026 291.773 366.618 cv
291.773 364.211 293.712 362.259 296.104 362.259 cv
298.497 362.259 300.436 364.211 300.436 366.618 cv
cp
1 .933333 .803922 rgb
f
309.1 366.618 mo
309.1 369.026 307.16 370.977 304.768 370.977 cv
302.376 370.977 300.436 369.026 300.436 366.618 cv
300.436 364.211 302.376 362.259 304.768 362.259 cv
307.16 362.259 309.1 364.211 309.1 366.618 cv
cp
f
294.241 350.979 mo
294.241 353.616 292.104 355.753 289.467 355.753 cv
286.83 355.753 284.693 353.616 284.693 350.979 cv
284.693 348.342 286.83 346.205 289.467 346.205 cv
292.104 346.205 294.241 348.342 294.241 350.979 cv
cp
f
316.18 350.979 mo
316.18 353.616 314.042 355.753 311.405 355.753 cv
308.769 355.753 306.631 353.616 306.631 350.979 cv
306.631 348.342 308.769 346.205 311.405 346.205 cv
314.042 346.205 316.18 348.342 316.18 350.979 cv
cp
f
292.082 350.979 mo
292.082 352.423 290.911 353.593 289.467 353.593 cv
288.023 353.593 286.853 352.423 286.853 350.979 cv
286.853 349.535 288.023 348.364 289.467 348.364 cv
290.911 348.364 292.082 349.535 292.082 350.979 cv
cp
.109804 .109804 .109804 rgb
f
314.02 350.979 mo
314.02 352.423 312.849 353.593 311.405 353.593 cv
309.961 353.593 308.791 352.423 308.791 350.979 cv
308.791 349.535 309.961 348.364 311.405 348.364 cv
312.849 348.364 314.02 349.535 314.02 350.979 cv
cp
f
291.712 350.069 mo
291.712 350.807 291.114 351.405 290.377 351.405 cv
289.639 351.405 289.041 350.807 289.041 350.069 cv
289.041 349.332 289.639 348.734 290.377 348.734 cv
291.114 348.734 291.712 349.332 291.712 350.069 cv
cp
1 1 1 rgb
f
313.651 350.069 mo
313.651 350.807 313.053 351.405 312.316 351.405 cv
311.578 351.405 310.98 350.807 310.98 350.069 cv
310.98 349.332 311.578 348.734 312.316 348.734 cv
313.053 348.734 313.651 349.332 313.651 350.069 cv
cp
f
305.466 360.894 mo
304.131 360.289 302.13 361.452 300.461 361.452 cv
298.792 361.452 296.791 360.289 295.456 360.894 cv
294.075 361.52 293.384 362.285 294.437 362.802 cv
298.274 364.689 298.578 367.831 300.461 368.176 cv
302.344 367.831 302.648 364.689 306.486 362.802 cv
307.538 362.285 306.848 361.52 305.466 360.894 cv
cp
.156863 .137255 .121569 rgb
f
304.247 361.459 mo
303.149 361.673 301.734 362.173 300.448 362.175 cv
299.162 362.173 297.748 361.673 296.649 361.459 cv
296.253 361.382 296.062 361.925 296.42 362.113 cv
300.844 364.431 298.322 367.393 300.436 367.393 cv
302.55 367.393 300.052 364.431 304.476 362.113 cv
304.834 361.925 304.644 361.382 304.247 361.459 cv
cp
.596078 .282353 .0823529 rgb
f
340.638 332.123 mo
340.272 327.664 336.565 324.134 332.093 323.986 cv
329.517 323.901 327.188 324.907 325.52 326.569 cv
323.156 328.924 323.268 332.792 325.685 335.093 cv
329.855 339.064 li
332.328 341.419 336.278 341.25 338.51 338.667 cv
340.007 336.934 340.843 334.62 340.638 332.123 cv
cp
.945098 .733333 .443137 rgb
f
336.728 332.743 mo
336.795 335.473 334.636 337.741 331.906 337.807 cv
329.176 337.874 326.909 335.715 326.842 332.985 cv
326.776 330.255 328.935 327.988 331.665 327.921 cv
334.394 327.855 336.662 330.014 336.728 332.743 cv
cp
.427451 .278431 .129412 rgb
f
268.346 323.982 mo
263.886 324.349 260.357 328.055 260.209 332.527 cv
260.124 335.104 261.13 337.432 262.792 339.101 cv
265.147 341.464 269.015 341.352 271.316 338.936 cv
275.287 334.765 li
277.642 332.293 277.473 328.342 274.89 326.11 cv
273.157 324.613 270.843 323.777 268.346 323.982 cv
cp
.945098 .733333 .443137 rgb
f
268.966 327.892 mo
271.696 327.825 273.963 329.984 274.03 332.714 cv
274.097 335.444 271.938 337.711 269.208 337.778 cv
266.478 337.845 264.211 335.686 264.144 332.956 cv
264.077 330.226 266.236 327.959 268.966 327.892 cv
cp
.427451 .278431 .129412 rgb
f
223.277 357.079 mo
223.277 380.146 210.819 400.304 192.264 411.191 cv
182.967 416.646 172.14 413.167 160.582 413.167 cv
148.984 413.167 138.121 416.624 128.803 411.134 cv
110.302 400.234 97.8874 380.106 97.8874 357.079 cv
97.8874 322.454 125.957 294.384 160.582 294.384 cv
195.207 294.384 223.277 322.454 223.277 357.079 cv
cp
.717647 .368627 .513726 rgb
f
197.722 332.022 mo
198.554 338.848 li
194.435 334.729 li
154.072 394.504 li
158.75 408.667 li
162.134 409.232 167.039 410.083 170.583 410.083 cv
182.181 410.083 185.563 410 192.36 411.133 cv
192.396 411.111 192.431 411.089 192.467 411.067 cv
193.298 410.576 194.114 410.061 194.92 409.533 cv
195.062 409.44 195.205 409.349 195.346 409.254 cv
196.154 408.715 196.948 408.157 197.729 407.581 cv
197.874 407.474 198.017 407.365 198.162 407.257 cv
198.965 406.654 199.758 406.039 200.53 405.399 cv
200.533 405.397 200.535 405.395 200.537 405.394 cv
201.316 404.749 202.074 404.081 202.82 403.4 cv
202.934 403.296 203.049 403.193 203.162 403.089 cv
203.886 402.418 204.595 401.73 205.287 401.026 cv
205.39 400.921 205.492 400.814 205.595 400.708 cv
207.022 399.235 208.379 397.693 209.657 396.086 cv
209.735 395.988 209.815 395.89 209.892 395.792 cv
210.521 394.992 211.131 394.177 211.721 393.346 cv
211.78 393.262 211.839 393.177 211.898 393.092 cv
213.108 391.371 214.234 389.587 215.268 387.745 cv
215.314 387.664 215.359 387.584 215.404 387.504 cv
215.917 386.582 216.408 385.645 216.875 384.695 cv
216.9 384.644 216.924 384.593 216.949 384.542 cv
217.898 382.598 218.749 380.597 219.496 378.546 cv
219.52 378.481 219.544 378.416 219.568 378.35 cv
219.938 377.324 220.283 376.286 220.6 375.236 cv
220.607 375.215 220.613 375.192 220.62 375.171 cv
221.259 373.045 221.787 370.871 222.201 368.657 cv
222.873 365.059 223.239 361.354 223.268 357.568 cv
197.722 332.022 li
cp
.529412 .282353 .396078 rgb
f
160.582 374.536 mo
143.018 374.536 128.78 390.356 128.78 409.871 cv
128.78 410.293 128.789 410.714 128.802 411.133 cv
138.121 416.624 148.983 419.773 160.582 419.773 cv
172.18 419.773 183.043 416.624 192.362 411.133 cv
192.375 410.714 192.384 410.293 192.384 409.871 cv
192.384 390.356 178.146 374.536 160.582 374.536 cv
cp
.898039 .690196 .439216 rgb
f
160.582 419.773 mo
166.909 419.773 173.016 418.834 178.774 417.091 cv
178.238 398.509 170.299 390.917 160.582 390.917 cv
150.865 390.917 142.926 398.509 142.39 417.091 cv
148.148 418.834 154.255 419.773 160.582 419.773 cv
cp
.858824 .623529 .345098 rgb
f
192.587 348.773 mo
192.587 366.433 178.27 384.309 160.61 384.309 cv
142.949 384.309 128.632 366.433 128.632 348.773 cv
128.632 340.04 143.459 330.677 160.596 330.677 cv
177.732 330.677 192.587 340.721 192.587 348.773 cv
cp
.945098 .733333 .443137 rgb
f
168.999 372.946 mo
168.999 377.464 165.243 381.127 160.61 381.127 cv
155.976 381.127 152.22 377.464 152.22 372.946 cv
152.22 368.428 155.976 364.765 160.61 364.765 cv
165.243 364.765 168.999 368.428 168.999 372.946 cv
cp
1 .933333 .803922 rgb
f
169.629 369.992 mo
169.629 372.19 165.579 374.54 160.582 374.54 cv
155.585 374.54 151.535 372.19 151.535 369.992 cv
151.535 367.794 155.585 366.579 160.582 366.579 cv
165.579 366.579 169.629 367.794 169.629 369.992 cv
cp
.156863 .137255 .121569 rgb
f
160.582 367.666 mo
160.582 370.332 158.435 372.493 155.786 372.493 cv
153.137 372.493 150.989 370.332 150.989 367.666 cv
150.989 365.001 153.137 362.84 155.786 362.84 cv
158.435 362.84 160.582 365.001 160.582 367.666 cv
cp
1 .933333 .803922 rgb
f
170.175 367.666 mo
170.175 370.332 168.027 372.493 165.378 372.493 cv
162.729 372.493 160.582 370.332 160.582 367.666 cv
160.582 365.001 162.729 362.84 165.378 362.84 cv
168.027 362.84 170.175 365.001 170.175 367.666 cv
cp
f
153.723 350.349 mo
153.723 353.269 151.356 355.636 148.436 355.636 cv
145.516 355.636 143.15 353.269 143.15 350.349 cv
143.15 347.43 145.516 345.063 148.436 345.063 cv
151.356 345.063 153.723 347.43 153.723 350.349 cv
cp
f
178.014 350.349 mo
178.014 353.269 175.648 355.636 172.728 355.636 cv
169.808 355.636 167.441 353.269 167.441 350.349 cv
167.441 347.43 169.808 345.063 172.728 345.063 cv
175.648 345.063 178.014 347.43 178.014 350.349 cv
cp
f
151.331 350.349 mo
151.331 351.948 150.035 353.244 148.436 353.244 cv
146.837 353.244 145.541 351.948 145.541 350.349 cv
145.541 348.75 146.837 347.454 148.436 347.454 cv
150.035 347.454 151.331 348.75 151.331 350.349 cv
cp
.109804 .109804 .109804 rgb
f
175.623 350.349 mo
175.623 351.948 174.327 353.244 172.728 353.244 cv
171.129 353.244 169.833 351.948 169.833 350.349 cv
169.833 348.75 171.129 347.454 172.728 347.454 cv
174.327 347.454 175.623 348.75 175.623 350.349 cv
cp
f
150.922 349.342 mo
150.922 350.159 150.26 350.821 149.443 350.821 cv
148.626 350.821 147.964 350.159 147.964 349.342 cv
147.964 348.526 148.626 347.863 149.443 347.863 cv
150.26 347.863 150.922 348.526 150.922 349.342 cv
cp
1 1 1 rgb
f
175.215 349.342 mo
175.215 350.159 174.553 350.821 173.736 350.821 cv
172.919 350.821 172.257 350.159 172.257 349.342 cv
172.257 348.526 172.919 347.863 173.736 347.863 cv
174.553 347.863 175.215 348.526 175.215 349.342 cv
cp
f
166.151 361.328 mo
164.674 360.659 162.458 361.946 160.61 361.946 cv
158.761 361.946 156.546 360.659 155.068 361.328 cv
153.538 362.022 152.773 362.868 153.939 363.441 cv
158.188 365.53 158.525 369.009 160.61 369.392 cv
162.694 369.009 163.032 365.53 167.28 363.441 cv
168.446 362.868 167.681 362.022 166.151 361.328 cv
cp
.156863 .137255 .121569 rgb
f
164.802 361.954 mo
163.585 362.191 162.019 362.744 160.595 362.747 cv
159.171 362.744 157.605 362.191 156.389 361.954 cv
155.95 361.868 155.739 362.47 156.135 362.678 cv
161.034 365.244 158.241 368.524 160.582 368.524 cv
162.923 368.524 160.157 365.244 165.055 362.678 cv
165.452 362.47 165.241 361.868 164.802 361.954 cv
cp
.596078 .282353 .0823529 rgb
f
200.841 338.4 mo
200.435 333.463 196.331 329.554 191.379 329.391 cv
188.526 329.296 185.948 330.41 184.1 332.251 cv
181.483 334.858 181.608 339.141 184.283 341.689 cv
188.901 346.087 li
191.639 348.694 196.013 348.507 198.485 345.646 cv
200.142 343.728 201.068 341.166 200.841 338.4 cv
cp
.945098 .733333 .443137 rgb
f
196.512 339.087 mo
196.585 342.11 194.195 344.621 191.172 344.695 cv
188.149 344.768 185.639 342.378 185.565 339.355 cv
185.491 336.332 187.882 333.822 190.904 333.748 cv
193.927 333.674 196.438 336.065 196.512 339.087 cv
cp
.427451 .278431 .129412 rgb
f
129.305 329.354 mo
124.367 329.759 120.458 333.863 120.295 338.815 cv
120.201 341.668 121.314 344.246 123.155 346.094 cv
125.763 348.711 130.046 348.586 132.593 345.911 cv
136.991 341.293 li
139.598 338.556 139.411 334.181 136.551 331.71 cv
134.632 330.052 132.07 329.127 129.305 329.354 cv
cp
.945098 .733333 .443137 rgb
f
129.992 333.683 mo
133.015 333.609 135.525 335.999 135.599 339.022 cv
135.673 342.045 133.282 344.555 130.259 344.629 cv
127.237 344.703 124.726 342.313 124.652 339.29 cv
124.579 336.267 126.969 333.757 129.992 333.683 cv
cp
.427451 .278431 .129412 rgb
f
223.277 517.637 mo
223.277 538.383 213.199 556.777 197.672 568.188 cv
187.286 575.822 174.485 571.875 160.607 571.875 cv
146.781 571.875 133.976 575.856 123.61 568.275 cv
108.016 556.87 97.8874 538.436 97.8874 517.637 cv
97.8874 483.011 125.957 454.942 160.582 454.942 cv
195.207 454.942 223.277 483.011 223.277 517.637 cv
cp
.356863 .513726 .827451 rgb
f
223.269 516.711 mo
194.974 488.415 li
187.175 491.386 li
181.48 496.966 li
171.47 499.029 li
143.942 507.147 li
146.725 520.105 li
155.625 568.375 li
158.364 568.741 161.911 571.625 164.75 571.625 cv
178.602 571.625 187.236 575.839 197.612 568.232 cv
213.173 556.824 223.277 538.41 223.277 517.637 cv
223.277 517.327 223.274 517.019 223.269 516.711 cv
cp
.286275 .427451 .647059 rgb
f
160.607 527.389 mo
139.931 527.389 123.17 543.243 123.17 562.801 cv
123.17 564.664 123.323 566.494 123.617 568.279 cv
129.988 572.938 137.272 576.424 145.151 578.418 cv
147.938 575.578 154.55 576.125 159.875 576.125 cv
165.22 576.125 172.484 575.922 176.069 578.404 cv
183.949 576.401 191.234 572.906 197.605 568.237 cv
197.893 566.465 198.044 564.649 198.044 562.801 cv
198.044 543.243 181.283 527.389 160.607 527.389 cv
cp
.0823529 .0862745 .101961 rgb
f
160.607 532.439 mo
147.675 532.439 137.192 544.194 137.192 558.695 cv
137.192 566.554 140.273 573.606 145.153 578.417 cv
150.089 579.667 155.258 580.331 160.582 580.331 cv
165.93 580.331 171.122 579.661 176.078 578.401 cv
180.948 573.589 184.022 566.545 184.022 558.695 cv
184.022 544.194 173.539 532.439 160.607 532.439 cv
cp
.909804 .909804 .909804 rgb
f
191.478 523.359 mo
191.478 540.409 177.657 543.999 160.607 543.999 cv
143.557 543.999 129.735 540.409 129.735 523.359 cv
129.735 506.309 134.416 488.415 160.607 488.415 cv
186.797 488.415 191.478 506.309 191.478 523.359 cv
cp
.972549 .972549 .972549 rgb
f
162.302 532.439 mo
158.862 532.439 li
155.016 532.439 151.87 529.292 151.87 525.446 cv
151.87 523.626 li
151.87 519.78 155.016 516.634 158.862 516.634 cv
162.302 516.634 li
166.148 516.634 169.294 519.78 169.294 523.626 cv
169.294 525.446 li
169.294 529.292 166.148 532.439 162.302 532.439 cv
cp
.807843 .807843 .807843 rgb
f
170.667 535.08 mo
170.551 534.839 170.262 534.737 170.021 534.852 cv
169.977 534.874 165.648 536.922 161.009 537.021 cv
161.009 533.178 li
165.403 533.023 168.898 530.49 168.898 527.389 cv
168.898 524.188 165.175 521.593 160.582 521.593 cv
155.989 521.593 152.266 524.188 152.266 527.389 cv
152.266 530.49 155.761 533.023 160.155 533.178 cv
160.155 537.016 li
155.787 536.866 151.227 534.867 151.18 534.846 cv
150.936 534.738 150.649 534.848 150.541 535.093 cv
150.432 535.337 150.543 535.623 150.787 535.732 cv
150.995 535.824 155.94 537.994 160.664 537.994 cv
165.657 537.994 170.247 535.818 170.44 535.726 cv
170.681 535.61 170.782 535.321 170.667 535.08 cv
cp
.188235 .188235 .188235 rgb
f
188.135 485.201 mo
183.229 485.201 179.252 489.178 179.252 494.084 cv
179.252 498.99 183.229 502.967 188.135 502.967 cv
193.041 502.967 197.018 498.99 197.018 494.084 cv
197.018 489.178 193.041 485.201 188.135 485.201 cv
cp
.0823529 .0862745 .101961 rgb
f
133.029 485.201 mo
128.123 485.201 124.146 489.178 124.146 494.084 cv
124.146 498.99 128.123 502.967 133.029 502.967 cv
137.935 502.967 141.912 498.99 141.912 494.084 cv
141.912 489.178 137.935 485.201 133.029 485.201 cv
cp
f
177.846 521.593 mo
175.429 524.555 167.162 518.844 167.162 516.207 cv
167.162 513.571 169.299 511.433 171.936 511.433 cv
174.573 511.433 180.263 518.63 177.846 521.593 cv
cp
f
174.551 516.207 mo
174.551 517.651 173.38 518.822 171.936 518.822 cv
170.492 518.822 169.322 517.651 169.322 516.207 cv
169.322 514.763 170.492 513.593 171.936 513.593 cv
173.38 513.593 174.551 514.763 174.551 516.207 cv
cp
.109804 .109804 .109804 rgb
f
171.936 514.093 mo
170.77 514.093 169.822 515.041 169.822 516.207 cv
169.822 517.373 170.77 518.322 171.936 518.322 cv
173.102 518.322 174.051 517.373 174.051 516.207 cv
174.051 515.041 173.102 514.093 171.936 514.093 cv
cp
171.936 519.322 mo
170.219 519.322 168.822 517.925 168.822 516.207 cv
168.822 514.49 170.219 513.093 171.936 513.093 cv
173.653 513.093 175.051 514.49 175.051 516.207 cv
175.051 517.925 173.653 519.322 171.936 519.322 cv
cp
.486275 .486275 .486275 rgb
f
174.182 515.298 mo
174.182 516.036 173.584 516.634 172.847 516.634 cv
172.109 516.634 171.511 516.036 171.511 515.298 cv
171.511 514.56 172.109 513.962 172.847 513.962 cv
173.584 513.962 174.182 514.56 174.182 515.298 cv
cp
1 1 1 rgb
f
143.318 521.593 mo
145.735 524.555 154.002 518.844 154.002 516.207 cv
154.002 513.571 151.865 511.433 149.228 511.433 cv
146.591 511.433 140.901 518.63 143.318 521.593 cv
cp
.0823529 .0862745 .101961 rgb
f
146.613 516.207 mo
146.613 517.651 147.784 518.822 149.228 518.822 cv
150.672 518.822 151.842 517.651 151.842 516.207 cv
151.842 514.763 150.672 513.593 149.228 513.593 cv
147.784 513.593 146.613 514.763 146.613 516.207 cv
cp
.109804 .109804 .109804 rgb
f
149.228 514.093 mo
148.062 514.093 147.113 515.041 147.113 516.207 cv
147.113 517.373 148.062 518.322 149.228 518.322 cv
150.394 518.322 151.342 517.373 151.342 516.207 cv
151.342 515.041 150.394 514.093 149.228 514.093 cv
cp
149.228 519.322 mo
147.51 519.322 146.113 517.925 146.113 516.207 cv
146.113 514.49 147.51 513.093 149.228 513.093 cv
150.945 513.093 152.342 514.49 152.342 516.207 cv
152.342 517.925 150.945 519.322 149.228 519.322 cv
cp
.486275 .486275 .486275 rgb
f
148.946 515.44 mo
148.946 516.178 149.544 516.776 150.282 516.776 cv
151.02 516.776 151.618 516.178 151.618 515.44 cv
151.618 514.703 151.02 514.105 150.282 514.105 cv
149.544 514.105 148.946 514.703 148.946 515.44 cv
cp
1 1 1 rgb
f
363.131 517.637 mo
363.131 540.68 350.699 560.819 332.177 571.714 cv
322.041 569.625 313.207 571.25 301.625 571.25 cv
290.014 571.25 276.283 566.25 268.627 571.674 cv
250.142 560.769 237.742 540.651 237.742 517.637 cv
237.742 483.011 265.811 454.942 300.436 454.942 cv
335.061 454.942 363.131 483.011 363.131 517.637 cv
cp
.717647 .368627 .513726 rgb
f
363.131 517.637 mo
363.131 513.374 362.705 509.211 361.894 505.188 cv
335.108 478.401 li
311.822 500.156 li
302.395 536.086 li
322.041 568.25 li
326.889 566.8 328.125 568.875 332.151 571.729 cv
350.688 560.837 363.131 540.69 363.131 517.637 cv
cp
.568627 .298039 .419608 rgb
f
333.703 501.943 mo
335.661 492.826 338.413 477.046 333.728 478.09 cv
327.637 479.447 318.902 488.456 315.93 491.692 cv
315.29 492.39 314.313 492.66 313.4 492.407 cv
309.367 491.29 304.984 490.634 300.451 490.634 cv
295.874 490.634 291.452 491.257 287.39 492.337 cv
286.485 492.578 285.522 492.306 284.888 491.617 cv
281.936 488.412 273.234 479.447 267.144 478.09 cv
262.46 477.046 265.211 492.826 267.17 501.943 cv
267.193 502.049 267.22 502.153 267.251 502.255 cv
267.66 503.574 267.545 504.989 266.998 506.258 cv
266.457 507.514 266.17 508.784 266.17 510.043 cv
266.17 528.984 281.525 542.934 300.466 542.934 cv
319.407 542.934 334.762 528.984 334.762 510.043 cv
334.762 508.841 334.452 507.598 333.871 506.348 cv
333.272 505.06 333.217 503.591 333.628 502.232 cv
333.656 502.138 333.681 502.041 333.703 501.943 cv
cp
1 .6 .121569 rgb
f
319.754 498.023 mo
318.428 497.612 317.931 495.995 318.794 494.908 cv
321.053 492.064 325.155 487.623 329.355 486.687 cv
332.005 486.097 330.448 495.023 329.341 500.18 cv
329.033 501.612 327.329 502.224 326.181 501.314 cv
324.782 500.206 322.695 498.935 319.754 498.023 cv
cp
.8 .478431 .121569 rgb
f
281.119 498.023 mo
282.445 497.612 282.942 495.995 282.078 494.908 cv
279.819 492.064 275.718 487.623 271.517 486.687 cv
268.868 486.097 270.424 495.023 271.532 500.18 cv
271.84 501.612 273.544 502.224 274.692 501.314 cv
276.09 500.206 278.178 498.935 281.119 498.023 cv
cp
f
300.436 530.833 mo
282.872 530.833 268.634 550.914 268.634 570.428 cv
268.634 570.851 268.643 571.271 268.656 571.691 cv
272.89 574.185 277.443 576.197 282.238 577.649 cv
286 571.714 294.588 574.667 300.917 574.667 cv
307.243 574.667 313.463 572.583 318.628 577.651 cv
323.426 576.198 327.98 574.186 332.216 571.691 cv
332.229 571.271 332.238 570.851 332.238 570.428 cv
332.238 550.914 318 530.833 300.436 530.833 cv
cp
1 .6 .121569 rgb
f
300.436 580.331 mo
306.763 580.331 312.87 579.392 318.628 577.649 cv
318.092 559.067 310.153 549.697 300.436 549.697 cv
290.72 549.697 282.78 559.067 282.244 577.649 cv
288.002 579.392 294.109 580.331 300.436 580.331 cv
cp
1 .976471 .933333 rgb
f
300.436 521.557 mo
288.504 521.557 278.832 527.792 278.832 535.483 cv
278.832 535.594 278.834 535.705 278.838 535.816 cv
284.739 540.318 292.266 542.934 300.466 542.934 cv
308.638 542.934 316.141 540.335 322.033 535.861 cv
322.038 535.736 322.041 535.609 322.041 535.483 cv
322.041 527.792 312.368 521.557 300.436 521.557 cv
cp
f
293.079 511.733 mo
293.079 514.865 290.541 517.403 287.41 517.403 cv
284.278 517.403 281.74 514.865 281.74 511.733 cv
281.74 508.602 284.278 506.064 287.41 506.064 cv
290.541 506.064 293.079 508.602 293.079 511.733 cv
cp
.988235 .682353 .34902 rgb
f
319.133 511.733 mo
319.133 514.865 316.594 517.403 313.463 517.403 cv
310.331 517.403 307.793 514.865 307.793 511.733 cv
307.793 508.602 310.331 506.064 313.463 506.064 cv
316.594 506.064 319.133 508.602 319.133 511.733 cv
cp
f
290.515 511.733 mo
290.515 513.448 289.124 514.838 287.41 514.838 cv
285.695 514.838 284.305 513.448 284.305 511.733 cv
284.305 510.019 285.695 508.628 287.41 508.628 cv
289.124 508.628 290.515 510.019 290.515 511.733 cv
cp
.109804 .109804 .109804 rgb
f
316.568 511.733 mo
316.568 513.448 315.178 514.838 313.463 514.838 cv
311.748 514.838 310.358 513.448 310.358 511.733 cv
310.358 510.019 311.748 508.628 313.463 508.628 cv
315.178 508.628 316.568 510.019 316.568 511.733 cv
cp
f
290.076 510.653 mo
290.076 511.53 289.366 512.24 288.49 512.24 cv
287.614 512.24 286.903 511.53 286.903 510.653 cv
286.903 509.777 287.614 509.067 288.49 509.067 cv
289.366 509.067 290.076 509.777 290.076 510.653 cv
cp
1 1 1 rgb
f
316.13 510.653 mo
316.13 511.53 315.42 512.24 314.544 512.24 cv
313.668 512.24 312.958 511.53 312.958 510.653 cv
312.958 509.777 313.668 509.067 314.544 509.067 cv
315.42 509.067 316.13 509.777 316.13 510.653 cv
cp
f
306.545 535.078 mo
306.475 534.932 306.301 534.871 306.155 534.941 cv
306.128 534.954 303.512 536.191 300.709 536.251 cv
300.709 533.169 li
302.812 533.028 304.475 531.279 304.475 529.14 cv
304.475 526.91 302.667 525.102 300.436 525.102 cv
298.206 525.102 296.398 526.91 296.398 529.14 cv
296.398 531.289 298.076 533.045 300.193 533.171 cv
300.193 536.248 li
297.553 536.158 294.797 534.95 294.769 534.937 cv
294.621 534.871 294.448 534.938 294.383 535.086 cv
294.317 535.234 294.384 535.407 294.531 535.472 cv
294.657 535.528 297.646 536.839 300.5 536.839 cv
303.518 536.839 306.292 535.524 306.408 535.469 cv
306.554 535.398 306.615 535.224 306.545 535.078 cv
cp
.188235 .188235 .188235 rgb
f
503.274 517.637 mo
503.274 540.749 490.768 560.94 472.154 571.812 cv
464 564.5 452.545 567.833 441.032 567.833 cv
429.527 567.833 417.5 564.5 409.025 571.823 cv
390.4 560.954 377.885 540.757 377.885 517.637 cv
377.885 483.011 405.954 454.942 440.58 454.942 cv
475.205 454.942 503.274 483.011 503.274 517.637 cv
cp
.270588 .368627 .513726 rgb
f
469.787 500.156 mo
441.032 538.417 li
458.128 563.167 li
466.396 562.028 466.833 565.868 472.149 571.814 cv
490.766 560.943 503.274 540.751 503.274 517.637 cv
503.274 513.206 502.814 508.883 501.94 504.712 cv
471.275 474.177 li
469.787 500.156 li
cp
.192157 .266667 .356863 rgb
f
431.445 493.064 mo
431.445 493.064 419.515 475.121 411.529 473.733 cv
403.542 472.346 411.529 512.591 411.529 512.591 cv
431.445 493.064 li
cp
.627451 .627451 .627451 rgb
f
428.468 496.749 mo
428.468 496.749 420.86 485.307 415.767 484.422 cv
410.674 483.537 415.767 509.201 415.767 509.201 cv
428.468 496.749 li
cp
.478431 .478431 .478431 rgb
f
449.714 493.064 mo
449.714 493.064 461.644 475.121 469.631 473.733 cv
477.618 472.346 469.631 512.591 469.631 512.591 cv
449.714 493.064 li
cp
.627451 .627451 .627451 rgb
f
452.692 496.749 mo
452.692 496.749 460.3 485.307 465.393 484.422 cv
470.486 483.537 465.393 509.201 465.393 509.201 cv
452.692 496.749 li
cp
.478431 .478431 .478431 rgb
f
440.58 535.094 mo
423.016 535.094 408.778 550.914 408.778 570.428 cv
408.778 570.851 408.787 571.271 408.8 571.691 cv
413.036 574.187 417.591 576.199 422.39 577.651 cv
428.147 579.394 434.254 573.75 440.58 573.75 cv
446.944 573.75 453.086 579.383 458.873 577.62 cv
463.634 576.17 468.154 574.169 472.36 571.691 cv
472.373 571.271 472.382 570.851 472.382 570.428 cv
472.382 550.914 458.144 535.094 440.58 535.094 cv
cp
.627451 .627451 .627451 rgb
f
440.58 580.331 mo
446.907 580.331 453.014 579.392 458.772 577.649 cv
458.236 559.067 450.297 551.405 440.58 551.405 cv
430.863 551.405 422.924 559.067 422.388 577.649 cv
428.146 579.392 434.253 580.331 440.58 580.331 cv
cp
.756863 .756863 .756863 rgb
f
472.798 510.148 mo
472.798 527.926 458.386 545.92 440.607 545.92 cv
422.829 545.92 408.417 527.926 408.417 510.148 cv
408.417 501.357 423.343 491.931 440.594 491.931 cv
457.844 491.931 472.798 502.043 472.798 510.148 cv
cp
.627451 .627451 .627451 rgb
f
440.608 518.391 mo
428.062 518.391 417.596 523.915 415.189 531.256 cv
421.078 539.84 430.274 545.92 440.608 545.92 cv
450.941 545.92 460.137 539.84 466.027 531.256 cv
463.619 523.915 453.153 518.391 440.608 518.391 cv
cp
.756863 .756863 .756863 rgb
f
446.993 534.482 mo
446.993 537.92 444.134 540.708 440.607 540.708 cv
437.081 540.708 434.222 537.92 434.222 534.482 cv
434.222 531.043 437.081 528.255 440.607 528.255 cv
444.134 528.255 446.993 531.043 446.993 534.482 cv
cp
.878431 .878431 .878431 rgb
f
448.196 531.508 mo
448.196 533.721 444.786 536.086 440.58 536.086 cv
436.373 536.086 432.963 533.721 432.963 531.508 cv
432.963 529.295 436.373 528.073 440.58 528.073 cv
444.786 528.073 448.196 529.295 448.196 531.508 cv
cp
.156863 .137255 .121569 rgb
f
440.58 529.167 mo
440.58 531.85 438.418 534.026 435.751 534.026 cv
433.085 534.026 430.923 531.85 430.923 529.167 cv
430.923 526.484 433.085 524.308 435.751 524.308 cv
438.418 524.308 440.58 526.484 440.58 529.167 cv
cp
.878431 .878431 .878431 rgb
f
450.237 529.167 mo
450.237 531.85 448.075 534.026 445.408 534.026 cv
442.742 534.026 440.58 531.85 440.58 529.167 cv
440.58 526.484 442.742 524.308 445.408 524.308 cv
448.075 524.308 450.237 526.484 450.237 529.167 cv
cp
f
433.675 511.735 mo
433.675 514.674 431.292 517.056 428.353 517.056 cv
425.414 517.056 423.031 514.674 423.031 511.735 cv
423.031 508.796 425.414 506.413 428.353 506.413 cv
431.292 506.413 433.675 508.796 433.675 511.735 cv
cp
.478431 .478431 .478431 rgb
f
458.128 511.735 mo
458.128 514.674 455.746 517.056 452.806 517.056 cv
449.867 517.056 447.485 514.674 447.485 511.735 cv
447.485 508.796 449.867 506.413 452.806 506.413 cv
455.746 506.413 458.128 508.796 458.128 511.735 cv
cp
f
431.267 511.735 mo
431.267 513.344 429.963 514.649 428.353 514.649 cv
426.744 514.649 425.439 513.344 425.439 511.735 cv
425.439 510.125 426.744 508.82 428.353 508.82 cv
429.963 508.82 431.267 510.125 431.267 511.735 cv
cp
.109804 .109804 .109804 rgb
f
455.721 511.735 mo
455.721 513.344 454.416 514.649 452.806 514.649 cv
451.197 514.649 449.892 513.344 449.892 511.735 cv
449.892 510.125 451.197 508.82 452.806 508.82 cv
454.416 508.82 455.721 510.125 455.721 511.735 cv
cp
f
430.855 510.721 mo
430.855 511.543 430.189 512.21 429.367 512.21 cv
428.544 512.21 427.878 511.543 427.878 510.721 cv
427.878 509.899 428.544 509.232 429.367 509.232 cv
430.189 509.232 430.855 509.899 430.855 510.721 cv
cp
1 1 1 rgb
f
455.31 510.721 mo
455.31 511.543 454.644 512.21 453.821 512.21 cv
452.999 512.21 452.332 511.543 452.332 510.721 cv
452.332 509.899 452.999 509.232 453.821 509.232 cv
454.644 509.232 455.31 509.899 455.31 510.721 cv
cp
f
445.415 525.803 mo
445.415 528.011 443.25 529.802 440.58 529.802 cv
437.909 529.802 435.744 528.011 435.744 525.803 cv
435.744 523.594 437.909 521.804 440.58 521.804 cv
443.25 521.804 445.415 523.594 445.415 525.803 cv
cp
.156863 .137255 .121569 rgb
f
643.698 517.637 mo
643.698 540.741 631.199 560.927 612.595 571.802 cv
602.555 567.833 593.037 569.167 581.516 569.167 cv
569.66 569.167 557.833 566.167 548.605 571.322 cv
530.446 560.34 518.308 540.406 518.308 517.637 cv
518.308 483.011 546.378 454.942 581.003 454.942 cv
615.628 454.942 643.698 483.011 643.698 517.637 cv
cp
.521569 .8 .827451 rgb
f
643.698 517.637 mo
643.698 516.61 643.672 515.589 643.623 514.574 cv
628.897 499.541 li
604.835 512.802 li
581.516 538.076 li
600.833 569.333 li
605.772 567.941 607.167 568.667 612.047 572.117 cv
630.954 561.321 643.698 540.967 643.698 517.637 cv
cp
.415686 .635294 .647059 rgb
f
580.519 531.745 mo
562.837 531.745 548.503 548.264 548.503 568.642 cv
548.503 569.54 548.532 570.429 548.586 571.31 cv
554.057 574.622 560.075 577.12 566.472 578.638 cv
570.125 574.75 575.488 572.117 580.49 572.117 cv
585.118 572.117 591.5 575.375 594.486 578.877 cv
600.88 577.476 606.909 575.098 612.409 571.909 cv
612.491 570.832 612.535 569.743 612.535 568.642 cv
612.535 548.264 598.201 531.745 580.519 531.745 cv
cp
.72549 .45098 .258824 rgb
f
580.519 550.194 mo
571.889 550.194 564.893 556.048 564.893 568.642 cv
564.893 572.228 565.461 575.619 566.471 578.637 cv
571.135 579.744 576 580.331 581.003 580.331 cv
585.631 580.331 590.142 579.829 594.484 578.878 cv
595.546 575.8 596.144 572.323 596.144 568.642 cv
596.144 556.048 589.148 550.194 580.519 550.194 cv
cp
.956863 .964706 .960784 rgb
f
556.743 492.266 mo
551.716 496.667 545.112 516.162 545.112 516.162 cv
545.112 516.162 563.181 545.984 581.003 545.984 cv
598.825 545.984 616.894 516.162 616.894 516.162 cv
616.894 516.162 610.264 496.697 605.263 492.266 cv
593.72 482.04 568.445 482.023 556.743 492.266 cv
cp
.72549 .45098 .258824 rgb
f
584.625 515.236 mo
584.625 504.511 li
584.625 502.511 583.003 500.889 581.003 500.889 cv
581.003 500.889 li
579.003 500.889 577.381 502.511 577.381 504.511 cv
577.381 515.236 li
577.381 516.86 576.28 518.26 574.713 518.687 cv
567.296 520.712 561.975 526.218 561.975 532.694 cv
561.975 534.431 562.359 536.099 563.063 537.648 cv
568.557 542.365 574.795 545.984 581.003 545.984 cv
587.211 545.984 593.449 542.364 598.943 537.648 cv
599.647 536.099 600.031 534.431 600.031 532.694 cv
600.031 526.218 594.711 520.712 587.293 518.687 cv
585.727 518.26 584.625 516.86 584.625 515.236 cv
cp
.956863 .964706 .960784 rgb
f
581.566 547.523 mo
580.44 547.523 li
578.06 547.523 576.113 545.576 576.113 543.196 cv
576.113 534.464 li
576.113 532.084 578.06 530.137 580.44 530.137 cv
581.566 530.137 li
583.946 530.137 585.893 532.084 585.893 534.464 cv
585.893 543.196 li
585.893 545.576 583.946 547.523 581.566 547.523 cv
cp
1 .611765 .780392 rgb
f
581.003 545.35 mo
580.719 545.35 580.49 545.12 580.49 544.837 cv
580.49 531.314 li
580.49 531.031 580.719 530.801 581.003 530.801 cv
581.286 530.801 581.516 531.031 581.516 531.314 cv
581.516 544.837 li
581.516 545.12 581.286 545.35 581.003 545.35 cv
cp
.819608 .501961 .65098 rgb
f
581.003 534.031 mo
581.003 537.682 578.044 540.641 574.393 540.641 cv
570.742 540.641 567.783 537.682 567.783 534.031 cv
567.783 530.38 570.742 527.421 574.393 527.421 cv
578.044 527.421 581.003 530.38 581.003 534.031 cv
cp
.776471 .776471 .776471 rgb
f
594.224 534.031 mo
594.224 537.682 591.264 540.641 587.613 540.641 cv
583.963 540.641 581.003 537.682 581.003 534.031 cv
581.003 530.38 583.963 527.421 587.613 527.421 cv
591.264 527.421 594.224 530.38 594.224 534.031 cv
cp
f
587.704 527.873 mo
587.704 530.274 584.704 534.031 581.003 534.031 cv
577.302 534.031 574.302 530.274 574.302 527.873 cv
574.302 525.473 577.302 525.338 581.003 525.338 cv
584.704 525.338 587.704 525.473 587.704 527.873 cv
cp
.0980392 .0980392 .0980392 rgb
f
573.683 512.299 mo
573.683 515.414 571.157 517.94 568.041 517.94 cv
564.925 517.94 562.399 515.414 562.399 512.299 cv
562.399 509.183 564.925 506.657 568.041 506.657 cv
571.157 506.657 573.683 509.183 573.683 512.299 cv
cp
.537255 .337255 .2 rgb
f
599.607 512.299 mo
599.607 515.414 597.081 517.94 593.965 517.94 cv
590.849 517.94 588.323 515.414 588.323 512.299 cv
588.323 509.183 590.849 506.657 593.965 506.657 cv
597.081 506.657 599.607 509.183 599.607 512.299 cv
cp
f
571.131 512.299 mo
571.131 514.005 569.747 515.388 568.041 515.388 cv
566.335 515.388 564.952 514.005 564.952 512.299 cv
564.952 510.592 566.335 509.209 568.041 509.209 cv
569.747 509.209 571.131 510.592 571.131 512.299 cv
cp
.109804 .109804 .109804 rgb
f
597.055 512.299 mo
597.055 514.005 595.671 515.388 593.965 515.388 cv
592.259 515.388 590.875 514.005 590.875 512.299 cv
590.875 510.592 592.259 509.209 593.965 509.209 cv
595.671 509.209 597.055 510.592 597.055 512.299 cv
cp
f
596.619 511.224 mo
596.619 512.096 595.912 512.802 595.041 512.802 cv
594.169 512.802 593.462 512.096 593.462 511.224 cv
593.462 510.352 594.169 509.646 595.041 509.646 cv
595.912 509.646 596.619 510.352 596.619 511.224 cv
cp
1 1 1 rgb
f
570.722 511.224 mo
570.722 512.096 570.015 512.802 569.143 512.802 cv
568.272 512.802 567.565 512.096 567.565 511.224 cv
567.565 510.352 568.272 509.646 569.143 509.646 cv
570.015 509.646 570.722 510.352 570.722 511.224 cv
cp
f
626.807 497.747 mo
628.361 498.185 629.364 499.691 629.168 501.293 cv
628.396 507.58 626.033 522.613 620.717 526.85 cv
615.551 530.967 606.671 507.635 602.741 496.308 cv
601.875 493.81 604.176 491.37 606.721 492.087 cv
626.807 497.747 li
cp
.537255 .337255 .2 rgb
f
535.199 497.747 mo
533.645 498.185 532.642 499.691 532.839 501.293 cv
533.61 507.58 535.973 522.613 541.289 526.85 cv
546.455 530.967 555.335 507.635 559.265 496.308 cv
560.131 493.81 557.83 491.37 555.285 492.087 cv
535.199 497.747 li
cp
f
783.628 517.637 mo
783.628 540.734 771.139 560.913 752.545 571.791 cv
743.375 564.5 732.462 571.802 720.934 571.802 cv
709.416 571.802 695.75 564.375 689.349 571.805 cv
670.74 560.932 658.239 540.744 658.239 517.637 cv
658.239 483.011 686.309 454.942 720.934 454.942 cv
755.559 454.942 783.628 483.011 783.628 517.637 cv
cp
.552941 .670588 .678431 rgb
f
750.141 500.156 mo
721.386 538.417 li
737.625 562.625 li
745.91 561.484 747.125 565.25 752.545 571.79 cv
771.139 560.913 783.628 540.733 783.628 517.637 cv
783.628 513.206 783.168 508.883 782.294 504.712 cv
755.235 476.207 li
750.141 500.156 li
cp
.376471 .447059 .447059 rgb
f
720.934 535.094 mo
703.37 535.094 689.132 550.914 689.132 570.428 cv
689.132 570.851 689.141 571.271 689.154 571.691 cv
693.395 574.189 697.955 576.203 702.759 577.656 cv
706.875 572.875 713.43 573 719.75 573 cv
726.037 573 733.743 573 739.018 577.684 cv
743.855 576.229 748.446 574.205 752.714 571.691 cv
752.727 571.271 752.736 570.851 752.736 570.428 cv
752.736 550.914 738.498 535.094 720.934 535.094 cv
cp
.47451 .458824 .447059 rgb
f
720.934 580.331 mo
727.261 580.331 733.368 579.392 739.126 577.649 cv
738.59 559.067 730.651 551.405 720.934 551.405 cv
711.217 551.405 703.278 559.067 702.742 577.649 cv
708.5 579.392 714.607 580.331 720.934 580.331 cv
cp
.576471 .568627 .560784 rgb
f
708.641 491.906 mo
708.641 491.906 696.711 477.037 688.724 475.887 cv
680.737 474.737 688.724 508.088 688.724 508.088 cv
708.641 491.906 li
cp
.47451 .458824 .447059 rgb
f
705.663 494.96 mo
705.663 494.96 698.055 485.478 692.962 484.744 cv
687.869 484.011 692.962 505.279 692.962 505.279 cv
705.663 494.96 li
cp
.223529 .2 .2 rgb
f
733.743 491.906 mo
733.743 491.906 745.673 477.037 753.66 475.887 cv
761.647 474.737 753.66 508.088 753.66 508.088 cv
733.743 491.906 li
cp
.47451 .458824 .447059 rgb
f
736.721 494.96 mo
736.721 494.96 744.328 485.478 749.422 484.744 cv
754.515 484.011 749.422 505.279 749.422 505.279 cv
736.721 494.96 li
cp
.223529 .2 .2 rgb
f
768.533 521.997 mo
768.533 521.997 747.338 545.635 721.192 545.635 cv
695.046 545.635 673.851 521.997 673.851 521.997 cv
673.851 521.997 695.046 485.111 721.192 485.111 cv
747.338 485.111 768.533 521.997 768.533 521.997 cv
cp
.47451 .458824 .447059 rgb
f
709.416 503.262 mo
698.575 507.577 689.869 516.666 685.735 521.569 cv
684.168 523.428 684.332 526.193 686.115 527.846 cv
690.439 531.856 699.105 538.869 709.802 542.144 cv
712.727 543.04 715.683 540.835 715.683 537.776 cv
715.683 507.495 li
715.683 504.262 712.419 502.067 709.416 503.262 cv
cp
.223529 .2 .2 rgb
f
726.701 507.495 mo
726.701 537.776 li
726.701 540.835 729.657 543.04 732.582 542.144 cv
743.279 538.869 751.945 531.856 756.269 527.846 cv
758.052 526.193 758.216 523.428 756.649 521.569 cv
752.515 516.666 743.809 507.577 732.968 503.262 cv
729.965 502.067 726.701 504.262 726.701 507.495 cv
cp
f
741.623 531.41 mo
742.242 532.022 742.203 533.036 741.537 533.598 cv
738.622 536.062 730.614 542.004 721.192 542.004 cv
711.77 542.004 703.762 536.062 700.847 533.598 cv
700.181 533.036 700.142 532.022 700.761 531.41 cv
703.602 528.598 711.676 521.548 721.192 521.548 cv
730.708 521.548 738.781 528.598 741.623 531.41 cv
cp
.984314 .992157 .980392 rgb
f
738.517 512.862 mo
738.517 515.499 736.38 517.637 733.743 517.637 cv
731.106 517.637 728.969 515.499 728.969 512.862 cv
728.969 510.226 731.106 508.088 733.743 508.088 cv
736.38 508.088 738.517 510.226 738.517 512.862 cv
cp
.886275 .862745 .870588 rgb
f
736.358 512.862 mo
736.358 514.306 735.187 515.477 733.743 515.477 cv
732.299 515.477 731.129 514.306 731.129 512.862 cv
731.129 511.418 732.299 510.248 733.743 510.248 cv
735.187 510.248 736.358 511.418 736.358 512.862 cv
cp
.109804 .109804 .109804 rgb
f
735.989 511.953 mo
735.989 512.691 735.391 513.289 734.654 513.289 cv
733.916 513.289 733.318 512.691 733.318 511.953 cv
733.318 511.215 733.916 510.617 734.654 510.617 cv
735.391 510.617 735.989 511.215 735.989 511.953 cv
cp
1 1 1 rgb
f
713.415 512.862 mo
713.415 515.499 711.278 517.637 708.641 517.637 cv
706.004 517.637 703.867 515.499 703.867 512.862 cv
703.867 510.226 706.004 508.088 708.641 508.088 cv
711.278 508.088 713.415 510.226 713.415 512.862 cv
cp
.886275 .862745 .870588 rgb
f
711.255 512.862 mo
711.255 514.306 710.085 515.477 708.641 515.477 cv
707.197 515.477 706.026 514.306 706.026 512.862 cv
706.026 511.418 707.197 510.248 708.641 510.248 cv
710.085 510.248 711.255 511.418 711.255 512.862 cv
cp
.109804 .109804 .109804 rgb
f
710.887 511.953 mo
710.887 512.691 710.289 513.289 709.551 513.289 cv
708.814 513.289 708.216 512.691 708.216 511.953 cv
708.216 511.215 708.814 510.617 709.551 510.617 cv
710.289 510.617 710.887 511.215 710.887 511.953 cv
cp
1 1 1 rgb
f
727.272 535.13 mo
727.202 534.984 727.027 534.923 726.881 534.993 cv
726.854 535.006 724.248 536.239 721.45 536.303 cv
721.45 533.226 li
724.585 533.134 727.086 531.363 727.086 529.192 cv
727.086 526.962 724.447 525.154 721.192 525.154 cv
717.937 525.154 715.298 526.962 715.298 529.192 cv
715.298 531.363 717.799 533.134 720.934 533.226 cv
720.934 536.301 li
718.29 536.214 715.524 535.002 715.495 534.989 cv
715.347 534.923 715.174 534.99 715.109 535.138 cv
715.043 535.286 715.11 535.459 715.258 535.524 cv
715.383 535.58 718.372 536.891 721.226 536.891 cv
724.244 536.891 727.018 535.576 727.134 535.52 cv
727.28 535.451 727.341 535.276 727.272 535.13 cv
cp
.223529 .2 .2 rgb
f
923.512 517.637 mo
923.512 540.666 911.095 560.795 892.592 571.694 cv
884.917 565.903 872.93 572.167 861.333 572.167 cv
849.735 572.167 836.885 563.583 829.038 571.692 cv
810.537 560.791 798.122 540.664 798.122 517.637 cv
798.122 483.011 826.192 454.942 860.817 454.942 cv
895.442 454.942 923.512 483.011 923.512 517.637 cv
cp
.372549 .686275 1 rgb
f
923.512 517.637 mo
923.512 514.613 923.297 511.64 922.883 508.731 cv
900.369 486.217 li
854.307 555.062 li
854.307 555.062 883.5 566.844 892.531 571.73 cv
911.068 560.839 923.512 540.691 923.512 517.637 cv
cp
.262745 .501961 .666667 rgb
f
860.817 535.094 mo
843.253 535.094 829.015 550.914 829.015 570.428 cv
829.015 570.851 829.024 571.271 829.037 571.691 cv
833.272 574.186 837.826 576.198 842.623 577.65 cv
846.417 572.75 853.923 573.5 860.25 573.5 cv
866.577 573.5 873.333 574.417 879.01 577.651 cv
883.807 576.198 888.361 574.186 892.597 571.691 cv
892.61 571.271 892.619 570.851 892.619 570.428 cv
892.619 550.914 878.381 535.094 860.817 535.094 cv
cp
.847059 .454902 .188235 rgb
f
860.817 580.331 mo
867.144 580.331 873.251 579.392 879.009 577.649 cv
878.473 559.067 870.534 551.475 860.817 551.475 cv
851.1 551.475 843.161 559.067 842.625 577.649 cv
848.383 579.392 854.49 580.331 860.817 580.331 cv
cp
.988235 .941176 .870588 rgb
f
898.278 524.989 mo
898.278 504.3 881.506 483.359 860.817 483.359 cv
840.128 483.359 823.356 504.3 823.356 524.989 cv
823.356 535.219 840.726 540.572 860.801 540.572 cv
880.876 540.572 898.278 534.421 898.278 524.989 cv
cp
.847059 .454902 .188235 rgb
f
871.416 536.903 mo
871.416 542.134 866.685 546.375 860.849 546.375 cv
855.014 546.375 850.283 542.134 850.283 536.903 cv
850.283 531.671 855.014 527.43 860.849 527.43 cv
866.685 527.43 871.416 531.671 871.416 536.903 cv
cp
.988235 .941176 .870588 rgb
f
860.801 540.572 mo
880.876 540.572 898.278 534.421 898.278 524.989 cv
898.278 521.482 897.795 517.967 896.893 514.549 cv
889.499 513.343 880.784 514.778 872.597 519.126 cv
867.934 521.602 863.957 524.75 860.817 528.257 cv
857.677 524.75 853.701 521.602 849.037 519.126 cv
840.85 514.778 832.135 513.343 824.741 514.549 cv
823.84 517.967 823.356 521.482 823.356 524.989 cv
823.356 535.219 840.726 540.572 860.801 540.572 cv
cp
f
871.416 529.416 mo
871.416 531.991 866.671 534.744 860.817 534.744 cv
854.964 534.744 850.218 531.991 850.218 529.416 cv
850.218 526.841 854.964 525.419 860.817 525.419 cv
866.671 525.419 871.416 526.841 871.416 529.416 cv
cp
.156863 .137255 .121569 rgb
f
860.817 526.692 mo
860.817 529.815 858.301 532.346 855.198 532.346 cv
852.095 532.346 849.579 529.815 849.579 526.692 cv
849.579 523.569 852.095 521.037 855.198 521.037 cv
858.301 521.037 860.817 523.569 860.817 526.692 cv
cp
.988235 .941176 .870588 rgb
f
872.055 526.692 mo
872.055 529.815 869.539 532.346 866.436 532.346 cv
863.333 532.346 860.817 529.815 860.817 526.692 cv
860.817 523.569 863.333 521.037 866.436 521.037 cv
869.539 521.037 872.055 523.569 872.055 526.692 cv
cp
f
852.781 506.405 mo
852.781 509.826 850.009 512.598 846.588 512.598 cv
843.168 512.598 840.395 509.826 840.395 506.405 cv
840.395 502.985 843.168 500.212 846.588 500.212 cv
850.009 500.212 852.781 502.985 852.781 506.405 cv
cp
1 .933333 .803922 rgb
f
881.239 506.405 mo
881.239 509.826 878.466 512.598 875.046 512.598 cv
871.625 512.598 868.853 509.826 868.853 506.405 cv
868.853 502.985 871.625 500.212 875.046 500.212 cv
878.466 500.212 881.239 502.985 881.239 506.405 cv
cp
f
849.98 506.405 mo
849.98 508.278 848.461 509.797 846.588 509.797 cv
844.715 509.797 843.197 508.278 843.197 506.405 cv
843.197 504.532 844.715 503.014 846.588 503.014 cv
848.461 503.014 849.98 504.532 849.98 506.405 cv
cp
.109804 .109804 .109804 rgb
f
878.437 506.405 mo
878.437 508.278 876.919 509.797 875.046 509.797 cv
873.173 509.797 871.654 508.278 871.654 506.405 cv
871.654 504.532 873.173 503.014 875.046 503.014 cv
876.919 503.014 878.437 504.532 878.437 506.405 cv
cp
f
849.501 505.226 mo
849.501 506.182 848.725 506.958 847.768 506.958 cv
846.811 506.958 846.035 506.182 846.035 505.226 cv
846.035 504.269 846.811 503.493 847.768 503.493 cv
848.725 503.493 849.501 504.269 849.501 505.226 cv
cp
1 1 1 rgb
f
861.635 524.395 mo
859.999 524.395 li
856.541 524.395 853.713 521.566 853.713 518.109 cv
853.713 513.571 li
853.713 510.113 856.541 507.285 859.999 507.285 cv
861.635 507.285 li
865.093 507.285 867.922 510.113 867.922 513.571 cv
867.922 518.109 li
867.922 521.566 865.093 524.395 861.635 524.395 cv
cp
.737255 .403922 .180392 rgb
f
877.959 505.226 mo
877.959 506.182 877.184 506.958 876.227 506.958 cv
875.27 506.958 874.494 506.182 874.494 505.226 cv
874.494 504.269 875.27 503.493 876.227 503.493 cv
877.184 503.493 877.959 504.269 877.959 505.226 cv
cp
1 1 1 rgb
f
867.342 519.267 mo
865.61 518.482 863.014 519.99 860.849 519.99 cv
858.684 519.99 856.088 518.482 854.357 519.267 cv
852.565 520.079 851.669 521.071 853.035 521.742 cv
858.012 524.189 858.407 528.265 860.849 528.713 cv
863.291 528.265 863.687 524.189 868.664 521.742 cv
870.029 521.071 869.134 520.079 867.342 519.267 cv
cp
.156863 .137255 .121569 rgb
f
865.76 520 mo
864.336 520.277 862.501 520.926 860.833 520.929 cv
859.164 520.926 857.33 520.277 855.905 520 cv
855.39 519.9 855.143 520.605 855.608 520.848 cv
861.346 523.854 858.075 527.697 860.817 527.697 cv
863.559 527.697 860.319 523.854 866.058 520.848 cv
866.522 520.605 866.275 519.9 865.76 520 cv
cp
.976471 .596078 .521569 rgb
f
902.436 493.04 mo
902.573 487.237 898.274 482.177 892.526 481.376 cv
889.214 480.914 886.073 481.893 883.693 483.809 cv
880.323 486.524 879.939 491.529 882.741 494.827 cv
887.578 500.52 li
890.446 503.895 895.565 504.217 898.797 501.19 cv
900.965 499.16 902.359 496.289 902.436 493.04 cv
cp
.847059 .454902 .188235 rgb
f
897.308 493.306 mo
897.021 496.836 893.926 499.466 890.396 499.179 cv
886.865 498.892 884.236 495.797 884.523 492.266 cv
884.81 488.736 887.905 486.106 891.435 486.393 cv
894.966 486.68 897.595 489.775 897.308 493.306 cv
cp
.427451 .278431 .129412 rgb
f
819.198 493.04 mo
819.061 487.237 823.36 482.177 829.108 481.376 cv
832.42 480.914 835.561 481.893 837.941 483.809 cv
841.311 486.524 841.695 491.529 838.893 494.827 cv
834.056 500.52 li
831.189 503.895 826.069 504.217 822.837 501.19 cv
820.669 499.16 819.275 496.289 819.198 493.04 cv
cp
.847059 .454902 .188235 rgb
f
824.32 493.231 mo
824.61 496.803 827.741 499.463 831.313 499.173 cv
834.884 498.882 837.544 495.752 837.254 492.18 cv
836.964 488.608 833.833 485.948 830.261 486.239 cv
826.69 486.529 824.03 489.66 824.32 493.231 cv
cp
.427451 .278431 .129412 rgb
f
872.625 488.106 mo
872.444 488.798 864.017 487.899 860.709 487.874 cv
857.982 487.855 849.132 488.628 849.009 488.106 cv
848.791 487.181 857.588 484.913 860.692 484.95 cv
863.813 484.987 872.741 487.664 872.625 488.106 cv
cp
.239216 .2 .172549 rgb
f
869.362 492.91 mo
869.295 493.287 863.239 492.956 860.738 492.95 cv
858.5 492.945 852.225 493.059 852.193 492.878 cv
852.105 492.379 858.315 490.806 860.726 490.817 cv
863.322 490.83 869.376 492.831 869.362 492.91 cv
cp
f
864.736 497.587 mo
864.735 497.862 862.951 497.844 860.767 497.853 cv
858.583 497.863 856.808 497.89 856.805 497.612 cv
856.802 497.335 858.573 496.864 860.761 496.857 cv
862.949 496.851 864.736 497.312 864.736 497.587 cv
cp
f
845.404 552.021 mo
845.755 550.734 842 548.58 836.922 547.114 cv
835.84 548.482 834.851 549.942 833.968 551.485 cv
834.312 551.589 834.663 551.69 835.019 551.788 cv
840.39 553.252 845.039 553.357 845.404 552.021 cv
cp
f
841.133 560.365 mo
841.497 559.029 837.441 556.76 832.073 555.295 cv
831.422 556.819 830.865 558.403 830.413 560.038 cv
830.525 560.069 830.636 560.101 830.749 560.131 cv
836.119 561.596 840.768 561.701 841.133 560.365 cv
cp
f
836.862 568.709 mo
837.186 567.52 834.006 565.591 829.516 564.148 cv
829.256 565.758 829.097 567.406 829.04 569.084 cv
833.255 569.935 836.557 569.826 836.862 568.709 cv
cp
f
875.881 552.021 mo
876.245 553.357 880.894 553.252 886.265 551.788 cv
886.726 551.662 887.176 551.53 887.615 551.394 cv
886.727 549.854 885.733 548.397 884.647 547.033 cv
879.426 548.499 875.523 550.71 875.881 552.021 cv
cp
f
880.151 560.365 mo
880.516 561.701 885.165 561.596 890.536 560.131 cv
890.758 560.071 890.978 560.008 891.196 559.945 cv
890.74 558.313 890.18 556.732 889.526 555.211 cv
889.423 555.238 889.32 555.265 889.216 555.294 cv
883.845 556.758 879.787 559.029 880.151 560.365 cv
cp
f
884.422 568.709 mo
884.735 569.857 888.212 569.94 892.592 569.012 cv
892.532 567.323 892.366 565.663 892.1 564.043 cv
887.436 565.496 884.09 567.491 884.422 568.709 cv
cp
f
830.097 507.234 mo
830.786 507.429 829.717 515.836 829.626 519.143 cv
829.551 521.869 830.145 530.733 829.621 530.846 cv
828.692 531.045 826.601 522.204 826.701 519.101 cv
826.802 515.982 829.659 507.11 830.097 507.234 cv
cp
f
834.835 510.594 mo
835.211 510.668 834.757 516.716 834.701 519.216 cv
834.65 521.454 834.638 527.73 834.456 527.759 cv
833.956 527.836 832.508 521.596 832.568 519.185 cv
832.633 516.59 834.756 510.578 834.835 510.594 cv
cp
f
891.537 507.234 mo
890.848 507.429 891.918 515.836 892.008 519.143 cv
892.083 521.869 891.489 530.733 892.013 530.846 cv
892.942 531.045 895.033 522.204 894.933 519.101 cv
894.833 515.982 891.976 507.11 891.537 507.234 cv
cp
f
886.799 510.594 mo
886.423 510.668 886.877 516.716 886.933 519.216 cv
886.984 521.454 886.996 527.73 887.178 527.759 cv
887.678 527.836 889.126 521.596 889.066 519.185 cv
889.001 516.59 886.878 510.578 886.799 510.594 cv
cp
f
783.628 830.841 mo
783.628 853.858 771.225 873.979 752.737 884.882 cv
742.583 881.5 732.576 885.34 720.968 885.34 cv
709.359 885.34 699.276 881.833 689.129 884.881 cv
670.642 873.978 658.239 853.858 658.239 830.841 cv
658.239 796.216 686.309 768.147 720.934 768.147 cv
755.559 768.147 783.628 796.216 783.628 830.841 cv
cp
.176471 1 .67451 rgb
f
756.082 813.44 mo
726.931 841.756 li
737.5 880 li
746.51 879.016 745.1 880.583 752.712 884.896 cv
771.214 873.996 783.628 853.869 783.628 830.841 cv
783.628 824.811 782.776 818.98 781.187 813.461 cv
768.645 800.919 li
756.082 813.44 li
cp
.12549 .647059 .419608 rgb
f
720.934 848.299 mo
703.37 848.299 689.132 864.118 689.132 883.633 cv
689.132 884.056 689.141 884.476 689.154 884.895 cv
693.379 887.385 697.921 889.393 702.705 890.844 cv
707.917 887.667 714.594 887.917 720.934 887.917 cv
727.261 887.917 733.576 888.167 739.127 890.855 cv
743.924 889.403 748.478 887.391 752.714 884.895 cv
752.727 884.476 752.736 884.056 752.736 883.633 cv
752.736 864.118 738.498 848.299 720.934 848.299 cv
cp
.909804 .701961 .376471 rgb
f
720.934 893.536 mo
727.261 893.536 733.368 892.597 739.126 890.853 cv
738.59 872.271 730.651 864.609 720.934 864.609 cv
711.217 864.609 703.278 872.271 702.742 890.853 cv
708.5 892.597 714.607 893.536 720.934 893.536 cv
cp
.988235 .811765 .52549 rgb
f
705.612 863.072 mo
705.612 864.771 704.312 866.147 702.708 866.147 cv
701.104 866.147 699.804 864.771 699.804 863.072 cv
699.804 861.374 701.104 859.997 702.708 859.997 cv
704.312 859.997 705.612 861.374 705.612 863.072 cv
cp
.807843 .619608 .317647 rgb
f
705.569 860.611 mo
705.344 861.313 704.305 861.607 703.248 861.268 cv
702.191 860.929 701.516 860.086 701.741 859.384 cv
701.966 858.682 703.005 858.388 704.062 858.727 cv
705.119 859.066 705.794 859.909 705.569 860.611 cv
cp
.156863 .137255 .121569 rgb
f
703.995 864.26 mo
703.995 865.302 704.607 866.147 705.362 866.147 cv
706.117 866.147 706.728 865.302 706.728 864.26 cv
706.728 863.217 706.117 862.372 705.362 862.372 cv
704.607 862.372 703.995 863.217 703.995 864.26 cv
cp
f
701.817 864.652 mo
701.653 864.272 701.411 863.96 701.137 863.74 cv
701.216 863.337 701.166 862.862 700.966 862.4 cv
700.552 861.444 699.655 860.912 698.962 861.212 cv
698.27 861.512 698.044 862.53 698.458 863.487 cv
698.623 863.867 698.864 864.178 699.138 864.399 cv
699.06 864.802 699.109 865.277 699.309 865.738 cv
699.724 866.695 700.621 867.227 701.314 866.927 cv
702.006 866.627 702.232 865.608 701.817 864.652 cv
cp
f
701.156 872.153 mo
701.914 873.672 701.364 875.485 699.929 876.2 cv
698.494 876.916 696.716 876.265 695.958 874.745 cv
695.2 873.225 695.749 871.413 697.184 870.697 cv
698.62 869.981 700.398 870.633 701.156 872.153 cv
cp
.807843 .619608 .317647 rgb
f
700.018 869.969 mo
700.13 870.697 699.331 871.424 698.234 871.593 cv
697.137 871.762 696.157 871.308 696.045 870.58 cv
695.933 869.852 696.732 869.125 697.829 868.956 cv
698.926 868.787 699.906 869.241 700.018 869.969 cv
cp
.156863 .137255 .121569 rgb
f
700.238 873.937 mo
700.704 874.87 701.628 875.353 702.304 875.016 cv
702.979 874.679 703.15 873.65 702.684 872.717 cv
702.219 871.784 701.294 871.301 700.619 871.638 cv
699.943 871.975 699.773 873.004 700.238 873.937 cv
cp
f
698.464 875.26 mo
698.148 874.993 697.793 874.822 697.449 874.747 cv
697.34 874.352 697.083 873.949 696.698 873.625 cv
695.9 872.954 694.86 872.878 694.374 873.456 cv
693.888 874.033 694.141 875.045 694.939 875.716 cv
695.256 875.983 695.611 876.154 695.954 876.229 cv
696.064 876.625 696.32 877.028 696.705 877.351 cv
697.503 878.022 698.543 878.098 699.029 877.521 cv
699.515 876.943 699.262 875.931 698.464 875.26 cv
cp
f
740.003 866.984 mo
738.491 867.757 736.673 867.227 735.942 865.799 cv
735.212 864.371 735.845 862.586 737.357 861.813 cv
738.869 861.039 740.687 861.57 741.417 862.997 cv
742.148 864.425 741.515 866.21 740.003 866.984 cv
cp
.807843 .619608 .317647 rgb
f
742.174 865.824 mo
741.447 865.943 740.712 865.152 740.532 864.057 cv
740.352 862.961 740.796 861.976 741.523 861.857 cv
742.25 861.738 742.985 862.529 743.165 863.624 cv
743.345 864.72 742.901 865.704 742.174 865.824 cv
cp
.156863 .137255 .121569 rgb
f
738.209 866.085 mo
737.281 866.56 736.807 867.489 737.151 868.161 cv
737.495 868.833 738.526 868.993 739.454 868.518 cv
740.382 868.043 740.856 867.114 740.512 866.442 cv
740.168 865.77 739.137 865.61 738.209 866.085 cv
cp
f
736.868 864.325 mo
737.131 864.005 737.299 863.648 737.37 863.304 cv
737.764 863.19 738.165 862.93 738.485 862.541 cv
739.148 861.737 739.213 860.696 738.63 860.216 cv
738.047 859.736 737.038 859.999 736.375 860.804 cv
736.112 861.123 735.944 861.48 735.873 861.824 cv
735.479 861.938 735.078 862.198 734.758 862.587 cv
734.096 863.391 734.031 864.433 734.613 864.912 cv
735.196 865.392 736.205 865.129 736.868 864.325 cv
cp
f
744.336 870.53 mo
745.975 870.084 747.645 870.976 748.067 872.524 cv
748.488 874.071 747.502 875.688 745.864 876.134 cv
744.225 876.581 742.555 875.688 742.133 874.141 cv
741.711 872.593 742.698 870.977 744.336 870.53 cv
cp
.807843 .619608 .317647 rgb
f
741.973 871.219 mo
742.709 871.252 743.266 872.177 743.217 873.286 cv
743.168 874.395 742.532 875.268 741.796 875.235 cv
741.06 875.203 740.503 874.277 740.552 873.168 cv
740.601 872.059 741.237 871.187 741.973 871.219 cv
cp
.156863 .137255 .121569 rgb
f
745.907 871.778 mo
746.913 871.504 747.567 870.692 747.369 869.964 cv
747.171 869.235 746.194 868.867 745.189 869.141 cv
744.183 869.415 743.528 870.228 743.727 870.956 cv
743.925 871.684 744.902 872.052 745.907 871.778 cv
cp
f
746.858 873.776 mo
746.535 874.035 746.298 874.35 746.157 874.672 cv
745.748 874.702 745.302 874.875 744.91 875.189 cv
744.096 875.841 743.818 876.846 744.29 877.436 cv
744.761 878.025 745.803 877.975 746.617 877.324 cv
746.941 877.065 747.178 876.75 747.318 876.428 cv
747.728 876.398 748.173 876.225 748.566 875.911 cv
749.38 875.259 749.657 874.254 749.186 873.664 cv
748.714 873.075 747.672 873.125 746.858 873.776 cv
cp
f
699.724 883.129 mo
699.338 883.921 698.018 884.072 696.776 883.467 cv
695.534 882.862 694.839 881.73 695.225 880.938 cv
695.61 880.146 696.93 879.995 698.172 880.6 cv
699.415 881.205 700.109 882.337 699.724 883.129 cv
cp
f
731.303 862.281 mo
731.303 863.062 730.427 863.695 729.345 863.695 cv
728.264 863.695 727.388 863.062 727.388 862.281 cv
727.388 861.501 728.264 860.868 729.345 860.868 cv
730.427 860.868 731.303 861.501 731.303 862.281 cv
cp
f
748.148 882.682 mo
748.41 883.184 747.616 884.116 746.374 884.764 cv
745.132 885.412 743.913 885.531 743.651 885.029 cv
743.389 884.527 744.184 883.595 745.426 882.947 cv
746.667 882.299 747.886 882.18 748.148 882.682 cv
cp
f
716.637 862.454 mo
716.637 863.331 715.469 864.041 714.029 864.041 cv
712.588 864.041 711.421 863.331 711.421 862.454 cv
711.421 861.578 712.588 860.868 714.029 860.868 cv
715.469 860.868 716.637 861.578 716.637 862.454 cv
cp
f
714.029 854.839 mo
714.029 855.35 713.065 855.764 711.875 855.764 cv
710.685 855.764 709.721 855.35 709.721 854.839 cv
709.721 854.327 710.685 853.913 711.875 853.913 cv
713.065 853.913 714.029 854.327 714.029 854.839 cv
cp
f
745.721 805.93 mo
745.721 805.93 761.883 793.948 768.013 800.078 cv
774.143 806.208 756.867 832.401 756.867 832.401 cv
745.721 805.93 li
cp
1 .784314 .4 rgb
f
745.721 810.701 mo
745.721 810.701 757.539 801.94 762.022 806.422 cv
766.505 810.905 753.872 830.059 753.872 830.059 cv
745.721 810.701 li
cp
.807843 .619608 .317647 rgb
f
696.147 805.93 mo
696.147 805.93 679.985 793.948 673.855 800.078 cv
667.724 806.208 685.001 832.401 685.001 832.401 cv
696.147 805.93 li
cp
1 .784314 .4 rgb
f
696.147 810.701 mo
696.147 810.701 684.328 801.94 679.846 806.422 cv
675.363 810.905 687.996 830.059 687.996 830.059 cv
696.147 810.701 li
cp
.807843 .619608 .317647 rgb
f
760.181 822.152 mo
760.181 843.808 742.624 857.391 720.968 857.391 cv
699.311 857.391 681.755 843.808 681.755 822.152 cv
681.755 811.443 699.937 799.961 720.951 799.961 cv
741.965 799.961 760.181 812.278 760.181 822.152 cv
cp
1 .784314 .4 rgb
f
728.746 851.795 mo
728.746 855.984 725.264 859.379 720.968 859.379 cv
716.672 859.379 713.189 855.984 713.189 851.795 cv
713.189 847.606 716.672 844.21 720.968 844.21 cv
725.264 844.21 728.746 847.606 728.746 851.795 cv
cp
.988235 .933333 .878431 rgb
f
730.212 848.172 mo
730.212 850.868 726.058 853.749 720.934 853.749 cv
715.81 853.749 711.656 850.868 711.656 848.172 cv
711.656 845.477 715.81 843.987 720.934 843.987 cv
726.058 843.987 730.212 845.477 730.212 848.172 cv
cp
.156863 .137255 .121569 rgb
f
720.934 845.633 mo
720.934 848.729 718.104 851.239 714.613 851.239 cv
711.122 851.239 708.292 848.729 708.292 845.633 cv
708.292 842.536 711.122 840.026 714.613 840.026 cv
718.104 840.026 720.934 842.536 720.934 845.633 cv
cp
.988235 .933333 .878431 rgb
f
733.576 845.633 mo
733.576 848.729 730.746 851.239 727.255 851.239 cv
723.764 851.239 720.934 848.729 720.934 845.633 cv
720.934 842.536 723.764 840.026 727.255 840.026 cv
730.746 840.026 733.576 842.536 733.576 845.633 cv
cp
f
712.522 824.085 mo
712.522 827.665 709.62 830.568 706.04 830.568 cv
702.459 830.568 699.557 827.665 699.557 824.085 cv
699.557 820.505 702.459 817.602 706.04 817.602 cv
709.62 817.602 712.522 820.505 712.522 824.085 cv
cp
.988235 .866667 .694118 rgb
f
742.311 824.085 mo
742.311 827.665 739.408 830.568 735.828 830.568 cv
732.248 830.568 729.345 827.665 729.345 824.085 cv
729.345 820.505 732.248 817.602 735.828 817.602 cv
739.408 817.602 742.311 820.505 742.311 824.085 cv
cp
f
709.59 824.085 mo
709.59 826.046 708 827.635 706.04 827.635 cv
704.079 827.635 702.49 826.046 702.49 824.085 cv
702.49 822.124 704.079 820.535 706.04 820.535 cv
708 820.535 709.59 822.124 709.59 824.085 cv
cp
.109804 .109804 .109804 rgb
f
739.378 824.085 mo
739.378 826.046 737.789 827.635 735.828 827.635 cv
733.867 827.635 732.278 826.046 732.278 824.085 cv
732.278 822.124 733.867 820.535 735.828 820.535 cv
737.789 820.535 739.378 822.124 739.378 824.085 cv
cp
f
709.088 822.85 mo
709.088 823.852 708.276 824.664 707.275 824.664 cv
706.273 824.664 705.461 823.852 705.461 822.85 cv
705.461 821.849 706.273 821.036 707.275 821.036 cv
708.276 821.036 709.088 821.849 709.088 822.85 cv
cp
1 1 1 rgb
f
721.741 843.862 mo
720.127 843.862 li
716.718 843.862 713.928 841.072 713.928 837.663 cv
713.928 832.529 li
713.928 829.12 716.718 826.33 720.127 826.33 cv
721.741 826.33 li
725.15 826.33 727.94 829.12 727.94 832.529 cv
727.94 837.663 li
727.94 841.072 725.15 843.862 721.741 843.862 cv
cp
.807843 .619608 .317647 rgb
f
738.878 822.85 mo
738.878 823.852 738.066 824.664 737.064 824.664 cv
736.063 824.664 735.251 823.852 735.251 822.85 cv
735.251 821.849 736.063 821.036 737.064 821.036 cv
738.066 821.036 738.878 821.849 738.878 822.85 cv
cp
1 1 1 rgb
f
728.746 839.766 mo
728.746 842.456 725.249 846.094 720.934 846.094 cv
716.619 846.094 713.121 842.456 713.121 839.766 cv
713.121 837.076 716.619 840.916 720.934 840.916 cv
725.249 840.916 728.746 837.076 728.746 839.766 cv
cp
.156863 .137255 .121569 rgb
f
693.987 835.118 mo
694.608 836.266 695.784 836.832 696.613 836.382 cv
697.442 835.933 697.609 834.639 696.987 833.492 cv
696.365 832.344 695.189 831.778 694.361 832.228 cv
693.532 832.677 693.365 833.971 693.987 835.118 cv
cp
f
693.663 842.569 mo
694.285 843.717 695.461 844.282 696.29 843.833 cv
697.119 843.384 697.286 842.09 696.664 840.942 cv
696.042 839.795 694.866 839.229 694.038 839.678 cv
693.209 840.128 693.041 841.422 693.663 842.569 cv
cp
f
685.932 832.088 mo
686.554 833.235 687.73 833.801 688.558 833.352 cv
689.387 832.903 689.554 831.609 688.932 830.461 cv
688.31 829.314 687.134 828.748 686.306 829.197 cv
685.477 829.646 685.31 830.941 685.932 832.088 cv
cp
f
706.844 811.115 mo
704.826 811.108 703.186 812.143 703.181 813.427 cv
703.176 814.711 704.808 815.758 706.827 815.765 cv
708.845 815.773 710.484 814.738 710.489 813.454 cv
710.494 812.17 708.862 811.123 706.844 811.115 cv
cp
f
695.451 811.127 mo
693.79 812.306 692.896 813.899 693.454 814.685 cv
694.011 815.471 695.81 815.152 697.471 813.973 cv
699.131 812.794 700.026 811.201 699.468 810.415 cv
698.91 809.63 697.112 809.948 695.451 811.127 cv
cp
f
715.267 803.51 mo
713.001 802.935 710.884 803.569 710.54 804.926 cv
710.195 806.284 711.753 807.85 714.02 808.426 cv
716.286 809.001 718.403 808.367 718.747 807.01 cv
719.092 805.652 717.534 804.086 715.267 803.51 cv
cp
f
688.49 821.856 mo
688.041 824.022 688.794 826.01 690.172 826.296 cv
691.55 826.582 693.031 825.058 693.481 822.892 cv
693.93 820.726 693.177 818.738 691.799 818.452 cv
690.421 818.166 688.94 819.69 688.49 821.856 cv
cp
f
747.881 835.118 mo
747.259 836.266 746.083 836.832 745.255 836.382 cv
744.426 835.933 744.259 834.639 744.88 833.492 cv
745.503 832.344 746.678 831.778 747.507 832.228 cv
748.336 832.677 748.503 833.971 747.881 835.118 cv
cp
f
745.192 844.214 mo
744.57 845.362 743.394 845.928 742.565 845.478 cv
741.737 845.029 741.569 843.735 742.191 842.588 cv
742.813 841.44 743.989 840.874 744.818 841.323 cv
745.646 841.773 745.814 843.067 745.192 844.214 cv
cp
f
755.936 832.088 mo
755.314 833.235 754.138 833.801 753.31 833.352 cv
752.481 832.903 752.313 831.609 752.935 830.461 cv
753.557 829.314 754.733 828.748 755.562 829.197 cv
756.391 829.646 756.558 830.941 755.936 832.088 cv
cp
f
735.024 811.115 mo
737.042 811.108 738.682 812.143 738.687 813.427 cv
738.692 814.711 737.059 815.758 735.041 815.765 cv
733.023 815.773 731.383 814.738 731.378 813.454 cv
731.374 812.17 733.006 811.123 735.024 811.115 cv
cp
f
746.417 811.127 mo
748.078 812.306 748.972 813.899 748.414 814.685 cv
747.856 815.471 746.058 815.152 744.397 813.973 cv
742.736 812.794 741.842 811.201 742.4 810.415 cv
742.958 809.63 744.756 809.948 746.417 811.127 cv
cp
f
726.6 803.51 mo
728.867 802.935 730.983 803.569 731.328 804.926 cv
731.672 806.284 730.114 807.85 727.848 808.426 cv
725.581 809.001 723.465 808.367 723.12 807.01 cv
722.776 805.652 724.334 804.086 726.6 803.51 cv
cp
f
753.377 821.856 mo
753.827 824.022 753.074 826.01 751.696 826.296 cv
750.318 826.582 748.836 825.058 748.387 822.892 cv
747.938 820.726 748.691 818.738 750.069 818.452 cv
751.447 818.166 752.928 819.69 753.377 821.856 cv
cp
f
363.131 830.841 mo
363.131 845.855 357.853 859.636 349.052 870.431 cv
337.625 873.125 319.622 880 300.011 880 cv
280.397 880 265.25 867.875 251.816 870.425 cv
243.017 859.632 237.742 845.853 237.742 830.841 cv
237.742 796.216 265.811 768.147 300.436 768.147 cv
335.061 768.147 363.131 796.216 363.131 830.841 cv
cp
.294118 .717647 .654902 rgb
f
335.166 803.669 mo
306.588 820.878 li
343.25 866.656 li
345.458 864.624 347.125 868 349.049 870.433 cv
357.541 860.019 362.754 846.825 363.111 832.425 cv
335.166 803.669 li
cp
.192157 .466667 .419608 rgb
f
300.436 787.806 mo
271.837 787.806 248.653 815.308 248.653 849.233 cv
248.653 856.682 249.771 863.82 251.818 870.427 cv
263.315 884.529 280.823 893.536 300.436 893.536 cv
320.049 893.536 337.558 884.529 349.054 870.427 cv
351.101 863.82 352.219 856.682 352.219 849.233 cv
352.219 815.308 329.035 787.806 300.436 787.806 cv
cp
.556863 .556863 .556863 rgb
f
334.09 828.949 mo
334.09 849.774 319.023 866.656 300.436 866.656 cv
281.85 866.656 266.783 849.774 266.783 828.949 cv
266.783 808.123 281.85 791.241 300.436 791.241 cv
319.023 791.241 334.09 808.123 334.09 828.949 cv
cp
.478431 .478431 .478431 rgb
f
329.477 820.282 mo
329.477 836.321 316.475 849.323 300.436 849.323 cv
284.397 849.323 271.395 836.321 271.395 820.282 cv
271.395 804.243 284.397 791.241 300.436 791.241 cv
316.475 791.241 329.477 804.243 329.477 820.282 cv
cp
.4 .4 .4 rgb
f
282.487 832.668 mo
280.247 832.668 278.426 834.28 278.407 836.282 cv
278.394 837.626 278.387 838.989 278.387 840.368 cv
278.387 863.378 280.223 882.031 282.487 882.031 cv
284.752 882.031 286.587 863.378 286.587 840.368 cv
286.587 838.989 286.581 837.626 286.568 836.282 cv
286.548 834.28 284.728 832.668 282.487 832.668 cv
282.487 832.668 li
cp
.980392 .988235 .909804 rgb
f
318.776 832.668 mo
316.536 832.668 314.715 834.28 314.696 836.282 cv
314.683 837.626 314.676 838.989 314.676 840.368 cv
314.676 863.378 316.512 882.031 318.776 882.031 cv
321.041 882.031 322.876 863.378 322.876 840.368 cv
322.876 838.989 322.87 837.626 322.857 836.282 cv
322.837 834.28 321.017 832.668 318.776 832.668 cv
318.776 832.668 li
cp
f
289.117 811.649 mo
289.117 814.285 286.979 816.423 284.342 816.423 cv
281.705 816.423 279.568 814.285 279.568 811.649 cv
279.568 809.012 281.705 806.874 284.342 806.874 cv
286.979 806.874 289.117 809.012 289.117 811.649 cv
cp
.266667 .266667 .266667 rgb
f
321.305 811.649 mo
321.305 814.285 319.167 816.423 316.53 816.423 cv
313.893 816.423 311.756 814.285 311.756 811.649 cv
311.756 809.012 313.893 806.874 316.53 806.874 cv
319.167 806.874 321.305 809.012 321.305 811.649 cv
cp
f
286.957 811.649 mo
286.957 813.093 285.786 814.263 284.342 814.263 cv
282.898 814.263 281.728 813.093 281.728 811.649 cv
281.728 810.205 282.898 809.034 284.342 809.034 cv
285.786 809.034 286.957 810.205 286.957 811.649 cv
cp
.109804 .109804 .109804 rgb
f
319.145 811.649 mo
319.145 813.093 317.974 814.263 316.53 814.263 cv
315.086 814.263 313.916 813.093 313.916 811.649 cv
313.916 810.205 315.086 809.034 316.53 809.034 cv
317.974 809.034 319.145 810.205 319.145 811.649 cv
cp
f
286.587 811.649 mo
286.587 812.386 285.989 812.984 285.252 812.984 cv
284.514 812.984 283.916 812.386 283.916 811.649 cv
283.916 810.911 284.514 810.313 285.252 810.313 cv
285.989 810.313 286.587 810.911 286.587 811.649 cv
cp
1 1 1 rgb
f
318.776 811.649 mo
318.776 812.386 318.178 812.984 317.441 812.984 cv
316.703 812.984 316.105 812.386 316.105 811.649 cv
316.105 810.911 316.703 810.313 317.441 810.313 cv
318.178 810.313 318.776 810.911 318.776 811.649 cv
cp
f
320.79 823.061 mo
313.422 818.73 304.738 819.587 300.436 824.778 cv
296.135 819.587 287.45 818.73 280.082 823.061 cv
272.071 827.769 268.654 836.823 272.451 843.283 cv
276.248 849.743 285.82 851.163 293.832 846.454 cv
296.632 844.808 298.871 842.631 300.436 840.219 cv
302.002 842.631 304.24 844.808 307.041 846.454 cv
315.052 851.163 324.624 849.743 328.421 843.283 cv
332.218 836.823 328.802 827.769 320.79 823.061 cv
cp
.266667 .266667 .266667 rgb
f
298.437 818.952 mo
299.97 820.196 300.258 822.487 299.832 822.988 cv
299.407 823.489 298.504 821.879 296.915 820.646 cv
295.326 819.413 293.937 818.846 294.363 818.345 cv
294.788 817.844 296.904 817.708 298.437 818.952 cv
cp
.137255 .137255 .137255 rgb
f
302.435 818.952 mo
300.902 820.196 300.615 822.487 301.04 822.988 cv
301.465 823.489 302.369 821.879 303.958 820.646 cv
305.547 819.413 306.935 818.846 306.51 818.345 cv
306.085 817.844 303.969 817.708 302.435 818.952 cv
cp
f
323.404 832.831 mo
323.404 833.251 323.064 833.591 322.644 833.591 cv
322.225 833.591 321.884 833.251 321.884 832.831 cv
321.884 832.412 322.225 832.072 322.644 832.072 cv
323.064 832.072 323.404 832.412 323.404 832.831 cv
cp
.556863 .556863 .556863 rgb
f
323.404 837.273 mo
323.404 837.693 323.064 838.033 322.644 838.033 cv
322.225 838.033 321.884 837.693 321.884 837.273 cv
321.884 836.854 322.225 836.513 322.644 836.513 cv
323.064 836.513 323.404 836.854 323.404 837.273 cv
cp
f
318.962 828.39 mo
318.962 828.809 318.622 829.15 318.203 829.15 cv
317.783 829.15 317.443 828.809 317.443 828.39 cv
317.443 827.97 317.783 827.63 318.203 827.63 cv
318.622 827.63 318.962 827.97 318.962 828.39 cv
cp
f
318.962 832.831 mo
318.962 833.251 318.622 833.591 318.203 833.591 cv
317.783 833.591 317.443 833.251 317.443 832.831 cv
317.443 832.412 317.783 832.072 318.203 832.072 cv
318.622 832.072 318.962 832.412 318.962 832.831 cv
cp
f
318.962 837.273 mo
318.962 837.693 318.622 838.033 318.203 838.033 cv
317.783 838.033 317.443 837.693 317.443 837.273 cv
317.443 836.854 317.783 836.513 318.203 836.513 cv
318.622 836.513 318.962 836.854 318.962 837.273 cv
cp
f
318.962 841.715 mo
318.962 842.134 318.622 842.474 318.203 842.474 cv
317.783 842.474 317.443 842.134 317.443 841.715 cv
317.443 841.295 317.783 840.955 318.203 840.955 cv
318.622 840.955 318.962 841.295 318.962 841.715 cv
cp
f
314.521 823.948 mo
314.521 824.368 314.181 824.708 313.761 824.708 cv
313.341 824.708 313.001 824.368 313.001 823.948 cv
313.001 823.529 313.341 823.189 313.761 823.189 cv
314.181 823.189 314.521 823.529 314.521 823.948 cv
cp
f
314.521 828.39 mo
314.521 828.809 314.181 829.15 313.761 829.15 cv
313.341 829.15 313.001 828.809 313.001 828.39 cv
313.001 827.97 313.341 827.63 313.761 827.63 cv
314.181 827.63 314.521 827.97 314.521 828.39 cv
cp
f
314.521 832.831 mo
314.521 833.251 314.181 833.591 313.761 833.591 cv
313.341 833.591 313.001 833.251 313.001 832.831 cv
313.001 832.412 313.341 832.072 313.761 832.072 cv
314.181 832.072 314.521 832.412 314.521 832.831 cv
cp
f
314.521 837.273 mo
314.521 837.693 314.181 838.033 313.761 838.033 cv
313.341 838.033 313.001 837.693 313.001 837.273 cv
313.001 836.854 313.341 836.513 313.761 836.513 cv
314.181 836.513 314.521 836.854 314.521 837.273 cv
cp
f
314.521 841.715 mo
314.521 842.134 314.181 842.474 313.761 842.474 cv
313.341 842.474 313.001 842.134 313.001 841.715 cv
313.001 841.295 313.341 840.955 313.761 840.955 cv
314.181 840.955 314.521 841.295 314.521 841.715 cv
cp
f
310.079 823.948 mo
310.079 824.368 309.739 824.708 309.319 824.708 cv
308.9 824.708 308.56 824.368 308.56 823.948 cv
308.56 823.529 308.9 823.189 309.319 823.189 cv
309.739 823.189 310.079 823.529 310.079 823.948 cv
cp
f
310.079 828.39 mo
310.079 828.809 309.739 829.15 309.319 829.15 cv
308.9 829.15 308.56 828.809 308.56 828.39 cv
308.56 827.97 308.9 827.63 309.319 827.63 cv
309.739 827.63 310.079 827.97 310.079 828.39 cv
cp
f
310.079 832.831 mo
310.079 833.251 309.739 833.591 309.319 833.591 cv
308.9 833.591 308.56 833.251 308.56 832.831 cv
308.56 832.412 308.9 832.072 309.319 832.072 cv
309.739 832.072 310.079 832.412 310.079 832.831 cv
cp
f
310.079 837.273 mo
310.079 837.693 309.739 838.033 309.319 838.033 cv
308.9 838.033 308.56 837.693 308.56 837.273 cv
308.56 836.854 308.9 836.513 309.319 836.513 cv
309.739 836.513 310.079 836.854 310.079 837.273 cv
cp
f
310.079 841.715 mo
310.079 842.134 309.739 842.474 309.319 842.474 cv
308.9 842.474 308.56 842.134 308.56 841.715 cv
308.56 841.295 308.9 840.955 309.319 840.955 cv
309.739 840.955 310.079 841.295 310.079 841.715 cv
cp
f
305.637 828.39 mo
305.637 828.809 305.297 829.15 304.878 829.15 cv
304.458 829.15 304.118 828.809 304.118 828.39 cv
304.118 827.97 304.458 827.63 304.878 827.63 cv
305.297 827.63 305.637 827.97 305.637 828.39 cv
cp
f
305.637 832.831 mo
305.637 833.251 305.297 833.591 304.878 833.591 cv
304.458 833.591 304.118 833.251 304.118 832.831 cv
304.118 832.412 304.458 832.072 304.878 832.072 cv
305.297 832.072 305.637 832.412 305.637 832.831 cv
cp
f
305.637 837.273 mo
305.637 837.693 305.297 838.033 304.878 838.033 cv
304.458 838.033 304.118 837.693 304.118 837.273 cv
304.118 836.854 304.458 836.513 304.878 836.513 cv
305.297 836.513 305.637 836.854 305.637 837.273 cv
cp
f
296.754 828.39 mo
296.754 828.809 296.414 829.15 295.995 829.15 cv
295.575 829.15 295.235 828.809 295.235 828.39 cv
295.235 827.97 295.575 827.63 295.995 827.63 cv
296.414 827.63 296.754 827.97 296.754 828.39 cv
cp
f
296.754 832.831 mo
296.754 833.251 296.414 833.591 295.995 833.591 cv
295.575 833.591 295.235 833.251 295.235 832.831 cv
295.235 832.412 295.575 832.072 295.995 832.072 cv
296.414 832.072 296.754 832.412 296.754 832.831 cv
cp
f
296.754 837.273 mo
296.754 837.693 296.414 838.033 295.995 838.033 cv
295.575 838.033 295.235 837.693 295.235 837.273 cv
295.235 836.854 295.575 836.513 295.995 836.513 cv
296.414 836.513 296.754 836.854 296.754 837.273 cv
cp
f
292.313 823.948 mo
292.313 824.368 291.973 824.708 291.553 824.708 cv
291.134 824.708 290.793 824.368 290.793 823.948 cv
290.793 823.529 291.134 823.189 291.553 823.189 cv
291.973 823.189 292.313 823.529 292.313 823.948 cv
cp
f
292.313 828.39 mo
292.313 828.809 291.973 829.15 291.553 829.15 cv
291.134 829.15 290.793 828.809 290.793 828.39 cv
290.793 827.97 291.134 827.63 291.553 827.63 cv
291.973 827.63 292.313 827.97 292.313 828.39 cv
cp
f
292.313 832.831 mo
292.313 833.251 291.973 833.591 291.553 833.591 cv
291.134 833.591 290.793 833.251 290.793 832.831 cv
290.793 832.412 291.134 832.072 291.553 832.072 cv
291.973 832.072 292.313 832.412 292.313 832.831 cv
cp
f
292.313 837.273 mo
292.313 837.693 291.973 838.033 291.553 838.033 cv
291.134 838.033 290.793 837.693 290.793 837.273 cv
290.793 836.854 291.134 836.513 291.553 836.513 cv
291.973 836.513 292.313 836.854 292.313 837.273 cv
cp
f
292.313 841.715 mo
292.313 842.134 291.973 842.474 291.553 842.474 cv
291.134 842.474 290.793 842.134 290.793 841.715 cv
290.793 841.295 291.134 840.955 291.553 840.955 cv
291.973 840.955 292.313 841.295 292.313 841.715 cv
cp
f
287.871 823.948 mo
287.871 824.368 287.531 824.708 287.112 824.708 cv
286.692 824.708 286.352 824.368 286.352 823.948 cv
286.352 823.529 286.692 823.189 287.112 823.189 cv
287.531 823.189 287.871 823.529 287.871 823.948 cv
cp
f
287.871 828.39 mo
287.871 828.809 287.531 829.15 287.112 829.15 cv
286.692 829.15 286.352 828.809 286.352 828.39 cv
286.352 827.97 286.692 827.63 287.112 827.63 cv
287.531 827.63 287.871 827.97 287.871 828.39 cv
cp
f
287.871 832.831 mo
287.871 833.251 287.531 833.591 287.112 833.591 cv
286.692 833.591 286.352 833.251 286.352 832.831 cv
286.352 832.412 286.692 832.072 287.112 832.072 cv
287.531 832.072 287.871 832.412 287.871 832.831 cv
cp
f
287.871 837.273 mo
287.871 837.693 287.531 838.033 287.112 838.033 cv
286.692 838.033 286.352 837.693 286.352 837.273 cv
286.352 836.854 286.692 836.513 287.112 836.513 cv
287.531 836.513 287.871 836.854 287.871 837.273 cv
cp
f
287.871 841.715 mo
287.871 842.134 287.531 842.474 287.112 842.474 cv
286.692 842.474 286.352 842.134 286.352 841.715 cv
286.352 841.295 286.692 840.955 287.112 840.955 cv
287.531 840.955 287.871 841.295 287.871 841.715 cv
cp
f
283.43 828.39 mo
283.43 828.809 283.089 829.15 282.67 829.15 cv
282.25 829.15 281.91 828.809 281.91 828.39 cv
281.91 827.97 282.25 827.63 282.67 827.63 cv
283.089 827.63 283.43 827.97 283.43 828.39 cv
cp
f
283.43 832.831 mo
283.43 833.251 283.089 833.591 282.67 833.591 cv
282.25 833.591 281.91 833.251 281.91 832.831 cv
281.91 832.412 282.25 832.072 282.67 832.072 cv
283.089 832.072 283.43 832.412 283.43 832.831 cv
cp
f
283.43 837.273 mo
283.43 837.693 283.089 838.033 282.67 838.033 cv
282.25 838.033 281.91 837.693 281.91 837.273 cv
281.91 836.854 282.25 836.513 282.67 836.513 cv
283.089 836.513 283.43 836.854 283.43 837.273 cv
cp
f
283.43 841.715 mo
283.43 842.134 283.089 842.474 282.67 842.474 cv
282.25 842.474 281.91 842.134 281.91 841.715 cv
281.91 841.295 282.25 840.955 282.67 840.955 cv
283.089 840.955 283.43 841.295 283.43 841.715 cv
cp
f
278.988 832.831 mo
278.988 833.251 278.648 833.591 278.228 833.591 cv
277.809 833.591 277.469 833.251 277.469 832.831 cv
277.469 832.412 277.809 832.072 278.228 832.072 cv
278.648 832.072 278.988 832.412 278.988 832.831 cv
cp
f
278.988 837.273 mo
278.988 837.693 278.648 838.033 278.228 838.033 cv
277.809 838.033 277.469 837.693 277.469 837.273 cv
277.469 836.854 277.809 836.513 278.228 836.513 cv
278.648 836.513 278.988 836.854 278.988 837.273 cv
cp
f
783.628 677.276 mo
783.628 698.497 773.085 717.255 756.952 728.598 cv
745.25 723.25 734.339 729.5 720.934 729.5 cv
707.531 729.5 695.375 723 684.92 728.601 cv
668.784 717.258 658.239 698.498 658.239 677.276 cv
658.239 642.651 686.309 614.581 720.934 614.581 cv
755.559 614.581 783.628 642.651 783.628 677.276 cv
cp
.760784 .364706 .819608 rgb
f
783.628 677.276 mo
783.628 674.738 783.477 672.236 783.184 669.778 cv
740.976 627.57 li
732.404 646.197 li
730.305 654.396 li
707.718 631.253 li
703.79 636.466 li
718.235 665.735 li
728.306 662.198 li
723.633 680.443 li
740.813 724.5 li
751.46 723.302 756.917 728.622 756.946 728.602 cv
773.083 717.259 783.628 698.499 783.628 677.276 cv
cp
.572549 .298039 .619608 rgb
f
720.934 739.97 mo
734.339 739.97 746.76 735.763 756.951 728.597 cv
756.635 726.638 756.206 724.725 755.671 722.87 cv
754.781 722.281 753.719 721.313 754.096 718.293 cv
753.13 715.895 751.981 713.618 750.67 711.488 cv
749.688 711.487 748.625 710.563 748.617 708.451 cv
741.896 699.373 731.987 693.634 720.934 693.634 cv
709.881 693.634 699.972 699.373 693.251 708.449 cv
692.938 710.25 691.844 711.563 691.207 711.473 cv
689.891 713.608 688.739 715.891 687.771 718.295 cv
687.594 720.969 686.875 722.031 686.197 722.87 cv
685.662 724.726 685.233 726.638 684.916 728.597 cv
695.108 735.763 707.529 739.97 720.934 739.97 cv
cp
.827451 .827451 .827451 rgb
f
730.456 647.056 mo
730.074 646.069 725.929 636.183 738.736 627.35 cv
739.437 626.866 740.386 626.956 740.976 627.57 cv
743.3 629.989 748.533 636.321 745.93 642.006 cv
742.632 649.213 733.874 656.176 731.727 650.219 cv
731.073 648.403 730.85 648.072 730.456 647.056 cv
cp
.898039 .898039 .898039 rgb
f
731.184 648.029 mo
730.923 647.349 728.089 640.534 736.876 634.432 cv
737.357 634.098 738.008 634.159 738.412 634.582 cv
740.003 636.248 743.585 640.61 741.796 644.533 cv
739.528 649.506 733.519 654.316 732.052 650.209 cv
731.605 648.958 731.453 648.729 731.184 648.029 cv
cp
.34902 .34902 .34902 rgb
f
711.412 647.056 mo
711.794 646.069 715.939 636.183 703.132 627.35 cv
702.431 626.866 701.482 626.956 700.892 627.57 cv
698.567 629.989 693.335 636.321 695.937 642.006 cv
699.236 649.213 707.993 656.176 710.14 650.219 cv
710.795 648.403 711.018 648.072 711.412 647.056 cv
cp
.898039 .898039 .898039 rgb
f
710.684 648.029 mo
710.945 647.349 713.779 640.534 704.991 634.432 cv
704.51 634.098 703.86 634.159 703.456 634.582 cv
701.865 636.248 698.283 640.61 700.072 644.533 cv
702.34 649.506 708.349 654.316 709.815 650.209 cv
710.262 648.958 710.415 648.729 710.684 648.029 cv
cp
.34902 .34902 .34902 rgb
f
739.299 681.411 mo
739.299 684.893 739.083 688.268 738.679 691.48 cv
737.938 691.667 737.938 693.396 738.335 693.896 cv
735.881 709.28 729.017 720.354 720.934 720.354 cv
712.862 720.354 706.006 709.311 703.544 693.962 cv
704 693.25 704.063 691.583 703.189 691.48 cv
702.784 688.268 702.569 684.893 702.569 681.411 cv
702.569 679.896 702.592 678.401 702.641 676.931 cv
703.313 676.542 703.313 675.958 702.72 674.985 cv
702.801 673.33 702.915 671.71 703.065 670.132 cv
703.625 669.729 704.146 668.66 703.403 667.109 cv
703.698 664.834 704.076 662.663 704.545 660.621 cv
705.646 661.125 706.333 658.813 706.213 654.948 cv
706.871 653.178 707.627 651.561 708.488 650.12 cv
709.667 650.042 711.324 648.958 712.35 645.491 cv
714.703 643.544 717.543 642.468 720.934 642.468 cv
724.3 642.468 727.123 643.528 729.465 645.448 cv
730.543 648.063 732.156 649.844 733.381 650.123 cv
734.243 651.564 734.998 653.18 735.655 654.95 cv
735.484 658.344 736.109 659.922 737.314 660.581 cv
737.787 662.635 738.168 664.819 738.465 667.109 cv
737.813 668.859 738.125 669.859 738.803 670.132 cv
738.953 671.709 739.067 673.329 739.148 674.984 cv
738.188 675.938 738.708 676.458 739.227 676.931 cv
739.276 678.401 739.299 679.896 739.299 681.411 cv
cp
.898039 .898039 .898039 rgb
f
712.34 669.527 mo
712.34 670.904 711.223 672.021 709.846 672.021 cv
708.469 672.021 707.352 670.904 707.352 669.527 cv
707.352 668.15 708.469 667.033 709.846 667.033 cv
711.223 667.033 712.34 668.15 712.34 669.527 cv
cp
.109804 .109804 .109804 rgb
f
711.987 668.66 mo
711.987 669.363 711.417 669.934 710.713 669.934 cv
710.01 669.934 709.439 669.363 709.439 668.66 cv
709.439 667.956 710.01 667.386 710.713 667.386 cv
711.417 667.386 711.987 667.956 711.987 668.66 cv
cp
1 1 1 rgb
f
734.297 669.527 mo
734.297 670.904 733.18 672.021 731.803 672.021 cv
730.426 672.021 729.309 670.904 729.309 669.527 cv
729.309 668.15 730.426 667.033 731.803 667.033 cv
733.18 667.033 734.297 668.15 734.297 669.527 cv
cp
.109804 .109804 .109804 rgb
f
733.944 668.66 mo
733.944 669.363 733.374 669.934 732.67 669.934 cv
731.967 669.934 731.396 669.363 731.396 668.66 cv
731.396 667.956 731.967 667.386 732.67 667.386 cv
733.374 667.386 733.944 667.956 733.944 668.66 cv
cp
1 1 1 rgb
f
720.934 735.137 mo
734.424 735.137 745.962 725.336 750.661 711.473 cv
750.017 710.429 749.336 709.419 748.617 708.448 cv
743.084 719.646 732.759 727.177 720.934 727.177 cv
709.109 727.177 698.784 719.646 693.251 708.448 cv
692.532 709.419 691.851 710.429 691.207 711.473 cv
695.906 725.336 707.444 735.137 720.934 735.137 cv
cp
.34902 .34902 .34902 rgb
f
720.934 641.1 mo
723.266 664.2 723.289 688.377 720.934 711.487 cv
718.579 688.379 718.603 664.197 720.934 641.1 cv
cp
f
717.114 696.959 mo
717.283 697.528 718.119 697.441 718.169 696.85 cv
718.994 687.137 711.901 677.928 702.721 674.986 cv
702.689 675.638 702.662 676.296 702.641 676.959 cv
709.766 682.087 714.563 688.339 717.114 696.959 cv
cp
f
714.838 697.364 mo
715.269 697.689 715.889 697.398 715.705 696.891 cv
713.807 691.676 707.13 687.958 703.189 691.469 cv
703.293 692.302 703.41 693.126 703.54 693.936 cv
708.008 692.416 710.949 694.432 714.838 697.364 cv
cp
f
707.697 664.319 mo
708.137 664.609 708.686 664.162 708.496 663.67 cv
707.415 660.87 706.834 657.905 706.215 654.948 cv
705.568 656.688 705.017 658.575 704.554 660.587 cv
705.307 662.117 706.339 663.424 707.697 664.319 cv
cp
f
710.062 656.089 mo
710.363 656.521 711.039 656.31 711.045 655.783 cv
711.086 652.315 711.828 648.891 712.403 645.45 cv
710.91 646.674 709.612 648.246 708.492 650.116 cv
708.443 652.311 708.892 654.407 710.062 656.089 cv
cp
f
705.928 670.078 mo
705.023 669.143 704.194 668.143 703.403 667.109 cv
703.274 668.1 703.162 669.113 703.065 670.142 cv
703.818 670.542 704.613 670.834 705.445 670.987 cv
705.964 671.082 706.295 670.456 705.928 670.078 cv
cp
f
722.751 644.341 mo
724.352 649.367 725.913 654.51 726.265 659.64 cv
726.265 659.641 li
725.389 666.152 722.602 672.351 721.58 678.904 cv
721.315 680.606 721.101 682.316 720.934 684.033 cv
720.767 682.316 720.553 680.606 720.288 678.904 cv
719.266 672.351 716.479 666.152 715.603 659.641 cv
715.603 659.64 li
715.955 654.51 717.516 649.367 719.117 644.341 cv
719.32 643.704 718.411 643.338 718.118 643.939 cv
715.531 649.254 713.17 655.187 713.449 660.565 cv
713.863 668.564 717.975 676.909 719.156 684.967 cv
719.637 688.249 720.001 691.545 720.315 694.847 cv
720.35 695.213 720.657 695.368 720.934 695.328 cv
721.211 695.368 721.518 695.213 721.553 694.847 cv
721.867 691.545 722.231 688.249 722.712 684.967 cv
723.892 676.909 728.005 668.564 728.419 660.565 cv
728.698 655.187 726.337 649.254 723.75 643.939 cv
723.457 643.338 722.548 643.704 722.751 644.341 cv
cp
f
723.698 696.85 mo
723.749 697.441 724.585 697.528 724.754 696.959 cv
727.305 688.339 732.102 682.087 739.227 676.959 cv
739.206 676.296 739.179 675.638 739.147 674.986 cv
729.967 677.928 722.873 687.137 723.698 696.85 cv
cp
f
726.163 696.891 mo
725.978 697.398 726.599 697.689 727.03 697.364 cv
730.919 694.432 733.859 692.416 738.328 693.936 cv
738.458 693.126 738.574 692.302 738.679 691.469 cv
734.738 687.958 728.061 691.676 726.163 696.891 cv
cp
f
734.17 664.319 mo
735.529 663.424 736.561 662.117 737.314 660.587 cv
736.851 658.575 736.299 656.688 735.653 654.948 cv
735.034 657.905 734.453 660.87 733.371 663.67 cv
733.182 664.162 733.731 664.609 734.17 664.319 cv
cp
f
731.806 656.089 mo
732.975 654.407 733.425 652.311 733.376 650.116 cv
732.256 648.246 730.958 646.674 729.465 645.45 cv
730.04 648.891 730.782 652.315 730.823 655.783 cv
730.829 656.31 731.505 656.521 731.806 656.089 cv
cp
f
736.422 670.987 mo
737.255 670.834 738.05 670.542 738.803 670.142 cv
738.705 669.113 738.593 668.1 738.465 667.109 cv
737.674 668.143 736.844 669.143 735.94 670.078 cv
735.573 670.456 735.904 671.082 736.422 670.987 cv
cp
f
720.934 695.845 mo
714.327 695.845 708.749 700.438 706.98 706.727 cv
710.348 715.067 712.081 720.354 720.934 720.354 cv
729.787 720.354 731.52 715.067 734.888 706.727 cv
733.118 700.438 727.541 695.845 720.934 695.845 cv
cp
.227451 .227451 .227451 rgb
f
720.934 646.623 mo
720.934 646.623 li
719.388 646.623 717.992 645.976 717.814 645.098 cv
715.961 635.95 li
715.431 633.332 717.618 630.736 720.934 630.736 cv
720.934 630.736 li
724.25 630.736 726.437 633.332 725.907 635.95 cv
724.053 645.098 li
723.876 645.976 722.48 646.623 720.934 646.623 cv
cp
f
739.148 737.282 mo
743.719 735.897 748.069 734.004 752.132 731.669 cv
753.581 728.922 754.774 725.971 755.671 722.859 cv
755.22 721.295 754.693 719.773 754.097 718.295 cv
750.884 726.276 745.64 732.912 739.148 737.282 cv
cp
.34902 .34902 .34902 rgb
f
687.77 718.295 mo
687.175 719.773 686.648 721.295 686.197 722.859 cv
687.094 725.971 688.287 728.922 689.736 731.669 cv
693.799 734.004 698.149 735.897 702.72 737.282 cv
696.227 732.912 690.984 726.276 687.77 718.295 cv
cp
f
715.95 706.995 mo
717.361 708.139 717.626 710.247 717.234 710.708 cv
716.843 711.169 716.012 709.688 714.55 708.553 cv
713.087 707.419 711.81 706.897 712.201 706.436 cv
712.592 705.975 714.539 705.85 715.95 706.995 cv
cp
.137255 .137255 .137255 rgb
f
725.918 706.995 mo
724.507 708.139 724.242 710.247 724.634 710.708 cv
725.025 711.169 725.856 709.688 727.318 708.553 cv
728.781 707.419 730.059 706.897 729.667 706.436 cv
729.276 705.975 727.329 705.85 725.918 706.995 cv
cp
f
643.698 677.276 mo
643.698 697.484 634.136 715.46 619.291 726.925 cv
608.167 724.667 595.42 728.167 581.003 728.167 cv
566.681 728.167 554.579 722.833 542.924 727.086 cv
527.959 715.628 518.308 697.579 518.308 677.276 cv
518.308 642.651 546.378 614.581 581.003 614.581 cv
615.628 614.581 643.698 642.651 643.698 677.276 cv
cp
.858824 .466667 .345098 rgb
f
643.698 677.276 mo
643.698 673.881 643.427 670.55 642.907 667.301 cv
610.382 634.776 li
600.262 647.996 li
582.541 674.372 li
600.646 736.83 li
625.65 728.588 643.698 705.04 643.698 677.276 cv
cp
.647059 .313726 .219608 rgb
f
612.501 681.857 mo
549.806 681.857 li
545.822 681.857 542.355 685.044 541.465 689.549 cv
540.477 694.554 539.949 699.83 539.949 705.28 cv
539.949 712.992 541.009 720.352 542.929 727.089 cv
553.485 735.169 566.683 739.97 581.003 739.97 cv
595.499 739.97 608.845 735.05 619.464 726.789 cv
621.331 720.134 622.358 712.877 622.358 705.28 cv
622.358 699.83 621.83 694.554 620.842 689.549 cv
619.952 685.044 616.485 681.857 612.501 681.857 cv
cp
.317647 .317647 .317647 rgb
f
588.046 681.857 mo
574.261 681.857 li
573.385 681.857 572.622 685.044 572.427 689.549 cv
572.209 694.554 572.093 699.83 572.093 705.28 cv
572.093 718.094 572.736 729.94 573.824 739.564 cv
576.18 739.832 578.575 739.97 581.003 739.97 cv
583.536 739.97 586.033 739.819 588.487 739.527 cv
589.573 729.91 590.214 718.078 590.214 705.28 cv
590.214 699.83 590.097 694.554 589.88 689.549 cv
589.685 685.044 588.922 681.857 588.046 681.857 cv
cp
.207843 .207843 .207843 rgb
f
628.961 687.936 mo
628.961 655.726 607.557 629.614 581.153 629.614 cv
554.75 629.614 533.346 655.726 533.346 687.936 cv
533.346 693.387 533.959 698.662 535.105 703.667 cv
536.137 708.173 540.16 711.359 544.782 711.359 cv
617.524 711.359 li
622.147 711.359 626.17 708.173 627.202 703.667 cv
628.348 698.662 628.961 693.387 628.961 687.936 cv
cp
.427451 .427451 .427451 rgb
f
581.015 725.43 mo
575.687 725.43 565.822 718.946 563.944 712.445 cv
556.494 686.661 li
551.2 668.338 561.098 646.197 581.015 646.197 cv
600.932 646.197 610.83 668.338 605.536 686.661 cv
598.086 712.445 li
596.208 718.946 586.343 725.43 581.015 725.43 cv
cp
.486275 .486275 .486275 rgb
f
597.729 658.211 mo
597.269 657.025 592.284 645.135 607.687 634.511 cv
608.531 633.929 609.672 634.037 610.382 634.776 cv
613.177 637.685 619.471 645.3 616.341 652.139 cv
612.373 660.806 601.84 669.181 599.258 662.016 cv
598.471 659.832 598.203 659.434 597.729 658.211 cv
cp
.568627 .568627 .568627 rgb
f
598.604 659.382 mo
598.29 658.564 594.882 650.368 605.451 643.028 cv
606.029 642.627 606.812 642.7 607.298 643.209 cv
609.212 645.213 613.519 650.459 611.367 655.178 cv
608.64 661.159 601.413 666.943 599.649 662.004 cv
599.111 660.499 598.928 660.224 598.604 659.382 cv
cp
.34902 .34902 .34902 rgb
f
564.972 658.211 mo
565.431 657.025 570.417 645.135 555.013 634.511 cv
554.17 633.929 553.029 634.037 552.319 634.776 cv
549.523 637.685 543.23 645.3 546.36 652.139 cv
550.328 660.806 560.861 669.181 563.443 662.016 cv
564.23 659.832 564.498 659.434 564.972 658.211 cv
cp
.568627 .568627 .568627 rgb
f
564.097 659.382 mo
564.411 658.564 567.819 650.368 557.25 643.028 cv
556.671 642.627 555.889 642.7 555.403 643.209 cv
553.489 645.213 549.182 650.459 551.333 655.178 cv
554.06 661.159 561.288 666.943 563.052 662.004 cv
563.589 660.499 563.773 660.224 564.097 659.382 cv
cp
.34902 .34902 .34902 rgb
f
581.015 726.765 mo
575.749 726.765 566 720.577 564.144 714.373 cv
556.782 689.767 li
551.55 672.28 554.16 651.151 581.015 651.151 cv
607.87 651.151 610.48 672.28 605.248 689.767 cv
597.886 714.373 li
596.03 720.577 586.281 726.765 581.015 726.765 cv
cp
.568627 .568627 .568627 rgb
f
576.426 714.448 mo
577.837 715.593 578.102 717.701 577.71 718.162 cv
577.319 718.623 576.488 717.142 575.026 716.007 cv
573.563 714.873 572.285 714.35 572.677 713.889 cv
573.068 713.428 575.015 713.304 576.426 714.448 cv
cp
.137255 .137255 .137255 rgb
f
586.394 714.448 mo
584.983 715.593 584.718 717.701 585.11 718.162 cv
585.501 718.623 586.332 717.142 587.794 716.007 cv
589.257 714.873 590.534 714.35 590.143 713.889 cv
589.752 713.428 587.805 713.304 586.394 714.448 cv
cp
f
589.174 686.584 mo
587.332 671.103 582.428 667.552 581.153 667.552 cv
579.879 667.552 574.974 671.103 573.133 686.584 cv
571.987 696.216 577.454 696.163 581.153 696.163 cv
584.853 696.163 590.32 696.216 589.174 686.584 cv
cp
.976471 .976471 .976471 rgb
f
587.632 693.48 mo
586.144 670.088 582.183 664.722 581.153 664.722 cv
580.124 664.722 576.163 670.088 574.675 693.48 cv
573.75 708.033 578.166 707.953 581.153 707.953 cv
584.141 707.953 588.557 708.033 587.632 693.48 cv
cp
.866667 .866667 .866667 rgb
f
570.003 692.329 mo
570.003 694.756 568.036 696.723 565.61 696.723 cv
563.183 696.723 561.216 694.756 561.216 692.329 cv
561.216 689.903 563.183 687.936 565.61 687.936 cv
568.036 687.936 570.003 689.903 570.003 692.329 cv
cp
.678431 .678431 .678431 rgb
f
600.814 692.329 mo
600.814 694.756 598.847 696.723 596.42 696.723 cv
593.994 696.723 592.027 694.756 592.027 692.329 cv
592.027 689.903 593.994 687.936 596.42 687.936 cv
598.847 687.936 600.814 689.903 600.814 692.329 cv
cp
f
568.016 692.329 mo
568.016 693.658 566.939 694.735 565.61 694.735 cv
564.281 694.735 563.204 693.658 563.204 692.329 cv
563.204 691.001 564.281 689.923 565.61 689.923 cv
566.939 689.923 568.016 691.001 568.016 692.329 cv
cp
.109804 .109804 .109804 rgb
f
598.826 692.329 mo
598.826 693.658 597.749 694.735 596.42 694.735 cv
595.092 694.735 594.014 693.658 594.014 692.329 cv
594.014 691.001 595.092 689.923 596.42 689.923 cv
597.749 689.923 598.826 691.001 598.826 692.329 cv
cp
f
567.676 691.492 mo
567.676 692.171 567.125 692.722 566.447 692.722 cv
565.768 692.722 565.217 692.171 565.217 691.492 cv
565.217 690.814 565.768 690.263 566.447 690.263 cv
567.125 690.263 567.676 690.814 567.676 691.492 cv
cp
1 1 1 rgb
f
598.487 691.492 mo
598.487 692.171 597.937 692.722 597.258 692.722 cv
596.579 692.722 596.029 692.171 596.029 691.492 cv
596.029 690.814 596.579 690.263 597.258 690.263 cv
597.937 690.263 598.487 690.814 598.487 691.492 cv
cp
f
503.274 677.276 mo
503.274 695.031 495.894 711.063 484.033 722.469 cv
471.625 722.125 458.495 730.75 441.625 730.75 cv
424.765 730.75 410.5 719.154 397.146 722.488 cv
385.274 711.08 377.885 695.041 377.885 677.276 cv
377.885 642.651 405.954 614.581 440.58 614.581 cv
475.205 614.581 503.274 642.651 503.274 677.276 cv
cp
.8 .847059 .458824 rgb
f
450.071 739.256 mo
480.192 734.682 503.274 708.675 503.274 677.276 cv
503.274 674.172 503.048 671.12 502.612 668.137 cv
494.18 659.705 li
421.584 673.375 li
450.071 739.256 li
cp
.647059 .666667 .372549 rgb
f
440.58 739.97 mo
457.45 739.97 472.764 733.306 484.034 722.467 cv
478.75 699.43 461.299 682.519 440.58 682.519 cv
419.861 682.519 402.409 699.43 397.126 722.467 cv
408.395 733.306 423.709 739.97 440.58 739.97 cv
cp
.619608 .568627 .513726 rgb
f
440.58 739.97 mo
448.092 739.97 455.296 738.648 461.971 736.225 cv
458.883 714.165 450.473 698.337 440.58 698.337 cv
430.686 698.337 422.277 714.165 419.188 736.225 cv
425.864 738.648 433.067 739.97 440.58 739.97 cv
cp
.54902 .501961 .45098 rgb
f
421.584 652.411 mo
421.584 652.411 410.78 645.38 395.689 653.269 cv
387.486 657.556 384.147 662.655 382.808 666.416 cv
381.802 669.241 382.806 672.391 385.242 674.14 cv
405.412 688.627 li
409.152 691.313 414.426 689.551 415.8 685.155 cv
421.584 666.645 li
421.584 652.411 li
cp
.721569 .662745 .588235 rgb
f
397.857 656.116 mo
409.948 652.574 418.14 656.583 421.584 658.908 cv
421.584 652.411 li
421.584 652.411 410.78 645.38 395.689 653.269 cv
387.788 657.398 384.401 662.28 382.965 665.994 cv
385.123 662.653 389.398 658.593 397.857 656.116 cv
cp
.54902 .501961 .45098 rgb
f
412.568 689.082 mo
414.045 688.286 415.243 686.937 415.8 685.155 cv
417.258 680.488 li
412.568 689.082 li
cp
f
459.575 652.411 mo
459.575 652.411 470.379 645.38 485.471 653.269 cv
493.673 657.556 497.012 662.655 498.351 666.416 cv
499.357 669.241 498.354 672.391 495.918 674.14 cv
475.748 688.627 li
472.007 691.313 466.733 689.551 465.36 685.155 cv
459.575 666.645 li
459.575 652.411 li
cp
.721569 .662745 .588235 rgb
f
483.303 656.116 mo
471.211 652.574 463.019 656.583 459.575 658.908 cv
459.575 652.411 li
459.575 652.411 470.379 645.38 485.471 653.269 cv
493.371 657.398 496.759 662.28 498.194 665.994 cv
496.036 662.653 491.761 658.593 483.303 656.116 cv
cp
.54902 .501961 .45098 rgb
f
468.592 689.082 mo
467.115 688.286 465.917 686.937 465.36 685.155 cv
463.901 680.488 li
468.592 689.082 li
cp
f
440.58 695.925 mo
440.58 695.925 li
434.169 695.925 427.387 692.929 424.85 687.988 cv
419.603 677.765 li
412.371 663.676 418.968 642.082 440.58 642.082 cv
440.58 642.082 li
462.191 642.082 468.789 663.676 461.557 677.765 cv
456.309 687.988 li
453.773 692.929 446.99 695.925 440.58 695.925 cv
cp
.721569 .662745 .588235 rgb
f
449.63 676.479 mo
449.068 685.26 448.056 700.006 447.942 702.772 cv
447.619 710.649 456.262 711.114 456.381 708.222 cv
456.621 702.383 463.693 701.87 465.878 706.467 cv
467.097 709.032 465.73 712.779 464.356 714.922 cv
461.317 719.66 455.399 721.412 450.021 721.143 cv
429.426 720.114 433.178 690.587 432.275 676.479 cv
431.513 664.57 450.312 664.513 449.63 676.479 cv
cp
f
429.421 667.526 mo
429.421 669.678 427.677 671.422 425.525 671.422 cv
423.373 671.422 421.629 669.678 421.629 667.526 cv
421.629 665.374 423.373 663.63 425.525 663.63 cv
427.677 663.63 429.421 665.374 429.421 667.526 cv
cp
.886275 .862745 .870588 rgb
f
459.531 667.526 mo
459.531 669.678 457.786 671.422 455.635 671.422 cv
453.483 671.422 451.739 669.678 451.739 667.526 cv
451.739 665.374 453.483 663.63 455.635 663.63 cv
457.786 663.63 459.531 665.374 459.531 667.526 cv
cp
f
427.658 667.526 mo
427.658 668.704 426.703 669.66 425.525 669.66 cv
424.347 669.66 423.391 668.704 423.391 667.526 cv
423.391 666.348 424.347 665.393 425.525 665.393 cv
426.703 665.393 427.658 666.348 427.658 667.526 cv
cp
.109804 .109804 .109804 rgb
f
457.768 667.526 mo
457.768 668.704 456.813 669.66 455.635 669.66 cv
454.456 669.66 453.501 668.704 453.501 667.526 cv
453.501 666.348 454.456 665.393 455.635 665.393 cv
456.813 665.393 457.768 666.348 457.768 667.526 cv
cp
f
427.357 666.784 mo
427.357 667.386 426.869 667.874 426.267 667.874 cv
425.665 667.874 425.177 667.386 425.177 666.784 cv
425.177 666.182 425.665 665.694 426.267 665.694 cv
426.869 665.694 427.357 666.182 427.357 666.784 cv
cp
1 1 1 rgb
f
457.468 666.784 mo
457.468 667.386 456.98 667.874 456.378 667.874 cv
455.776 667.874 455.288 667.386 455.288 666.784 cv
455.288 666.182 455.776 665.694 456.378 665.694 cv
456.98 665.694 457.468 666.182 457.468 666.784 cv
cp
f
430.28 689.55 mo
428.942 689.55 427.854 690.058 427.843 690.689 cv
427.835 691.113 427.831 691.542 427.831 691.977 cv
427.831 699.226 428.928 705.103 430.28 705.103 cv
431.633 705.103 432.729 699.226 432.729 691.977 cv
432.729 691.542 432.725 691.113 432.718 690.689 cv
432.706 690.058 431.619 689.55 430.28 689.55 cv
430.28 689.55 li
cp
.980392 .988235 .909804 rgb
f
450.879 689.55 mo
449.541 689.55 448.453 690.058 448.442 690.689 cv
448.434 691.113 448.43 691.542 448.43 691.977 cv
448.43 699.226 449.527 705.103 450.879 705.103 cv
452.232 705.103 453.328 699.226 453.328 691.977 cv
453.328 691.542 453.324 691.113 453.317 690.689 cv
453.305 690.058 452.217 689.55 450.879 689.55 cv
450.879 689.55 li
cp
f
416.965 668.914 mo
417.317 672.005 418.197 675.027 419.603 677.765 cv
424.85 687.988 li
425.466 689.187 426.333 690.271 427.383 691.226 cv
428.042 682.64 424.63 673.698 416.965 668.914 cv
cp
.54902 .501961 .45098 rgb
f
456.309 687.988 mo
461.557 677.765 li
462.962 675.027 463.843 672.005 464.195 668.914 cv
456.529 673.698 453.118 682.64 453.776 691.226 cv
454.826 690.271 455.693 689.187 456.309 687.988 cv
cp
f
446.724 679.373 mo
446.666 680.144 444.138 680.758 441.078 680.758 cv
438.017 680.758 435.49 680.144 435.432 679.373 cv
435.373 678.585 437.9 677.935 441.078 677.935 cv
444.256 677.935 446.783 678.585 446.724 679.373 cv
cp
f
446.211 686.201 mo
446.163 686.84 443.865 687.348 441.078 687.348 cv
438.29 687.348 435.993 686.84 435.945 686.201 cv
435.896 685.551 438.194 685.015 441.078 685.015 cv
443.962 685.015 446.259 685.551 446.211 686.201 cv
cp
f
445.783 691.893 mo
445.743 692.429 443.636 692.857 441.078 692.857 cv
438.519 692.857 436.413 692.429 436.372 691.893 cv
436.331 691.347 438.438 690.897 441.078 690.897 cv
443.718 690.897 445.824 691.347 445.783 691.893 cv
cp
f
445.421 696.708 mo
445.387 697.166 443.442 697.532 441.078 697.532 cv
438.713 697.532 436.769 697.166 436.734 696.708 cv
436.699 696.243 438.644 695.861 441.078 695.861 cv
443.512 695.861 445.456 696.243 445.421 696.708 cv
cp
f
445.111 700.836 mo
445.081 701.231 443.276 701.547 441.078 701.547 cv
438.88 701.547 437.074 701.231 437.044 700.836 cv
437.014 700.436 438.82 700.107 441.078 700.107 cv
443.336 700.107 445.141 700.436 445.111 700.836 cv
cp
f
444.842 704.414 mo
444.816 704.758 443.131 705.034 441.078 705.034 cv
439.024 705.034 437.339 704.758 437.313 704.414 cv
437.287 704.065 438.972 703.779 441.078 703.779 cv
443.183 703.779 444.868 704.065 444.842 704.414 cv
cp
f
363.131 677.276 mo
363.131 711.901 335.061 739.97 300.436 739.97 cv
265.811 739.97 237.742 711.901 237.742 677.276 cv
237.742 642.651 265.811 614.581 300.436 614.581 cv
335.061 614.581 363.131 642.651 363.131 677.276 cv
cp
.372549 .698039 .698039 rgb
f
363.093 679.441 mo
302.749 619.096 li
300.436 636.288 li
291.996 667.843 li
262.285 716.021 li
284.079 737.815 li
289.294 739.22 294.777 739.97 300.436 739.97 cv
334.337 739.97 361.952 713.064 363.093 679.441 cv
cp
.305882 .537255 .52549 rgb
f
281.25 687.089 mo
273.558 690.669 256.817 711.681 262.285 716.021 cv
266.546 719.403 276.434 712.3 282.916 705.477 cv
289.398 698.654 294.214 691.524 294.214 691.524 cv
294.214 691.524 288.942 683.508 281.25 687.089 cv
cp
.254902 .317647 .407843 rgb
f
319.622 687.089 mo
327.314 690.669 344.055 711.681 338.587 716.021 cv
334.326 719.403 324.438 712.3 317.956 705.477 cv
311.474 698.654 306.658 691.524 306.658 691.524 cv
306.658 691.524 311.93 683.508 319.622 687.089 cv
cp
f
332.074 670.278 mo
332.074 687.751 317.91 701.916 300.436 701.916 cv
282.963 701.916 268.798 687.751 268.798 670.278 cv
268.798 652.804 282.963 638.639 300.436 638.639 cv
317.91 638.639 332.074 652.804 332.074 670.278 cv
cp
.6 .741176 .878431 rgb
f
270.765 669.144 mo
280.772 669.144 283.298 673.363 287.981 676.859 cv
291.294 679.332 295.482 675.283 300.436 675.283 cv
305.39 675.283 309.325 679.565 312.429 677.276 cv
317.266 673.708 319.907 669.144 330.107 669.144 cv
330.806 669.144 331.452 669.11 332.048 669.045 cv
331.4 652.143 317.496 638.639 300.436 638.639 cv
283.376 638.639 269.472 652.143 268.824 669.045 cv
269.421 669.11 270.067 669.144 270.765 669.144 cv
cp
.254902 .317647 .407843 rgb
f
309.975 680.078 mo
309.975 683.737 305.704 686.704 300.436 686.704 cv
295.168 686.704 290.898 683.737 290.898 680.078 cv
290.898 676.418 295.168 673.451 300.436 673.451 cv
305.704 673.451 309.975 676.418 309.975 680.078 cv
cp
.784314 .831373 .858824 rgb
f
300.436 659.68 mo
287.166 659.68 275.556 663.45 269.2 669.08 cv
269.69 669.122 270.21 669.144 270.765 669.144 cv
280.772 669.144 283.298 673.363 287.981 676.859 cv
291.294 679.332 295.482 675.283 300.436 675.283 cv
305.39 675.283 309.325 679.565 312.429 677.276 cv
317.266 673.708 319.907 669.144 330.107 669.144 cv
330.662 669.144 331.183 669.122 331.673 669.08 cv
325.316 663.45 313.707 659.68 300.436 659.68 cv
cp
.372549 .462745 .576471 rgb
f
300.419 617.337 mo
299.344 617.337 298.403 618.059 298.124 619.096 cv
297.639 620.898 297.191 623.38 296.861 626.54 cv
295.521 639.382 296.537 655.239 300.436 655.239 cv
304.335 655.239 305.351 639.382 304.011 626.54 cv
303.681 623.38 303.234 620.898 302.749 619.096 cv
302.469 618.059 301.528 617.337 300.454 617.337 cv
300.448 617.337 300.442 617.337 300.436 617.337 cv
300.43 617.337 300.425 617.337 300.419 617.337 cv
cp
.254902 .317647 .407843 rgb
f
283.345 663.069 mo
283.345 665.705 281.207 667.843 278.57 667.843 cv
275.934 667.843 273.796 665.705 273.796 663.069 cv
273.796 660.432 275.934 658.294 278.57 658.294 cv
281.207 658.294 283.345 660.432 283.345 663.069 cv
cp
.372549 .462745 .576471 rgb
f
327.076 663.069 mo
327.076 665.705 324.939 667.843 322.302 667.843 cv
319.665 667.843 317.528 665.705 317.528 663.069 cv
317.528 660.432 319.665 658.294 322.302 658.294 cv
324.939 658.294 327.076 660.432 327.076 663.069 cv
cp
f
281.185 663.069 mo
281.185 664.513 280.014 665.683 278.57 665.683 cv
277.126 665.683 275.956 664.513 275.956 663.069 cv
275.956 661.625 277.126 660.454 278.57 660.454 cv
280.014 660.454 281.185 661.625 281.185 663.069 cv
cp
.109804 .109804 .109804 rgb
f
324.917 663.069 mo
324.917 664.513 323.746 665.683 322.302 665.683 cv
320.858 665.683 319.688 664.513 319.688 663.069 cv
319.688 661.625 320.858 660.454 322.302 660.454 cv
323.746 660.454 324.917 661.625 324.917 663.069 cv
cp
f
280.816 662.159 mo
280.816 662.897 280.218 663.495 279.48 663.495 cv
278.742 663.495 278.144 662.897 278.144 662.159 cv
278.144 661.422 278.742 660.823 279.48 660.823 cv
280.218 660.823 280.816 661.422 280.816 662.159 cv
cp
1 1 1 rgb
f
324.548 662.159 mo
324.548 662.897 323.95 663.495 323.212 663.495 cv
322.475 663.495 321.877 662.897 321.877 662.159 cv
321.877 661.422 322.475 660.823 323.212 660.823 cv
323.95 660.823 324.548 661.422 324.548 662.159 cv
cp
f
223.277 677.276 mo
223.277 711.901 195.207 739.97 160.582 739.97 cv
125.957 739.97 97.8874 711.901 97.8874 677.276 cv
97.8874 642.651 125.957 614.581 160.582 614.581 cv
195.207 614.581 223.277 642.651 223.277 677.276 cv
cp
.372549 .541176 .705882 rgb
f
161.179 614.585 mo
161.009 615.675 li
158.276 647.961 li
141.635 688.107 li
131.883 703.994 li
120.951 716.021 li
142.144 737.214 li
147.974 739.006 154.165 739.97 160.582 739.97 cv
195.207 739.97 223.277 711.901 223.277 677.276 cv
223.277 642.85 195.529 614.906 161.179 614.585 cv
cp
.262745 .384314 .486275 rgb
f
139.916 687.089 mo
132.224 690.669 115.483 711.681 120.951 716.021 cv
125.212 719.403 139.745 715.746 146.227 708.923 cv
152.709 702.1 152.88 691.524 152.88 691.524 cv
152.88 691.524 147.608 683.508 139.916 687.089 cv
cp
.266667 .266667 .266667 rgb
f
183.233 687.089 mo
190.924 690.669 207.666 711.681 202.197 716.021 cv
197.937 719.403 183.403 715.746 176.921 708.923 cv
170.439 702.1 170.269 691.524 170.269 691.524 cv
170.269 691.524 175.541 683.508 183.233 687.089 cv
cp
f
192.22 670.278 mo
192.22 687.751 178.055 701.916 160.582 701.916 cv
143.109 701.916 128.944 687.751 128.944 670.278 cv
128.944 669.845 128.952 669.414 128.97 668.986 cv
131.594 667.531 131.781 662.406 130.399 660.764 cv
131.682 656.688 133.769 652.969 136.472 649.79 cv
145.563 651.188 150.529 644.188 160.188 644.188 cv
169.846 644.188 170.75 652.938 184.691 649.789 cv
187.396 652.969 189.484 656.692 190.767 660.771 cv
188.125 663.344 190.344 667.344 192.194 668.984 cv
192.212 669.413 192.22 669.844 192.22 670.278 cv
cp
.898039 .898039 .898039 rgb
f
130.911 669.144 mo
142.581 669.144 144.866 681.444 160.582 681.444 cv
176.298 681.444 178.583 669.144 190.253 669.144 cv
190.952 669.144 191.598 669.11 192.194 669.045 cv
191.546 652.143 177.642 638.639 160.582 638.639 cv
143.522 638.639 129.618 652.143 128.97 669.045 cv
129.566 669.11 130.212 669.144 130.911 669.144 cv
cp
.266667 .266667 .266667 rgb
f
141.951 664.337 mo
141.951 665.781 140.781 666.951 139.337 666.951 cv
137.893 666.951 136.722 665.781 136.722 664.337 cv
136.722 662.893 137.893 661.722 139.337 661.722 cv
140.781 661.722 141.951 662.893 141.951 664.337 cv
cp
.109804 .109804 .109804 rgb
f
141.582 663.427 mo
141.582 664.165 140.984 664.763 140.246 664.763 cv
139.508 664.763 138.91 664.165 138.91 663.427 cv
138.91 662.69 139.508 662.092 140.246 662.092 cv
140.984 662.092 141.582 662.69 141.582 663.427 cv
cp
1 1 1 rgb
f
179.213 664.337 mo
179.213 665.781 180.383 666.951 181.827 666.951 cv
183.271 666.951 184.442 665.781 184.442 664.337 cv
184.442 662.893 183.271 661.722 181.827 661.722 cv
180.383 661.722 179.213 662.893 179.213 664.337 cv
cp
.109804 .109804 .109804 rgb
f
181.525 663.556 mo
181.525 664.293 182.123 664.891 182.861 664.891 cv
183.599 664.891 184.197 664.293 184.197 663.556 cv
184.197 662.818 183.599 662.22 182.861 662.22 cv
182.123 662.22 181.525 662.818 181.525 663.556 cv
cp
1 1 1 rgb
f
136.474 649.792 mo
133.769 652.973 131.682 656.696 130.399 660.775 cv
135.201 662.555 139.829 661.926 141.227 659.103 cv
142.572 656.386 140.489 652.522 136.474 649.792 cv
cp
.898039 .898039 .898039 rgb
f
184.69 649.792 mo
180.675 652.522 178.592 656.386 179.937 659.103 cv
181.335 661.926 185.962 662.555 190.765 660.775 cv
189.482 656.696 187.395 652.973 184.69 649.792 cv
cp
f
158.832 614.606 mo
158.301 619.077 157.967 625.553 157.967 632.758 cv
157.967 646.249 159.138 657.186 160.582 657.186 cv
162.026 657.186 163.197 646.249 163.197 632.758 cv
163.197 625.553 162.863 619.077 162.332 614.606 cv
161.75 614.59 161.167 614.581 160.582 614.581 cv
159.997 614.581 159.414 614.59 158.832 614.606 cv
cp
.266667 .266667 .266667 rgb
f
923.512 677.276 mo
923.512 698.497 912.969 717.255 896.835 728.598 cv
885.667 727.583 873.488 730.417 860.083 730.417 cv
846.68 730.417 836.167 725.583 824.803 728.601 cv
808.667 717.258 798.122 698.498 798.122 677.276 cv
798.122 642.651 826.192 614.581 860.817 614.581 cv
895.442 614.581 923.512 642.651 923.512 677.276 cv
cp
.392157 .866667 .501961 rgb
f
923.512 677.276 mo
923.512 674.738 923.36 672.236 923.067 669.778 cv
878.58 628.507 li
872.287 646.197 li
870.188 654.396 li
845.057 628.299 li
843.673 636.466 li
858.118 665.735 li
868.189 662.198 li
863.516 680.443 li
879.094 730.563 li
889.776 729.361 889.5 728.719 896.822 728.607 cv
912.963 717.264 923.512 698.502 923.512 677.276 cv
cp
.309804 .639216 .364706 rgb
f
868.81 646.9 mo
866.028 638.707 873.526 640.486 875.819 630.219 cv
877.622 622.148 884.025 636.715 880.972 643.457 cv
878.204 649.569 871.704 654.621 869.886 649.578 cv
869.332 648.041 869.107 647.774 868.81 646.9 cv
cp
.407843 .223529 .0862745 rgb
f
876.506 629.145 mo
876.5 628.884 876.501 628.639 876.509 628.41 cv
876.24 628.794 876.005 629.386 875.819 630.219 cv
873.526 640.486 864.81 639.453 867.592 647.646 cv
867.888 648.52 869.332 648.041 869.886 649.578 cv
870.421 651.061 871.361 651.671 872.491 651.637 cv
867.37 642.904 876.844 642.438 876.506 629.145 cv
cp
.678431 .384314 .117647 rgb
f
852.84 646.9 mo
855.622 638.707 848.124 640.486 845.831 630.219 cv
844.028 622.148 837.625 636.715 840.678 643.457 cv
843.446 649.569 849.946 654.621 851.764 649.578 cv
852.318 648.041 852.543 647.774 852.84 646.9 cv
cp
.407843 .223529 .0862745 rgb
f
845.144 629.145 mo
845.15 628.884 845.149 628.639 845.141 628.41 cv
845.41 628.794 845.645 629.386 845.831 630.219 cv
848.124 640.486 857.021 639.405 854.239 647.598 cv
853.942 648.472 852.318 648.041 851.764 649.578 cv
851.229 651.061 850.289 651.671 849.159 651.637 cv
854.279 642.904 844.806 642.438 845.144 629.145 cv
cp
.678431 .384314 .117647 rgb
f
860.817 739.97 mo
874.222 739.97 886.643 735.763 896.835 728.597 cv
893.621 708.689 878.719 693.634 860.817 693.634 cv
842.915 693.634 828.013 708.689 824.8 728.597 cv
834.991 735.763 847.412 739.97 860.817 739.97 cv
cp
.588235 .329412 .113725 rgb
f
880.593 671.578 mo
880.593 649.525 865.331 643.591 860.816 643.591 cv
856.302 643.591 841.04 649.525 841.04 671.578 cv
841.04 678.881 842.597 684.363 845.211 688.267 cv
847.18 691.209 848.178 694.695 848.178 698.235 cv
848.178 705.906 li
848.178 712.857 853.865 718.544 860.816 718.544 cv
860.816 718.544 li
867.768 718.544 873.455 712.857 873.455 705.906 cv
873.455 698.161 li
873.455 694.628 874.445 691.147 876.41 688.211 cv
879.031 684.295 880.593 678.819 880.593 671.578 cv
cp
.678431 .384314 .117647 rgb
f
860.817 739.97 mo
866.926 739.97 872.83 739.096 878.412 737.467 cv
876.087 719.299 869.09 706.102 860.817 706.102 cv
852.545 706.102 845.547 719.299 843.222 737.467 cv
848.804 739.096 854.708 739.97 860.817 739.97 cv
cp
.666667 .427451 .235294 rgb
f
860.814 700.464 mo
857.953 700.464 855.317 701.546 853.215 703.364 cv
849.977 706.165 848.933 710.98 850.62 715.064 cv
852.679 720.049 854.877 723.036 860.814 723.036 cv
866.752 723.036 868.949 720.048 871.009 715.061 cv
872.659 711.065 871.718 706.334 868.6 703.529 cv
866.468 701.611 863.761 700.464 860.814 700.464 cv
cp
.266667 .145098 .0627451 rgb
f
860.817 698.502 mo
857.522 698.502 854.486 699.583 852.065 701.402 cv
848.336 704.203 847.133 709.018 849.076 713.102 cv
851.448 718.087 853.979 721.074 860.817 721.074 cv
867.656 721.074 870.186 718.086 872.559 713.099 cv
874.459 709.103 873.375 704.372 869.784 701.567 cv
867.329 699.649 864.211 698.502 860.817 698.502 cv
cp
.407843 .223529 .0862745 rgb
f
869.054 712.152 mo
870.573 710.92 870.858 708.649 870.436 708.153 cv
870.015 707.656 869.12 709.252 867.545 710.473 cv
865.971 711.695 864.595 712.257 865.016 712.754 cv
865.438 713.25 867.534 713.384 869.054 712.152 cv
cp
.137255 .137255 .137255 rgb
f
852.579 712.152 mo
851.06 710.92 850.775 708.649 851.196 708.153 cv
851.618 707.656 852.513 709.252 854.088 710.473 cv
855.662 711.695 857.038 712.257 856.617 712.754 cv
856.195 713.25 854.099 713.384 852.579 712.152 cv
cp
f
866.275 675.177 mo
866.275 682.949 863.831 689.249 860.816 689.249 cv
857.802 689.249 855.358 682.949 855.358 675.177 cv
855.358 667.405 857.802 661.104 860.816 661.104 cv
863.831 661.104 866.275 667.405 866.275 675.177 cv
cp
.882353 .854902 .780392 rgb
f
852.077 667.525 mo
852.077 669.679 850.331 671.425 848.177 671.425 cv
846.023 671.425 844.277 669.679 844.277 667.525 cv
844.277 665.371 846.023 663.625 848.177 663.625 cv
850.331 663.625 852.077 665.371 852.077 667.525 cv
cp
.698039 .486275 .313726 rgb
f
877.356 667.525 mo
877.356 669.679 875.61 671.425 873.456 671.425 cv
871.302 671.425 869.556 669.679 869.556 667.525 cv
869.556 665.371 871.302 663.625 873.456 663.625 cv
875.61 663.625 877.356 665.371 877.356 667.525 cv
cp
f
850.313 667.525 mo
850.313 668.705 849.357 669.661 848.177 669.661 cv
846.998 669.661 846.041 668.705 846.041 667.525 cv
846.041 666.346 846.998 665.39 848.177 665.39 cv
849.357 665.39 850.313 666.346 850.313 667.525 cv
cp
.109804 .109804 .109804 rgb
f
875.591 667.525 mo
875.591 668.705 874.635 669.661 873.456 669.661 cv
872.276 669.661 871.32 668.705 871.32 667.525 cv
871.32 666.346 872.276 665.39 873.456 665.39 cv
874.635 665.39 875.591 666.346 875.591 667.525 cv
cp
f
850.011 666.782 mo
850.011 667.385 849.523 667.873 848.92 667.873 cv
848.317 667.873 847.829 667.385 847.829 666.782 cv
847.829 666.18 848.317 665.691 848.92 665.691 cv
849.523 665.691 850.011 666.18 850.011 666.782 cv
cp
1 1 1 rgb
f
875.291 666.782 mo
875.291 667.385 874.802 667.873 874.2 667.873 cv
873.597 667.873 873.108 667.385 873.108 666.782 cv
873.108 666.18 873.597 665.691 874.2 665.691 cv
874.802 665.691 875.291 666.18 875.291 666.782 cv
cp
f
861.618 658.345 mo
860.015 658.345 li
856.628 658.345 853.857 655.574 853.857 652.187 cv
853.857 647.947 li
853.857 644.56 856.628 641.789 860.015 641.789 cv
861.618 641.789 li
865.005 641.789 867.776 644.56 867.776 647.947 cv
867.776 652.187 li
867.776 655.574 865.005 658.345 861.618 658.345 cv
cp
.407843 .223529 .0862745 rgb
f
643.698 830.841 mo
643.698 860.938 622.49 886.082 594.203 892.144 cv
590.75 889.193 585.531 888.146 581.003 888.146 cv
576.459 888.146 571.833 889.193 567.759 892.134 cv
539.494 886.056 518.308 860.923 518.308 830.841 cv
518.308 796.216 546.378 768.147 581.003 768.147 cv
615.628 768.147 643.698 796.216 643.698 830.841 cv
cp
.34902 .823529 .847059 rgb
f
576.74 887.215 mo
583.589 893.483 li
617.015 892.127 643.698 864.6 643.698 830.841 cv
643.698 827.708 643.467 824.628 643.023 821.618 cv
616.027 794.622 li
609.075 802.257 li
590.114 783.297 li
589.919 800.263 li
589.864 800.554 li
572.756 783.446 li
570.185 796.505 li
573.09 820.25 li
587.735 812 li
584.42 829.816 li
576.74 887.215 li
cp
.25098 .627451 .627451 rgb
f
581.003 893.536 mo
585.548 893.536 589.98 893.052 594.251 892.133 cv
588.615 826.66 li
588.241 822.308 584.833 819.054 581.009 819.054 cv
580.997 819.054 li
577.174 819.054 573.765 822.308 573.391 826.66 cv
567.755 892.133 li
572.026 893.052 576.458 893.536 581.003 893.536 cv
cp
.85098 .701961 .509804 rgb
f
590.968 871.556 mo
590.968 877.028 586.507 881.464 581.003 881.464 cv
575.5 881.464 571.038 877.028 571.038 871.556 cv
571.038 866.084 575.5 861.648 581.003 861.648 cv
586.507 861.648 590.968 866.084 590.968 871.556 cv
cp
.698039 .568627 .427451 rgb
f
576.33 791.124 mo
576.33 795.447 574.343 798.952 571.892 798.952 cv
569.441 798.952 567.454 795.447 567.454 791.124 cv
567.454 786.801 569.441 783.297 571.892 783.297 cv
574.343 783.297 576.33 786.801 576.33 791.124 cv
cp
.498039 .4 .305882 rgb
f
594.552 791.124 mo
594.552 795.447 592.565 798.952 590.114 798.952 cv
587.663 798.952 585.676 795.447 585.676 791.124 cv
585.676 786.801 587.663 783.297 590.114 783.297 cv
592.565 783.297 594.552 786.801 594.552 791.124 cv
cp
f
592.253 850.976 mo
604.764 826.4 604.968 821.985 598.017 812.388 cv
595.299 808.633 592.719 802.144 593.559 798.952 cv
595.225 792.618 593.758 788.913 590.329 788.913 cv
587.452 788.913 585.47 791.469 585.89 796.74 cv
586.256 801.33 582.711 801.91 581.003 801.91 cv
579.295 801.91 575.75 801.33 576.116 796.74 cv
576.536 791.469 574.554 788.913 571.677 788.913 cv
568.248 788.913 566.781 792.618 568.447 798.952 cv
569.287 802.144 566.708 808.633 563.989 812.388 cv
557.038 821.985 557.242 826.4 569.753 850.976 cv
571.83 855.056 567.239 861.249 567.239 866.545 cv
567.239 871.841 577.543 879.357 581.003 879.357 cv
581.003 879.357 li
581.003 879.357 li
584.463 879.357 594.767 871.841 594.767 866.545 cv
594.767 861.249 590.176 855.056 592.253 850.976 cv
cp
.85098 .701961 .509804 rgb
f
576.639 829.646 mo
576.225 822.105 566.417 818.501 561.026 817.085 cv
557.487 824.147 559.431 830.699 569.753 850.976 cv
571.502 854.411 568.524 859.344 567.539 863.978 cv
567.682 863.818 567.827 863.636 567.974 863.425 cv
575.478 852.617 577.212 840.066 576.639 829.646 cv
cp
.698039 .568627 .427451 rgb
f
592.253 850.976 mo
602.575 830.699 604.519 824.147 600.98 817.085 cv
595.589 818.501 585.782 822.105 585.367 829.646 cv
584.794 840.066 586.528 852.617 594.032 863.425 cv
594.179 863.636 594.324 863.818 594.467 863.978 cv
593.482 859.344 590.504 854.411 592.253 850.976 cv
cp
f
570.185 826.067 mo
570.185 828.704 568.047 830.841 565.41 830.841 cv
562.774 830.841 560.636 828.704 560.636 826.067 cv
560.636 823.43 562.774 821.293 565.41 821.293 cv
568.047 821.293 570.185 823.43 570.185 826.067 cv
cp
.498039 .4 .305882 rgb
f
568.025 826.067 mo
568.025 827.511 566.854 828.682 565.41 828.682 cv
563.967 828.682 562.796 827.511 562.796 826.067 cv
562.796 824.623 563.967 823.453 565.41 823.453 cv
566.854 823.453 568.025 824.623 568.025 826.067 cv
cp
.109804 .109804 .109804 rgb
f
567.657 825.158 mo
567.657 825.895 567.059 826.493 566.321 826.493 cv
565.583 826.493 564.985 825.895 564.985 825.158 cv
564.985 824.42 565.583 823.822 566.321 823.822 cv
567.059 823.822 567.657 824.42 567.657 825.158 cv
cp
1 1 1 rgb
f
601.37 826.067 mo
601.37 828.704 599.232 830.841 596.596 830.841 cv
593.959 830.841 591.821 828.704 591.821 826.067 cv
591.821 823.43 593.959 821.293 596.596 821.293 cv
599.232 821.293 601.37 823.43 601.37 826.067 cv
cp
.498039 .4 .305882 rgb
f
599.21 826.067 mo
599.21 827.511 598.04 828.682 596.596 828.682 cv
595.152 828.682 593.981 827.511 593.981 826.067 cv
593.981 824.623 595.152 823.453 596.596 823.453 cv
598.04 823.453 599.21 824.623 599.21 826.067 cv
cp
.109804 .109804 .109804 rgb
f
598.842 825.158 mo
598.842 825.895 598.244 826.493 597.506 826.493 cv
596.768 826.493 596.17 825.895 596.17 825.158 cv
596.17 824.42 596.768 823.822 597.506 823.822 cv
598.244 823.822 598.842 824.42 598.842 825.158 cv
cp
1 1 1 rgb
f
576.865 860.806 mo
578.429 862.022 578.752 864.222 578.752 864.222 cv
578.752 864.222 576.54 864.449 574.977 863.232 cv
573.413 862.016 573.09 859.816 573.09 859.816 cv
573.09 859.816 575.301 859.589 576.865 860.806 cv
cp
.137255 .0745098 .027451 rgb
f
585.141 860.806 mo
583.578 862.022 583.254 864.222 583.254 864.222 cv
583.254 864.222 585.466 864.449 587.029 863.232 cv
588.593 862.016 588.917 859.816 588.917 859.816 cv
588.917 859.816 586.705 859.589 585.141 860.806 cv
cp
f
596.867 805.721 mo
597.11 804.691 599.292 794.196 614.85 794.168 cv
615.701 794.166 616.433 794.777 616.571 795.618 cv
617.117 798.928 617.845 807.109 612.48 810.322 cv
605.68 814.393 594.519 815.174 596.123 809.048 cv
596.612 807.181 596.616 806.782 596.867 805.721 cv
cp
.85098 .701961 .509804 rgb
f
598.168 806.935 mo
598.338 806.227 599.861 799.006 610.559 798.952 cv
611.145 798.949 611.647 799.367 611.74 799.945 cv
612.108 802.219 612.59 807.842 608.894 810.063 cv
604.209 812.878 596.533 813.439 597.649 809.224 cv
597.99 807.939 597.993 807.665 598.168 806.935 cv
cp
.498039 .4 .305882 rgb
f
565.139 805.721 mo
564.896 804.691 562.714 794.196 547.156 794.168 cv
546.305 794.166 545.573 794.777 545.435 795.618 cv
544.889 798.928 544.161 807.109 549.526 810.322 cv
556.326 814.393 567.487 815.174 565.883 809.048 cv
565.394 807.181 565.39 806.782 565.139 805.721 cv
cp
.85098 .701961 .509804 rgb
f
563.838 806.935 mo
563.668 806.227 562.145 799.006 551.447 798.952 cv
550.861 798.949 550.359 799.367 550.266 799.945 cv
549.898 802.219 549.416 807.842 553.112 810.063 cv
557.797 812.878 565.473 813.439 564.357 809.224 cv
564.016 807.939 564.013 807.665 563.838 806.935 cv
cp
.498039 .4 .305882 rgb
f
569.271 886.055 mo
568.903 886.576 568.513 887.154 568.132 887.755 cv
567.755 892.133 li
571.003 892.831 574.344 893.279 577.757 893.453 cv
577.191 891.323 575.304 888.124 573.489 885.906 cv
572.378 884.549 570.281 884.621 569.271 886.055 cv
cp
f
593.465 883 mo
592.9 882.954 592.286 883.09 591.621 883.459 cv
587.458 885.767 li
586.788 886.139 586.313 886.784 586.152 887.534 cv
585.641 889.906 585.056 891.899 586.472 893.3 cv
589.115 893.071 591.712 892.679 594.251 892.133 cv
593.465 883 li
cp
f
223.277 830.841 mo
223.277 850.416 214.305 867.896 200.25 879.393 cv
186.482 874.625 176.55 880.75 161.5 880.75 cv
146.68 880.75 134.625 874.25 121.412 879.797 cv
107.071 868.307 97.8874 850.647 97.8874 830.841 cv
97.8874 796.216 125.957 768.147 160.582 768.147 cv
195.207 768.147 223.277 796.216 223.277 830.841 cv
cp
.278431 .278431 .286275 rgb
f
223.277 830.841 mo
223.277 826.055 222.739 821.394 221.723 816.915 cv
212.988 808.18 li
205.638 826.656 li
178.639 828.663 li
156.248 813.302 li
142.831 819.467 li
124.594 800.713 li
121.346 801.156 li
112.426 808.18 li
119.088 825.033 li
130.117 829.687 li
121.068 846.15 li
158.978 885.324 li
180.653 874.875 li
193.721 873.839 195.25 874.125 200.197 879.436 cv
214.283 867.94 223.277 850.441 223.277 830.841 cv
cp
.156863 .156863 .156863 rgb
f
121.346 879.743 mo
132.087 888.372 145.732 893.536 160.582 893.536 cv
175.632 893.536 189.443 888.232 200.249 879.392 cv
194.935 859.183 179.304 844.54 160.843 844.54 cv
142.275 844.54 126.572 859.352 121.346 879.743 cv
cp
.439216 .4 .364706 rgb
f
141.715 890.646 mo
147.67 892.523 154.007 893.536 160.582 893.536 cv
167.339 893.536 173.846 892.467 179.944 890.489 cv
176.769 872 169.414 859.045 160.843 859.045 cv
152.248 859.045 144.875 872.073 141.715 890.646 cv
cp
.639216 .592157 .545098 rgb
f
166.123 857.736 mo
155.563 857.736 li
151.806 857.736 147.82 858.833 146.499 855.44 cv
137.339 831.906 li
132.655 819.871 135.712 805.762 146.16 805.762 cv
175.525 805.762 li
185.973 805.762 189.03 819.871 184.346 831.906 cv
175.187 855.44 li
173.866 858.833 169.88 857.736 166.123 857.736 cv
cp
.54902 .501961 .45098 rgb
f
161.808 850.207 mo
159.878 850.207 li
155.799 850.207 152.462 846.87 152.462 842.791 cv
152.462 836.803 li
152.462 832.724 155.799 829.387 159.878 829.387 cv
161.808 829.387 li
165.886 829.387 169.223 832.724 169.223 836.803 cv
169.223 842.791 li
169.223 846.87 165.886 850.207 161.808 850.207 cv
cp
.4 .368627 .345098 rgb
f
166.013 863.542 mo
155.673 863.542 li
153.907 863.542 152.462 862.097 152.462 860.331 cv
152.462 859.496 li
152.462 857.73 153.907 856.285 155.673 856.285 cv
166.013 856.285 li
167.779 856.285 169.223 857.73 169.223 859.496 cv
169.223 860.331 li
169.223 862.097 167.779 863.542 166.013 863.542 cv
cp
.737255 .690196 .65098 rgb
f
148.639 829.387 mo
148.639 831.488 146.936 833.19 144.836 833.19 cv
142.736 833.19 141.033 831.488 141.033 829.387 cv
141.033 827.287 142.736 825.584 144.836 825.584 cv
146.936 825.584 148.639 827.287 148.639 829.387 cv
cp
.4 .368627 .345098 rgb
f
146.919 829.387 mo
146.919 830.537 145.986 831.47 144.836 831.47 cv
143.686 831.47 142.753 830.537 142.753 829.387 cv
142.753 828.237 143.686 827.305 144.836 827.305 cv
145.986 827.305 146.919 828.237 146.919 829.387 cv
cp
.109804 .109804 .109804 rgb
f
146.625 828.663 mo
146.625 829.251 146.149 829.727 145.561 829.727 cv
144.974 829.727 144.497 829.251 144.497 828.663 cv
144.497 828.075 144.974 827.599 145.561 827.599 cv
146.149 827.599 146.625 828.075 146.625 828.663 cv
cp
1 1 1 rgb
f
180.653 829.387 mo
180.653 831.488 178.95 833.19 176.85 833.19 cv
174.749 833.19 173.047 831.488 173.047 829.387 cv
173.047 827.287 174.749 825.584 176.85 825.584 cv
178.95 825.584 180.653 827.287 180.653 829.387 cv
cp
.4 .368627 .345098 rgb
f
178.932 829.387 mo
178.932 830.537 178 831.47 176.85 831.47 cv
175.7 831.47 174.767 830.537 174.767 829.387 cv
174.767 828.237 175.7 827.305 176.85 827.305 cv
178 827.305 178.932 828.237 178.932 829.387 cv
cp
.109804 .109804 .109804 rgb
f
178.639 828.663 mo
178.639 829.251 178.163 829.727 177.575 829.727 cv
176.987 829.727 176.511 829.251 176.511 828.663 cv
176.511 828.075 176.987 827.599 177.575 827.599 cv
178.163 827.599 178.639 828.075 178.639 828.663 cv
cp
1 1 1 rgb
f
161.088 858.734 mo
160.598 858.734 li
157.728 858.734 154.896 859.273 152.175 860.189 cv
148.151 861.543 145.175 857.838 145.175 853.473 cv
145.175 853.473 li
145.175 848.234 149.461 843.947 154.7 843.947 cv
166.986 843.947 li
172.225 843.947 176.511 848.234 176.511 853.473 cv
176.511 853.473 li
176.511 857.838 173.534 861.543 169.51 860.189 cv
166.79 859.273 163.958 858.734 161.088 858.734 cv
cp
.639216 .592157 .545098 rgb
f
168.659 846.54 mo
167.773 846.097 169.224 849.068 167.862 849.907 cv
166.71 850.616 164.672 851.369 165.735 853.318 cv
166.798 855.268 169.944 851.989 170.121 850.262 cv
170.298 848.534 169.545 846.983 168.659 846.54 cv
cp
.2 .188235 .176471 rgb
f
153.027 846.54 mo
153.913 846.097 152.461 849.068 153.824 849.907 cv
154.976 850.616 157.014 851.369 155.951 853.318 cv
154.887 855.268 151.742 851.989 151.565 850.262 cv
151.388 848.534 152.141 846.983 153.027 846.54 cv
cp
f
191.564 825.21 mo
192.558 825.651 202.723 829.845 200.832 845.508 cv
200.729 846.366 200.031 846.985 199.178 846.965 cv
195.82 846.884 187.597 846.059 185.065 840.048 cv
181.856 832.429 182.457 821.048 188.349 823.828 cv
190.144 824.676 190.541 824.756 191.564 825.21 cv
cp
.54902 .501961 .45098 rgb
f
190.197 826.289 mo
190.88 826.595 197.871 829.503 196.605 840.28 cv
196.536 840.87 196.058 841.295 195.472 841.279 cv
193.166 841.216 187.516 840.631 185.765 836.488 cv
183.544 831.237 183.933 823.404 187.985 825.331 cv
189.22 825.918 189.493 825.974 190.197 826.289 cv
cp
.4 .368627 .345098 rgb
f
130.121 825.21 mo
129.128 825.651 118.963 829.845 120.854 845.508 cv
120.957 846.366 121.655 846.985 122.508 846.965 cv
125.865 846.884 134.088 846.059 136.621 840.048 cv
139.83 832.429 139.229 821.048 133.337 823.828 cv
131.542 824.676 131.145 824.756 130.121 825.21 cv
cp
.54902 .501961 .45098 rgb
f
131.489 826.289 mo
130.806 826.595 123.815 829.503 125.081 840.28 cv
125.15 840.87 125.628 841.295 126.214 841.279 cv
128.52 841.216 134.169 840.631 135.921 836.488 cv
138.142 831.237 137.753 823.404 133.7 825.331 cv
132.465 825.918 132.193 825.974 131.489 826.289 cv
cp
.4 .368627 .345098 rgb
f
200.918 800.371 mo
198.388 799.824 198.798 801.397 200.524 802.464 cv
202.25 803.532 209.74 806.731 207.541 814.591 cv
205.342 822.451 197.977 821.981 192.985 817.057 cv
187.993 812.134 182.59 802.628 176.709 799.072 cv
170.828 795.515 165.357 797.704 163.237 800.371 cv
162.501 801.297 162.046 802.42 161.865 803.633 cv
161.683 802.42 161.228 801.297 160.492 800.371 cv
158.372 797.704 152.901 795.515 147.02 799.072 cv
141.139 802.628 135.736 812.134 130.744 817.057 cv
125.752 821.981 118.387 822.451 116.188 814.591 cv
113.989 806.731 121.479 803.532 123.205 802.464 cv
124.931 801.397 125.341 799.824 122.811 800.371 cv
119.73 801.037 103.868 807.754 109.749 819.791 cv
109.749 819.791 115.083 830.461 125.273 829.299 cv
135.463 828.136 141.842 818.698 147.85 817.16 cv
153.859 815.621 157.62 814.048 160.014 810.697 cv
161.026 809.28 161.646 807.69 161.865 806.126 cv
162.083 807.69 162.703 809.28 163.715 810.697 cv
166.109 814.048 169.87 815.621 175.879 817.16 cv
181.887 818.698 188.266 828.136 198.456 829.299 cv
208.646 830.461 213.98 819.791 213.98 819.791 cv
219.861 807.754 203.999 801.037 200.918 800.371 cv
cp
.737255 .690196 .65098 rgb
f
346.518 239.292 mo
220.128 239.292 li
251.307 190.149 li
220.128 141.005 li
346.518 141.005 li
346.518 239.292 li
cp
.847059 .607843 .0745098 rgb
f
279.495 190.149 mo
346.518 239.292 li
346.518 141.005 li
279.495 141.005 li
279.495 190.149 li
cp
.6 .45098 .0745098 rgb
f
653.482 239.292 mo
779.872 239.292 li
748.693 190.149 li
779.872 141.005 li
653.482 141.005 li
653.482 239.292 li
cp
.847059 .607843 .0745098 rgb
f
720.505 190.149 mo
653.482 239.292 li
653.482 141.005 li
720.505 141.005 li
720.505 190.149 li
cp
.6 .45098 .0745098 rgb
f
720.528 190.149 mo
279.495 190.149 li
279.495 91.8615 li
720.528 91.8615 li
720.528 190.149 li
cp
.964706 .752941 .14902 rgb
f
354.917 112.552 mo
360.311 112.552 li
378.201 154.887 li
396.022 112.552 li
401.417 112.552 li
380.864 161.305 li
375.469 161.305 li
354.917 112.552 li
cp
1 1 1 rgb
f
402.642 144.098 mo
423.81 144.098 li
422.785 139.113 418.484 135.29 413.226 135.29 cv
407.9 135.29 403.666 139.113 402.642 144.098 cv
cp
428.794 148.468 mo
402.642 148.468 li
403.598 153.453 407.9 157.55 413.226 157.55 cv
416.709 157.55 419.645 155.843 421.556 153.384 cv
427.224 153.384 li
424.697 158.574 419.303 162.056 413.226 162.056 cv
404.691 162.056 397.658 154.75 397.658 146.352 cv
397.658 137.816 404.691 130.783 413.226 130.783 cv
421.761 130.783 428.794 137.816 428.794 146.352 cv
428.794 148.468 li
cp
f
458.629 141.025 mo
456.785 137.612 453.303 135.29 449.138 135.29 cv
443.061 135.29 438.349 140.274 438.349 146.352 cv
438.349 152.292 443.061 157.55 449.138 157.55 cv
453.303 157.55 456.785 155.092 458.629 151.677 cv
463.818 151.677 li
461.702 157.755 455.898 162.056 449.138 162.056 cv
440.603 162.056 433.57 154.75 433.57 146.352 cv
433.57 137.816 440.603 130.783 449.138 130.783 cv
455.83 130.783 461.565 135.085 463.75 141.025 cv
458.629 141.025 li
cp
f
477.334 135.427 mo
477.334 161.305 li
472.759 161.305 li
472.759 135.427 li
468.253 135.427 li
468.253 131.261 li
472.759 131.261 li
472.759 119.448 li
477.334 119.448 li
477.334 131.261 li
484.094 131.261 li
484.094 135.427 li
477.334 135.427 li
cp
f
492.626 146.352 mo
492.626 152.292 497.338 157.55 503.416 157.55 cv
509.493 157.55 514.204 152.292 514.204 146.352 cv
514.204 140.274 509.493 135.29 503.416 135.29 cv
497.338 135.29 492.626 140.274 492.626 146.352 cv
cp
487.847 146.352 mo
487.847 137.816 494.88 130.783 503.416 130.783 cv
511.95 130.783 518.983 137.816 518.983 146.352 cv
518.983 154.75 511.95 162.056 503.416 162.056 cv
494.88 162.056 487.847 154.75 487.847 146.352 cv
cp
f
530.723 135.358 mo
533.181 132.558 536.732 130.783 540.897 130.783 cv
540.897 135.29 li
535.571 135.29 530.723 138.567 530.723 144.713 cv
530.723 161.305 li
526.148 161.305 li
526.148 131.261 li
530.723 131.261 li
530.723 135.358 li
cp
f
583.228 138.636 mo
582.818 136.587 580.564 135.085 577.014 135.085 cv
573.395 135.085 570.868 136.792 570.868 139.046 cv
570.868 141.299 572.848 142.596 577.766 143.552 cv
585.48 145.122 588.554 147.786 588.554 152.77 cv
588.554 158.028 584.525 161.783 577.014 161.783 cv
570.254 161.783 565.748 158.028 565.474 152.77 cv
569.639 152.77 li
570.05 155.296 573.122 157.481 577.014 157.481 cv
581.452 157.481 584.388 155.501 584.388 152.77 cv
584.388 149.902 582.477 148.946 577.014 147.854 cv
569.844 146.42 566.635 143.825 566.635 139.046 cv
566.635 134.47 570.185 130.783 577.014 130.783 cv
582.954 130.783 586.915 134.061 587.393 138.636 cv
583.228 138.636 li
cp
f
598.656 144.098 mo
619.824 144.098 li
618.8 139.113 614.498 135.29 609.24 135.29 cv
603.914 135.29 599.681 139.113 598.656 144.098 cv
cp
624.809 148.468 mo
598.656 148.468 li
599.613 153.453 603.914 157.55 609.24 157.55 cv
612.723 157.55 615.658 155.843 617.571 153.384 cv
623.238 153.384 li
620.711 158.574 615.317 162.056 609.24 162.056 cv
600.705 162.056 593.672 154.75 593.672 146.352 cv
593.672 137.816 600.705 130.783 609.24 130.783 cv
617.776 130.783 624.809 137.816 624.809 146.352 cv
624.809 148.468 li
cp
f
638.324 135.427 mo
638.324 161.305 li
633.749 161.305 li
633.749 135.427 li
629.242 135.427 li
629.242 131.261 li
633.749 131.261 li
633.749 119.448 li
638.324 119.448 li
638.324 131.261 li
645.083 131.261 li
645.083 135.427 li
638.324 135.427 li
cp
f
419.968 239.243 mo
422.076 239.954 424.612 240.309 427.578 240.309 cv
428.19 240.309 428.643 240.26 428.937 240.162 cv
429.306 240.309 li
429.771 240.309 430.004 240.076 430.004 239.611 cv
430.004 229.122 429.023 217.812 427.063 205.681 cv
427.038 205.534 426.983 205.265 426.897 204.872 cv
426.811 204.48 426.769 204.174 426.769 203.953 cv
426.156 205.694 425.825 206.797 425.777 207.262 cv
425.997 207.703 li
425.825 207.874 425.543 208.739 425.151 210.295 cv
424.759 211.851 424.214 215.061 423.515 219.926 cv
422.817 224.791 422.315 227.915 422.009 229.299 cv
421.701 230.684 421.377 231.941 421.034 233.067 cv
420.323 235.567 419.968 237.479 419.968 238.802 cv
419.968 239.243 li
cp
432.319 232.847 mo
433.165 252.477 li
433.165 253.285 li
433.165 253.874 433.092 254.241 432.945 254.388 cv
432.552 254.732 432.123 254.903 431.658 254.903 cv
431.192 254.903 430.812 254.78 430.518 254.535 cv
430.224 254.291 430.077 253.984 430.077 253.616 cv
430.224 253.322 430.298 253.028 430.298 252.734 cv
430.077 251.227 li
430.077 243.765 li
430.077 243.103 428.754 242.533 426.107 242.055 cv
423.46 241.577 421.499 241.338 420.226 241.338 cv
419.735 241.338 419.294 242.252 418.902 244.077 cv
418.51 245.903 418.13 247.906 417.762 250.087 cv
417.395 252.269 417.027 253.629 416.66 254.168 cv
415.484 254.168 414.712 253.862 414.344 253.248 cv
415.128 252.122 415.881 249.377 416.605 245.014 cv
417.327 240.652 417.909 237.485 418.351 235.512 cv
418.792 233.539 419.582 229.257 420.722 222.664 cv
421.861 216.072 422.633 211.851 423.038 210.001 cv
423.442 208.15 423.754 206.784 423.975 205.901 cv
424.196 205.019 424.477 203.978 424.82 202.777 cv
425.629 199.886 426.352 198.439 426.989 198.439 cv
427.774 198.439 428.294 198.617 428.552 198.973 cv
428.809 199.328 429.029 200.161 429.213 201.472 cv
429.397 202.784 429.581 204.45 429.765 206.472 cv
429.949 208.493 430.114 210.35 430.261 212.041 cv
430.726 217.334 431.014 220.814 431.125 222.48 cv
431.235 224.147 431.462 225.348 431.805 226.083 cv
431.707 227.603 431.658 228.908 431.658 229.998 cv
431.658 231.089 431.878 232.038 432.319 232.847 cv
cp
0 0 0 rgb
f
460.551 254.976 mo
460.6 254.976 460.625 255 460.625 255.05 cv
460.551 254.976 li
cp
462.132 209.063 mo
461.985 207.188 li
461.985 206.135 462.34 205.607 463.051 205.607 cv
463.541 205.607 463.939 205.841 464.246 206.306 cv
464.552 206.772 464.705 207.262 464.705 207.776 cv
464.705 212.812 li
464.301 213.437 li
464.301 217.359 464.031 224.95 463.492 236.21 cv
462.953 247.472 462.426 253.629 461.911 254.682 cv
461.788 254.707 461.427 254.799 460.827 254.958 cv
460.226 255.117 459.803 255.197 459.559 255.197 cv
459.314 255.197 459.093 255.031 458.897 254.701 cv
458.701 254.37 458.548 253.935 458.438 253.395 cv
458.327 252.857 458.223 252.501 458.125 252.33 cv
458.198 252.109 li
457.88 250.026 457.225 247.643 456.232 244.959 cv
455.24 242.276 454.596 240.469 454.302 239.537 cv
454.13 239.317 453.457 237.442 452.28 233.913 cv
447.771 219.92 444.928 212.359 443.752 211.232 cv
443.36 212.776 443.164 214.54 443.164 216.525 cv
443.311 222.444 li
443.164 226.083 li
443.164 226.647 443.261 228.399 443.458 231.339 cv
443.237 231.339 li
443.237 239.697 443.408 244.316 443.752 245.198 cv
443.752 251.962 li
443.948 252.306 444.046 252.747 444.046 253.285 cv
444.046 254.462 443.58 255.05 442.649 255.05 cv
441.595 255.05 441.069 253.702 441.069 251.006 cv
441.363 246.08 li
440.885 224.429 li
441.363 211.085 li
441.363 209.761 li
441.363 209.1 441.381 208.659 441.418 208.438 cv
441.454 208.218 441.491 207.954 441.528 207.648 cv
441.565 207.342 441.62 207.103 441.693 206.931 cv
441.767 206.76 441.852 206.564 441.951 206.343 cv
442.147 205.901 442.404 205.547 442.723 205.277 cv
442.943 205.534 li
443.678 205.35 li
444.242 205.547 444.585 205.938 444.708 206.527 cv
444.708 206.576 444.738 206.717 444.8 206.949 cv
444.86 207.183 444.892 207.311 444.892 207.335 cv
445.749 210.914 447.551 215.9 450.295 222.297 cv
453.04 228.693 454.706 232.804 455.295 234.63 cv
455.883 236.456 456.409 238.385 456.875 240.419 cv
457.904 244.929 459.032 248.225 460.257 250.308 cv
460.404 250.087 li
461.556 239.133 462.132 225.458 462.132 209.063 cv
cp
f
484.335 254.315 mo
481.835 254.058 li
481.443 254.058 480.977 254.199 480.439 254.48 cv
479.899 254.762 479.256 254.903 478.509 254.903 cv
477.761 254.903 477.289 254.658 477.093 254.168 cv
475.844 254.241 li
474.765 254.241 474.079 253.984 473.785 253.469 cv
473.785 253.151 473.926 252.887 474.208 252.679 cv
474.489 252.471 474.679 252.306 474.777 252.183 cv
476.946 252.183 li
477.24 251.889 li
477.498 250.308 li
476.946 233.839 li
477.314 216.268 li
477.314 212.862 477.191 209.958 476.946 207.556 cv
476.456 207.409 475.709 207.335 474.704 207.335 cv
472.903 207.482 li
471.947 207.482 471.469 207.054 471.469 206.196 cv
471.469 205.975 471.695 205.767 472.149 205.571 cv
472.602 205.375 472.976 205.277 473.27 205.277 cv
480.255 205.277 483.747 206.036 483.747 207.556 cv
483.747 207.703 483.685 207.899 483.563 208.144 cv
481.835 208.291 li
481.443 207.997 480.72 207.85 479.667 207.85 cv
479.299 208.071 li
479.446 208.512 479.52 209.847 479.52 212.077 cv
479.299 229.98 li
479.814 246.485 li
479.74 248.801 li
479.74 249.977 479.814 250.676 479.961 250.896 cv
479.887 251.08 li
479.887 251.57 480.439 251.815 481.541 251.815 cv
483.747 251.741 li
485.241 251.741 485.99 252.097 485.99 252.807 cv
485.99 253.248 485.83 253.61 485.511 253.892 cv
485.193 254.174 484.8 254.315 484.335 254.315 cv
cp
f
519.698 212.665 mo
519.625 212.665 li
519.514 212.739 li
519.698 212.812 li
519.698 212.665 li
cp
523.154 239.905 mo
523.006 247.808 li
523.006 251.313 523.251 253.923 523.742 255.638 cv
523.839 255.932 523.888 256.25 523.888 256.594 cv
523.888 256.937 523.736 257.39 523.43 257.954 cv
523.123 258.517 522.725 258.799 522.235 258.799 cv
521.23 258.799 520.728 257.194 520.728 253.984 cv
520.728 243.52 520.648 237.142 520.489 234.85 cv
520.329 232.559 520.158 230.703 519.974 229.281 cv
519.79 227.86 519.698 226.769 519.698 226.009 cv
519.992 216.672 li
519.992 214.908 519.894 213.72 519.698 213.106 cv
518.718 213.891 515.703 224.465 510.655 244.831 cv
510.606 245.002 510.55 245.37 510.49 245.933 cv
510.428 246.497 510.355 247.018 510.269 247.496 cv
510.183 247.973 510.067 248.47 509.921 248.984 cv
509.602 250.112 509.086 250.676 508.376 250.676 cv
507.543 250.676 506.961 250.473 506.63 250.069 cv
506.299 249.664 506.134 249.046 506.134 248.213 cv
506.134 246.154 504.834 239.929 502.237 229.538 cv
499.639 219.148 497.899 213.523 497.017 212.665 cv
496.895 215.361 496.674 219.491 496.356 225.054 cv
495.694 236.646 495.363 244.426 495.363 248.396 cv
495.363 252.366 495.387 254.682 495.437 255.344 cv
495.216 256.006 494.689 256.336 493.856 256.336 cv
493.684 256.336 493.427 256.202 493.084 255.932 cv
492.74 255.662 492.569 255.442 492.569 255.27 cv
492.569 249.977 492.961 242.061 493.746 231.523 cv
494.53 220.986 494.922 213.07 494.922 207.776 cv
494.481 206.343 li
494.481 205.583 495.155 205.203 496.503 205.203 cv
497.262 205.203 497.752 205.595 497.973 206.38 cv
498.144 206.992 498.249 207.624 498.285 208.273 cv
498.322 208.922 498.414 209.657 498.561 210.478 cv
498.708 211.3 499.352 212.991 500.491 215.551 cv
501.631 218.112 502.323 219.846 502.569 220.753 cv
502.813 221.66 503.132 222.775 503.524 224.098 cv
504.333 226.965 504.871 229.122 505.141 230.568 cv
506.134 232.553 li
506.281 233.386 506.563 234.611 506.98 236.229 cv
507.812 239.635 508.253 242.343 508.302 244.353 cv
508.89 243.471 510.472 238.282 513.044 228.785 cv
515.618 219.289 517.02 213.916 517.254 212.665 cv
517.486 211.416 517.652 210.466 517.75 209.816 cv
517.848 209.168 517.946 208.653 518.044 208.273 cv
518.142 207.893 518.277 207.433 518.449 206.894 cv
518.816 205.865 519.428 205.35 520.286 205.35 cv
520.605 205.35 520.997 205.497 521.463 205.791 cv
521.928 206.085 522.161 206.392 522.161 206.711 cv
522.161 227.737 522.492 238.802 523.154 239.905 cv
cp
f
535.91 239.978 mo
535.91 240.493 536.51 240.922 537.711 241.265 cv
539.55 241.779 541.583 242.037 543.813 242.037 cv
544.585 242.037 li
544.267 241.057 544.107 239.929 544.107 238.655 cv
544.107 236.927 li
544.107 233.815 543.721 229.281 542.949 223.326 cv
542.178 217.371 541.767 212.935 541.718 210.019 cv
539.096 222.983 537.473 230.99 536.847 234.042 cv
536.222 237.092 535.91 239.072 535.91 239.978 cv
cp
541.203 243.691 mo
539.219 243.765 li
538.507 243.471 537.723 243.324 536.866 243.324 cv
536.008 243.324 535.543 243.348 535.469 243.397 cv
535.396 243.446 535.346 243.532 535.322 243.654 cv
535.297 243.777 535.273 243.863 535.248 243.912 cv
535.101 245.419 li
535.003 246.693 534.77 248.225 534.402 250.014 cv
533.716 253.518 532.993 255.27 532.234 255.27 cv
531.916 255.27 531.584 255.135 531.241 254.866 cv
530.898 254.597 530.727 254.303 530.727 253.984 cv
531.363 252.097 532.026 249.242 532.712 245.419 cv
533.398 241.596 533.827 239.213 533.998 238.269 cv
534.169 237.326 534.488 235.42 534.954 232.553 cv
535.42 229.685 535.727 227.798 535.873 226.892 cv
536.021 225.985 536.418 224.024 537.068 221.01 cv
537.717 217.996 538.109 216.023 538.244 215.092 cv
538.379 214.161 538.532 212.899 538.703 211.305 cv
539.121 207.385 539.451 205.203 539.696 204.762 cv
540.726 204.836 li
541.338 204.836 541.791 204.689 542.085 204.395 cv
542.404 204.395 542.711 204.499 543.005 204.707 cv
543.299 204.916 543.446 205.191 543.446 205.534 cv
543.446 207.936 543.752 212.58 544.365 219.466 cv
544.977 226.353 545.461 230.807 545.817 232.828 cv
546.172 234.85 546.583 236.835 547.048 238.783 cv
547.514 240.732 547.747 242.22 547.747 243.25 cv
547.379 244.279 li
547.379 245.407 547.587 247.067 548.004 249.26 cv
548.42 251.454 548.629 252.998 548.629 253.892 cv
548.629 254.787 548.432 255.344 548.041 255.565 cv
547.012 255.565 546.38 255.417 546.148 255.123 cv
545.914 254.829 545.798 254.358 545.798 253.708 cv
545.798 253.059 545.755 252.263 545.67 251.319 cv
545.584 250.376 545.498 249.622 545.413 249.058 cv
545.326 248.495 545.179 247.606 544.972 246.393 cv
544.763 245.18 544.634 244.402 544.585 244.059 cv
543.63 243.814 542.502 243.691 541.203 243.691 cv
cp
f
559.142 253.175 mo
566.237 253.395 li
566.457 253.395 li
566.727 253.395 566.984 253.537 567.229 253.819 cv
567.474 254.101 567.597 254.388 567.597 254.682 cv
567.597 255.246 567.192 255.565 566.384 255.638 cv
565.085 255.589 563.002 255.565 560.134 255.565 cv
560.281 255.638 li
557.488 255.895 li
556.776 255.895 556.36 255.319 556.238 254.168 cv
556.335 253.678 556.385 252.844 556.385 251.668 cv
556.826 211.526 li
557.194 206.564 li
557.194 206.22 557.378 206.048 557.745 206.048 cv
558.995 206.343 li
558.921 212.298 li
558.995 228.693 li
558.848 232.81 558.775 234.918 558.775 235.015 cv
558.921 241.412 li
558.701 242.037 li
558.775 241.963 li
558.701 242.551 li
558.701 242.969 558.775 243.324 558.921 243.618 cv
558.701 250.823 li
558.701 251.3 li
558.701 252.085 558.725 252.593 558.775 252.826 cv
558.823 253.059 558.946 253.175 559.142 253.175 cv
cp
f
582.153 206.637 mo
582.153 206.711 li
582.226 206.711 li
582.226 206.662 582.202 206.637 582.153 206.637 cv
cp
581.638 206.931 mo
580.058 206.49 li
579.274 206.49 578.587 206.802 577.999 207.427 cv
577.411 208.052 576.97 208.83 576.676 209.761 cv
576.063 211.575 575.757 212.996 575.757 214.026 cv
575.757 215.055 575.781 215.79 575.831 216.231 cv
575.88 216.672 575.971 217.187 576.106 217.775 cv
576.24 218.363 576.333 218.78 576.382 219.025 cv
576.431 219.27 576.571 219.779 576.804 220.55 cv
577.038 221.323 577.166 221.758 577.19 221.856 cv
577.742 223.216 li
578.232 224.098 578.869 225.207 579.654 226.543 cv
580.438 227.878 581.026 228.889 581.418 229.575 cv
581.809 230.262 582.263 231.162 582.778 232.277 cv
583.293 233.392 583.66 234.403 583.881 235.309 cv
584.493 237.638 584.8 239.727 584.8 241.577 cv
584.8 243.428 584.726 244.911 584.579 246.025 cv
584.432 247.141 584.156 248.286 583.752 249.462 cv
583.348 250.639 582.852 251.668 582.263 252.55 cv
580.915 254.609 579.029 255.638 576.602 255.638 cv
576.235 255.822 li
574.764 255.552 573.955 254.94 573.809 253.984 cv
574.176 253.395 li
576.896 253.911 li
578.048 253.911 579.041 253.463 579.874 252.569 cv
580.707 251.674 581.332 250.541 581.749 249.168 cv
582.484 246.62 582.852 244.261 582.852 242.092 cv
582.852 239.923 582.539 237.877 581.914 235.953 cv
581.29 234.03 580.536 232.271 579.654 230.678 cv
578.771 229.085 577.889 227.492 577.007 225.899 cv
574.874 222.052 573.809 218.266 573.809 214.54 cv
573.809 212.629 574.151 210.803 574.837 209.063 cv
576.088 205.853 577.729 204.247 579.764 204.247 cv
580.327 204.247 580.946 204.462 581.62 204.891 cv
582.294 205.32 582.632 205.804 582.632 206.343 cv
582.632 206.735 582.3 206.931 581.638 206.931 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (User) ()
%%Title: (icons_animals.eps)
%%CreationDate: 9/29/2015 8:41 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2Oede<S6>hAc^c=A.+Qr\E(h$mL@(_[Mp#`sHXNST*i@ln"/-Ki;<gYXK[="b[XcLGp)R0ejV/ZD@=>GY5_FSG38UKap$
%lfXasJ(AX0DM8s_Od#e^s8LX+]?dO562QC!`C@Cb(">;MX[Y<a\$m9`7]X4gg\U0dF0GL_GiRsN#.7Xpn(_O"042RTKjB.*Wn)c"
%UNP[BE[#GC7-d6ir3d&A5lpa3e")]Y.nD].3ZVl<PV)2agt>A&M+tn&9:l`Io4kndniPAkrTaR0>1aRikbFg8Wu"Ub>)pGV-$Yh.
%#%rCoekpSPP$IM/H'#of*p**bR*q:-$)i[%^IJ!"rPmVP+o8gfn@p5Qrt@Sc3@eaCH4CFB=GNk2#U<u'G\r0WYeCGuAP"cm3HuNK
%2/@XgOIa?",L:E]l::];-o:LHb\/abDn3CncZ&K9R<)W$eRNmB%^RLq*;ieGra*c2&,]&H$9PT@l5Wh(".^4N7ekuI>74VQldZL7
%9uo.eou*n#-)a-/Uju@fQ[P>I;uR`u3;-S>5mP?5;<q[]XQA6IQIjrn4o]/F@`Q>Xp7"AH\FE<PFi=PW/<OEhcWcEFjc$h`_T=Nj
%Mk')7YD'(#L**^:j3A+Wa25'ZW"K>^l2X4m^K!G#f%6:%k>kh`K[RH\W`Ba@"b+&J+%]5aB$:i,*k:=!*$5SjQju;>#'X>d*s<p!
%*nt.i'@I"'l?%W(6mOQa[U,d7Kopk-KFQ\==10#KfNE(hFVBKs*C`Z'E?;hgIZa)lLi,#E<$n-JDSQM-3YqY^J%\nOglm@o(LHO:
%)VsOnrN,PXIk;BbNRK$E/gto^/a31+DZB?)puOeZ8IjD.EQ^"&)=W!C-gt-+%rNd,k\LD_obP9,^ICG1^5()E^lfD);RbtA"gpfU
%<NsWD;rU*fYPYGlHk@1)=8`N`pqWf'8B_om5%p2fU=9=SaAQQ?T(9),OF!a%eR#Z?=+j9=>FiMJX\8#b9&M(YXAe?1A^Dl5oG/CC
%r^t!3Icgd0MP+9ia1P6`-@A;>X#-@[\,9F3HJ\4^(Y*PDZdio"jGk1=>$UoSpMiplGOcJtWC]Q,B[ukCMOsfN_[O3n!YhYQB"5;E
%X$JVZbB^*6@a'"l$4o(*-siD+k\hPRI]n't-&b>YY>-%ECATJ54e6Tn,H"_J"\1f3SNmRPNlnYIK6WW/(%WkJ*f3P)],'bAZYCL[
%MVM(<g'NqIfskdk!h)3^n=,!i:mCQ".?^==]U#.u<`X+.d?pV6*kg;/JEid_ZPl'kf&4"JYP):TSg'ebeM=-FId?/+YL[bfs'4+>
%n8\[Ld&N[\3ro?711VrC>(1C]njTreBa&XI_p#7N_K6F*`.'g4O_f9Q"FAVS#J&A0.("Gpc1I?0l\;tLY#[S"6aG8@/!UJ\&E[2g
%Bjr]HlM3k=K:44K[)gW<k,/D(5A-I=Il'^kB6kg;G#&IQk(S<%DC22`d@^Y!9oGBn<2NTpn!e#PPLq25>8kFkE\Ha@12E90l*a>q
%NEIn>2fhK;FX(,M_P]lMc(q^uG.4?$Mc%K.O^m6A9>,\[?gd]="ZeE.c9*tWbT$IlZ;1@A:hg.u\fdM(aPW22>/\r18"D-.ZSrQM
%QMJm^Usj=OgmVV,Mun/C"ZM'EE-r=4U`+]15>7o3:qaT"a@7t!q63oIka<^^Ch$eZ4q(+?1H+Ba(*Q2-DQ=cD-u4AD79TggID!WY
%=BhrN1ks1lC5#VfDJm7)0f[@Ydo()GLnU[#ClpD)90&K-ErR(O\[.S4RXORGUY;Tagd#>G]pR7cMK?:pe$'S7>)q0S[$IJp*3J=9
%/_@c8Ynq++Va\hbXQ<L,"^'%6&Ma1K\]s'9TQYG9<uQQaH@p)Vf/m`!Oc/#::+rrb2J@:a`Sdr"oW6Tk1=OpS7Fu7U4)Cej`?j:r
%[=B:4gMU*kqW;b^Am93)&@[N,,$(QHM)mKW9MLd$c:rW&A*21>EH]nC3nK=F3?IM`P.%n@jYbO/d@7<j6Tk@^(qsn0bVMJ!3jujY
%hpbVB%8*'T\QeZ0>E*s@j4AF,Y5a]bd:_YV\G]40;%H,?0_o6_"DToI[(EFr^Dn5YI6EG2A1((N,r/:np:J41lG!>_Z\G?]NeBVU
%oA`%RXSC*UQbuLXN*0N<F"Jm6QhAhW0b,,PH=p%".(&pLRW0%e%==f*0UGDX_JKU<B]tiZSH8,7Kr2q*iR)>N*4(A")CpG5SPaDf
%`Bg4cK;Cqf2*Dj7VWZ-27[skrp2&23XKOB9Yj'Qn\#Q!WX.Z5o%m*iKis7H_bg20]EPHln[\o,om\e1sQ^C!QF6b6?hKeYUGSRU2
%"6ANJC-27oD)(qJ\$gn$HmY]91@juR7a9GrI'gt_H$c1g%C>NaZdia=2HrK:+,u7@MVD6d\.+bU#kDm/Q"jBU,>lHpFa9g@a6,&,
%3chQ2bqs+$RuePZrg9o3jDWL+)m/6+Sh-fpdE^Z*KOAWY@;HOkCQ[TWFTQss]`'uCTLJ>r?%h1=Z0sP7j*M,1)S^'<c`n;Q!X?Y[
%8_2+HFWH0U?H0R21[?%#p1s:3`V*XXgHW"hCL/?Z3Bs0ER#b!G^i[9EVsN!;,?2#<B<`:PVhS<uc.&^[bfk!J*,9:RD-cr0H;H[1
%C@XCrS\:u9:SpQf6">OdFSbhuRIY/mXL=TU^Du2)0<b<9>Y[:\4qsp"eM\3oS`HNB>i-dL4Pic9I+2$QU5UmfLbh7cC"UqtB9&GM
%0oFGu3-Bf)FW`EnpnlRXZT^ElU6k'6]FPH=aS_!C%:U+OR%6$-B;DkKXet9d;k%*KeuJDYfC3%"Q$+%K=O\HAaZ;#Jr7^'-cXCQ_
%G1^s8QKG\U3N#</`jk=kFEH-S9I'I<X)XslAn8>adEr<^MWeYer(<fC="7r]P[p>RKP:j^MU(0U.bD&KW&O!&4]<tWYI`>1Zt0"[
%Q$HPDBrF40ntO969/:C^0UmQ,93Vi;4:TTD<7rt_<*'ia]m?M$@`uNe"Uf9'gPSXq-o8+n.kd&5M@MB4@_Ns\PZb<<C.["#O7bs4
%7+""RD@TrLkg%!>oL7.F>OsWCbdfBaL2&^r^*m/O2>b*9M_TK0OtV\&1$"6Z^*s#@fnOlOAo+SjK*08*qP%XHilo_GMr]ej6d32V
%eFW*dU=C'd4usJ0(T"c8^*l%\bfcrWj=\\>qUB3OjTqe>c+]_:_t15t]Vm4?mr40[l%n6NMJ9M,U!>;Bm%+pQR4p!%[Lg^Dr2!on
%UQ^/(IULjG?+rG\.5QWmUYqR`>gm']i>UYniS%Ppg3*j%86oFNFY1C(,uc*gqqjk#;UuUU=X-lj<;W:W[IfL+aV=HXB8n2U/GRaI
%ft#f:UgZ+V0QLhDBs<,B&IkLob]"fI2&uB*d>(mhI&Xd-d`)8,%]]O3[=aqJo45_cJ5[VImM=5Y;Cf7l$pB\\h@=J'egnR>[6FNJ
%c&>k.1[mIpXTKP@H)F)7]87oage8KS9/GCFBbp:k'W,pa"W`=Q/[B9B2!?3L_'bpMB.W/s\nU4BLOY:'r4``fn8fUVjF0m,aRiLU
%UR_*7CT>ckh<FZ@=QiN#5?I0Fn[WZ!f-BI.d>`WJ.uOB"4dVQIOk1R-Z]<An``9@mL8F3bG8O*R,+_LB#dtrBjq7hSXC7GVj5b6<
%_aK97@;\=J)QYBj!]4R-[P*r?_4GK^L@nQ$"u\U_r)U4HE><S;Aro$C*OSoHR@bEgRoJNbNr2V,0.t0g3KG*k,PLN[3!3$R+79*R
%hu<(tO6!)7hcYY=gAd_)rEm.&K_BnnBKVsdhk?T.qnKN<40nR942@_uY,P"@T'qUVJ7dSC6@6GRk=^09,:bjeU338W'RD,#["RdY
%:ocJQ^6u?3p&(Nd)-4n)n>6D4]cTpB8(Gs_X(Q)$G-KMq_^_@_!tBZc9MK<LJF[UD%$hsG;OPcnj4H<V1MnNf$T';H;mba#@UpW,
%$ea$c+q*):=NK^;fNGYEBkatc-CZ/7R9HeqT=9EF^(+=UYRY_Uot7R/=1(m53pWo@ZJK9joqD9:A3ZOf%([A>9`I?-X);S&ATjJM
%($1sO'FG:iJf=QaBg58PS[+Z\=HtDj4Trd(qPFtW6=VZ:kkPp>%5DQUK/1Z&XV%WFrLZbZ^!S3Hqk#2`&L.mTHnmjeFP&?l+`(Y!
%5+63W;)Ac[)Z)7)TLsqT1;&_-Ka]VFGTjs4).*<31DQ?]Pi3pq_FXP3).$p#"\ON9&I^>AK>PUto9gHudS[N!RVN;ZJfZbR32*](
%/^_\u0MQ)Hn&$Jo%LAHp_^9J=TYi*g_C(KVS!Xt"qAsgd5<JkaX$!8TX*5'OlHh[FRN,rWct7]HUm%0X@reB/QtCS`*-&MHo+Rr!
%KJGK-,FuWW==5e^d'%Qf&tQ`n/MSjDSfD&2Q,_^'8^7:X+[q;(Q*529(.I?2N(PeuiTqI!795/::<#BXTBV2u%Lj>cXia>D4Zm<t
%]c(Nrm@]*,TbUN`+aMqar4\usIrPoO:@Bgt@URc5Al15)VA7h%XjEGPgq?iWs/oD0>g^E9e!f`mV*iHqT]ZLoB:K_t.u\8*USCIV
%;3fQS6:\#GU/%311$GiQZ=D,;8jJIY@uf+sF)T*<(Vl')6Nc!rAp1"4De#C*(hC[S[@SO'#2(`n`/]C![#V?O>=Ika79H1Q[JY'c
%YJ"gQFkj:QG;h9(/q,8qPpbqC1E@Yr/0o:XYcc8S;>'A-5"O[?>-ZQ@bgRcYaD7;"FR$>f;ChOi%I.Mq<DH?hC!ft"*-J9Pnh=9j
%`nZ.@NiP%>I`pfDje5*j4NA*Z*Ag.h%FII/2bjPq(XI1A3kA7"`i$2M<oZdW&nJFb;6lPo5LI#;6i1I"c@+-god5"Oe+AS`UDt6F
%]*ppEh:?;L#/$O'UEH+VU9ail@ecDC11<pO[A*nNOeGapUp3H#?WtClNPh(m0f/7cV*i,d4*r8PoZ=?$IbIV#YRQ<39kr@oD'pGl
%$Y51InAgqa;nPE)pg:GJ:K'KS[2c=1VN9]CR\SCQXlar/U"(-bk'C*M)VPt/jq_A_[t*mT$auYU3%&/Ff5hj0d;k85F0qI4jW#l8
%BK=\V!of-FSC8ZoDO,>oC]P;nH:6!VP4!an;)rRj3YNR:k8%Jh[qM*DBWMm25_eMV;DeR?kN!Pk\Na/IcGu`%-0F]%M('(H38cZ^
%"#?``N37`CWbtgC40A>?bOqAtC,Gm0[I\H6bAPu#r2f-bWPa,4Oupq3UZZ5/C!ndj_l/6?2j^:QiN/O/*IK[77S_b?6e]?j;6;F2
%ZeS_8Cg6]3ns%WDQ$k5Q+Hq.UK(eqm<d8sC]F]JP3qPrVfDECkkgSb'nFFr.7U=lfY-YS&rF/s[C&#lY]<*m(*9[`@2ENKuIu+U$
%CMDsD?IHT%GJOeN@@"pcoD_b&l>#\i`]9sIYsRJ!V4\%-BpuY4H)F)oS:[VW-I;-YT8HW/g[+0Aa=dM<L.Dm.$`Ebge`NTQ;b'Xm
%qELC:hP2fsUXj>_dqmNdOU+WE+iT^G]Dk1IDPTpjJ(J,\1C'qU'[;>06or`6)fcYP_-AKZ$YR=`1^E-)Af[=-ak/aof4[j*QTCo'
%Ef,K<LPB6Xa(/kfAt+N`^'PYqlmXPU2/!hm-US!**Y!S!g:=^#Zn=&"Wu4gmTKE%Wj.\OWf;bAD^H0js6^-O="59hPN]K#Dj>\)8
%d,[.s$^<Z=+S@)rRN(F>DOa3)10ldtX%L_,_2e?UO5JZK\WhmR4Mtg:DABqV\<M:25[2;khrpS5WG^2$7+:Cp.j'Yt37hOj0V%6`
%nF*$J39=aejeIh]7N(@ik@]7lg4?H^f6B-souaGgBYCupXN`Xs/=(IdW(275reS'uNhO!J,@b9s%`qi#:fh</P`4L4AXWrdqu<L;
%fP-BF3Bgt_iI't2Ogd@',8ifIS9[Z@XT\!`j55#:og3JZbX(.1]VmQU/"Yp%T2'Tp7Ps):NM<sbW##oI5F_nZ;RJANqo>f2E5t2n
%l.rnS:7=2&r<l3d4'hGf-MNbPUsuN5&*FQp(.lU<:<pp4\sVlHQq^f/f]%P:k#@m=j:V^Xm#PA"]mZc!PJRaNr5+jc7Lh8BH)nu!
%MW\7.dAiD-X%AN>@o2VbQa];`7Ot!Kjcs(%IufNLDed+EQQY*9ln[U3]3^=I6]u.'P>5FCl3C.C4JHF69]$9(X7c+SJ,ehW;nd>'
%]7X9'rnWo"R6ZB3Q,[O"gMD#e(V*Urh*2ER\c#P4g3D)iS9hg/f4riW2?/A5NuO)4.fA$Q?OV1mqB2+8)[&Q>S+@Ri)q$pG?s!dY
%KW[\>SR[Bts2VmOne[aBo0)cLd-;V0J`(A^N\B^X^[(GL*0X$LHD:u;i&3(<Y<bk3Qj#nS.u88Kb,M%<Y9^Sh/T"egeTsu%.>>'_
%<31h"Q3Vn_eFC_KUOT.>gSWl2Q8;OK)OJ;5+.;\dg3tQr]\J.[^lq7N0ISkF2Cn@#ar%E2jn8<*kJ.%.jBfXNT9/b*n20khp\CkP
%X8EoC*o]if=i'ZK!9RZ[0;ZgK7jh8r__\cJi3t`Ll.W3Bou[`V\=Nn-6C%aQLP/XUP9Pajr-C-,)YH_3g)3@Hp>ZI9"SVMlE"90k
%_@Y$F]kn#/Ig,ND8pFt_(7[(#+*-MS`@VJMR^]h91P$(FbIJ&mL?H.l_%aqt/N2PGK9):W+BtpK[c/&S]OWT(:%6F$5=)i<NDV@(
%)[hFp2C$]ue0`\:*,8]LCIk\<9T-NKHuPL/ctjPb@q(<L*LjA9%trYig,c0L&o&(p'5C;Q[8#E:*#35NR>*/?3i;(KKmAF]=',PG
%#d"E8FjShdZmN.,[%87@1W'B%)Du9MF$3L2%@8k@8@Wgf91\LR_)9':%U@`kf*'\.f*'^s,>sFee*(bq$*FT;$*GW\f0\-,F3uD\
%RE)+Gg9nHVU#EoMNo4RlM+f):Ji&m)6CLEC9rP1Jg4E.j:n(:N]LCsXZ5/4md8AXAe0`Zle0`\:43:YGRRTeaQVa/JRo#Te7HR(6
%(5Jd7dFohP-F>,,-BIN(PH;`sBk5`U'`CS$9rLdb4b&X&3&HVTg(aKVW(j3R8QS+VAddE\\8)FIj<Ru7L+TMRDVBh>rZ[$F,9Sj4
%4;(O*;GRe%;4eWZiR4dQ170h'H`h-Vp_NX'.c%OGR"Wn@dTS%nOcG+CK[PP%ZS+n.6dt6I9`^9-dY-$^7;7Bo9,aJn82Wml3q#)G
%G3":0IgDYQT=+0V+rUc[$(iTUQRFE&5s<op/ELFp4NEY7f??!$L(D`,>/25e<*LiPOT:jN>6hA]R#qB<!.1FI[I)V$$ps]AM>N!)
%Tbb"R8C0I;1fM=:5r1e_61^%mcf3;.3]'c;,!e"N1RXqL=b[]IVNLCOOE38;1Z@p.c-V1iKM^k@$WD<n.X,/KFQrjsg9:fE&6olR
%lbGB'8/#5A>Ybp6*Pc@!1[$P\Sm!^>mNF8GY%=#u4N9GS^GB,'3q<taK6`(.%gfT80Ur!:$*srE-Q.Et=uMT-;VQ`Tl9R+L4a,[>
%0_TJ$"/.TG[16B(h__#aTf$Q:o-ROs6dt7d9to,1fnA%B1h&8]<J\j-@4"5#7\e(BDnlI+21`.F=HagaJMi!9.G45==,TGpka5'S
%eqD_0fnA&M-<H*me**/nT%AYKK\;REG-i*qj?ZJ2E*\DFGAPm9\NHtI1eippEOkD([`!6FS";aMM.7Y;Tf/UQ%VjJ30SJ/5g64@)
%gU8\P1H/UW&/(E``sHV9$CgS<4W-)/(Gf7=EX8cRX``"ETaP97XU2*9Xli3K(5Jd7d@+Mb$*=N9-]$?NBcH@2>JXQpAp*3nc#!dB
%SnhHV!hrEuOb)i8'a3+kf33,fZ&St="P8ijCWGP.]Oa?Q(:,;lS!N$S_c"#m%*+X%GJ*Go*sf"UY'&Zk_Ailb$*GW]f0\+Vg,fFM
%*g>dU\JBB8J=G>VAeM(?b6UX]Qo1G\8#SQ`C/_VeTf/V<,V@XQF&g9i2baOj6qd]imeE<daEEQ_&X0Bh,+R6%BaSi*S0jaQS=Tsg
%=r`u#a(^EK,b-3O-CgY4=]uf67`T5#BI')pS0jbt#?b4MRRY>3MIIj$-CcCnlhQ[A`M%!f[&3%U6>JpR8\48.<unSZ)hr'^B^Jst
%@$o.qAIpn4NqD7Nd:!RW1/A`$E_`:0"kkR40bS.5BG5(*SR=#Z9r!>!`A/'>'51/QZu*]l[e.#:?,PUK)T$;6jEXO]kotH.VIRf=
%G>5_J7R]C*0!](&C?qQO`Q/U*'5A1qc_"`"%S`^n2T<`KC(k=qC<rM_/IkLMUGdDm&S_to:Csoc_f;J0)qM9Qg[aJ[iEGI1a+Q-0
%oG8+^MN&/h?GF[:m20s/';;iMC3sLC-IaBlSts,njVW"odP/5jMU[8X]04'uqajma=KR5+ABcI&-ENf;is>7de>GH*RQ_/7`8@E/
%LdL=l:I8e_C)s)s$T9.c+n[*t+dQ\!dS.o>.B`^bgotXp?9>;?&*ZI!#KI'%&*H=?2HmD'6>]&+/_$XRT*Vh2[3pdabeecO"Cf:/
%'"'_U(`o0(Ja!783:c&1Rk_9YF#lpYi*%5*l0'LHCP$>RlT#TW`M%!f\0h4eJnou($,X)[>)r7-'>ecp/$t/Sb@M[PLA)E"Snls\
%*XK.[[<5<8c@[=j-IeV0C3/Mtnkq10^eZ,%pag]S$u4ZH9De9_d3UUDb,+Jq!c:*IVIQ;*ZjF+]1,;?D[5^"&$J3.f"/-"'$*GYT
%@iM;,GO%;eW>'#92uq7p8k8<kJ/M:V[$nSJd89=,W(j4mKA%#"6`<_X4itb_k&H#&+L^Bkkb_ajXd!YJ&[m<Fh+5Y236%j0>SC@X
%_)2DB&6olRPEJ(YP-m8+NK2^,840=MW'*^F2KuYn);B9'i\7nRl#K:JVn5e/NMH1dNP+Wce):G]"P6gr9bB2bf*'\=[>AkWOiKLC
%>fc4P3OA)Ap+Ud",Jpm'EDsH5:lm_h[5M,cr!\-6Jb::2CWEk#iiluMH,V!.1?d<S5S5q9?WEb6/OS2SK6_Q:+2P?+>a&)._)9(%
%"QA'HSB9N03OdKIlAjhKd`p+FCbF&Lk#'ci(#9g@&o&(pCSNd4h`aAD6L@@=[UZ8'8&jVh:QC>62:=/[J=_Ud0dDsQET%7_0Ujb#
%$a[s]O"d%WRkT3GjD&[J)BH.Y_JI)*_JI*U3KpM_TkSVm-C8PcCr5NF@^[R66[F[CStupK&qJZ$.35W%Mr=c8g/5e7#iPp="P>bc
%:#=M*fEBh?"Dg-9O&5__UGb,D'5A1q:Cad"Z!d,UJM;YZ%LA9)21[H40KE@`O[q&69r#T`>uj409lN6]\2GARG%KI>&F,>gdkM84
%*U`"H8PWmo"BC$0f!LW3E30AsF@uYN28M.af5i38MaPtWE)!$b"P3e.'81/;*E-8bK868FgX/a5'Xg-[$(tIV1e*7RR.>`YC4^10
%W&?(?L7k!.H@et1=A27N2OJ3PUPE7r(0B\fH-1UT*WX4i+Wp2+0LBPACFuoj-l>9d6L.3h<84i/n,!_UGGJT;bF,KX[MDQXj7deG
%94JqQ6\%m]XTd>k!^hK4J5(PW=$j;S1lW!t'EUXP9n5rg4]atX3&HU)fG+9NJ5(PW8P_P!;g4pVcfCrLrBZ,(i+AbCfWJW1To[s<
%f4a4?W<h+u;1pWm0O"dg.9M<YRkU<cHf!guEG-72ZRK@<0Ujbc*(B![U)&N]dF"CFYR.E<XXAqUN[ZrSOc)Q9Sih=[S*GT2a+Y4+
%hL1DC2@asSe0`\Z&[e$<OcE/79rL4s0LsKCUi+F2gt\#&0!ePWH5u)"q`o*pE305o'U;F49lN6e\7V<D.a6<&>adgcB?KNH%)uOt
%XGCXR#$5taGoJelV64\]e0`\r6#AB:&8Dkn'5GjcA1\9c,GV\ApZrN-'5C<`qpBAnoZK./gQIoG0]k?.[71.WDF;J9qAeb,%J]>%
%"P3e.>&[3VM@a#+>Yc!8?'fodT24,1,Uc$)#2]93fGn`ep-'$k'3a^p2'"26BME/7BK\Qm[5^"&Nn/<L#ba,Lo`W[r[_;06?&Q<A
%3r*dE[,goDL;t8O/JFPS3?Ejui\2:fCr1!/bbce2_JI)*_X)Q3X2UcHFNgU1Fi%t3lq'[GH`$&KX2-pEP%G<\0U\"WOG7Jjh+5Rs
%>^/$L#+`"2]ua-):g5$L.>ERRRo"HpOcR`ZV!FVk$mlMJZ\;u6PPbhA\@P*;SO5.[q/L]6#_=mb[LQtL,Ro;_JbB44>F:^,*V^I-
%/9rnP`B;J2nrgJVUS(#^""@mgP2KL_XuSLP'3l2U:Xg8O\O%>\_G/LAf/Xc)o,Pa=]P$1FoFq=j2X,$o_J)0'-802PBu9++Wn"s%
%Ebc9S*_aR9Jsn8Y*C6THK[dN,Zhmj8$Xq2T9rLdbXb5?gND6?GW'/7N8&K?u=*fUGXsmj%4k$ZQX>01R[`-TYi`]$p6+V.l2Sldb
%>a%6-_)9(%,[L9UQe>9Y[U$cVUX3k/)ig6IR*qF?7n<9@'#19+%CsP:6E%#Ag2tXcTf/V<"B!nTbo0UI4;3IE%_lVICT.+=&A+Lo
%-kQd=K[b\)3_2u=1PF82e<>"<F'X@%kb):P_NNW[@8"e!Bu,%X]8ohQN!5;[4#.2<2M!c;[MEOTljSG'JMr)Qg^2QkcnmdsP8?-.
%2M(QI6/,n8K;K24\<,<%>+F8>q1Q8D$sPZc3(GLQLpUGYU4>a#D*?CGq[<b<$+2/GjMq^*+gS>JD]c<Q.5-0=5Adsc(l-K-aK"X+
%&4f-)6>[1]()0)&W(j3R;:P:R+F>.;cOCJHFS<$mDV@_5L-Nt6#6J`DD&q!#GT$X#!c8#+\J)'`TkSVqVJmFTD$')r#-657#)(RB
%$`tkHL<uC9RT/Xa'<K0HBlq_!?lB)`!c:i?k=;6^LSiJHRK@40XU2*WLt8`FKdRnED;.uM[`<5;c[`<,_i[fYT#mdp[N4Vb2Y2Sf
%\'Yb%l_-4*e.?@.C/<83iY^rW&];%^/fh-`A%Rb#ZLKU\L:.[AMPUn7\q].3i*$Agko(IlCP(jY_DSg4,m,9,DQ)<&Ctn%a[ggZ+
%R8g/\_k;;t#djuHF\nPO+:5F^[3pgbd=H_9R2/kjnN%/DEU*g-&Wh265J]1mZjoc.a<SMX_=T!i+l"g65,5>&)4iHS_\<`mnXNVD
%&q]n<]8`]cT:hXG=p(cFMK:&A-E*LY<80`AnqJhT=u3_TkQ+`->7F8mH.(:t\q6gRJP_h4>6hPbAqj-O:n&0c3>&1.TkSVIVLTP9
%C4b_BqHeN?,EG]5L'+G6lICnB>Uq1mYLV<Rn.6VpkK8FL#d+K:[G[K?AI,FFXsXM,NbLNE-8;fb+A.9h*BK!9_@<^02*BKp#<WQ4
%'5Hj+2MK?dC(k>X%^e[/@.Gt%0S-G<#ZCj7JM;ZE,V:$kk?(VH[S1,NA$&I%R6@W+n%#T8.8*/JYUEIE%)Fg;[16G?":W+(_)9(%
%*/W2)cnmdg;s4V*28SqgiL0fH](4-"#@LciUHR@Ann)u+h[-Pkh9Q@/Xj.!)YAPW4-IC<DD3qo9$+(#G-`UYaf+RYe-;/T>aP:eI
%]JD#q?MPn.H'4ME&Qf]Kl[UkK*^a=0?qhR5g^2Qkcnmds;^;d&2M(R42/Fo+Ok*dI>^>M#QK_p[CsTs_d_2(ZE$DgCL22[$+h/l/
%-FfWlO]i`n7Ybc:L*=&R\=TL'Fl"qq_mG^/LVmE:l+D[\3b4;U=Wa+^k(U%-YaM_@<omt6BGqn\ag[_CRBUt2Ae(0Nj#db)[N'R6
%(NURsa0usMWZ=B\ILobF#1qp?9lNgG9lN6c,.0BeN=OQ^]`>l+_=^2J+1B3Ab>ia;$7!K'FMq\[[Tm6#db!2`>`_<1iNs@qHPHEF
%3))@q6+,E'4<^oh&e6_Y1"Dj,[O9lq*3KdSFtC[uINZ(-H)<\Oe\rn&D*i(ke>=o:6>]&+15=#881b<GUVeqm^^s`a>Yd+iOb$E4
%Y(EphN*>k`B=]j5OYPJ-=0;uTmE*PsD,4G,TQ$DtRo!;o[4)T?:n(:.JuEN(()'$GmP2PfFPJZHbEZ]*8B8/4:L2'jn'E;d-FD>k
%CC5\;ZmN/OU`isPQ8Ec(dpt@G[)52KQ:;M-Z/h1[_F(pmlIaLT?5B4mTsd.";h,:M2PE%&pA@M5im9MCC==aiK\D+5P=08Cg[Z%B
%mMT7rZcarZa[9$%_c*K%7@+Y>G\aIhS`")B'_"YlXbYUEn49KPW'*_![``Loc(I/1C)><<>\;)@7kQpci>3Q,C.bj&2-_TdK\D+5
%3iGbmO+c5?g4\2O-Wu?pe**`)iK&ZGK\DWsODr4)'uY&s9=g-;e$3.V7bYoc;\@a$;kOt5:dA]rMq5=&6'-cNK[th-o-7+j6dt74
%9u2mDeqDTfNM\G@.l#b^*J$C!-=bhqnrf>gg%&<u.#c0>=ET424h.qg6W#[neqDTf6u0iO/8;50KY^AsX`b/kQMu8`/(N@4>XXrl
%16,*SVXbcOcmI,j!,Zc"-I=*dT&cankgbDaiJlWse:Y>Cf5fu@:a-6J(D1fu[J*4R9ouIXg#S>kOA1g"6-(rHcV_`;(lkg?)*m3g
%f?,PC8/OAI9":`CTa7bj6>Q/W,IAf)-EG5c8_2nJ1bra.;]gQKJMpY"k"VuoLSdolgEk00Jo$&*a[((u(/4]R$mlD6^gQ`b,7Gn-
%StrL+ZlGnM$d3OdT/AQD-D^=PFTe%#CX4m)!=o=e"POceD%^LqBG5(.G2iFUeDeh310Tm*25)n$ocun64O5pqMM/6gqWZqc+:-6_
%:fZJsZW%rf,oGStiNreadj50NdtH2G<R6du/IkK"UGYKV&6]`N'3`_E81b<GUS0Od+@Bg:BME/'3OH3qKr$0)A(nBHAp!"0gh%7P
%$"Xm//gXm`2a"I+(^dq_ZjF*X#&R-7Gm)h(g65L@?(k56bMZ&tW_Jg7A[qFX<tND[T"I8C6G83qq$=(0^mZ8=#cn?6-OA;?0J14V
%@56At%XkMGaTq5?91HdcQ=igT>FJ8+PM6fK6?'%1fAse=E(t:7;=h2*33J3<PeJ<Xi[/!:MjBLh8mUDLDN.NV$FgDC$*,qfRN2).
%WsPgS)-Uo=_Nrd_0[H"gNLhg59=aU"7q+>WedohQE6f+2ClC;#cmI,j!c@Mj,L@daSuD25jdn%_&T,10!.K6KAS*gdh?O*t!c&7L
%->,LDCBEfnL<)'tA+C0ogTtEA%-K6%75!WE(WOM29D%>@>@Rr@[Et@;ZR3%+[%='V`"F\Hj_:YGBBjA(e!7(_L?f`BB#\MfOXL,O
%[,FQKXUEkDJPDe3TM;(BJ!.3!1hhU9B1Vd/[EdA\BHL6XR^E:*LS"<d.(ts08*u`NLR[SFEk,BH=WWpMp+d=OGoiBq\<&.33"$r;
%-]<ZL!![6e6eC/2Y'70WY7t.\g$Z:Big=iY\kt\*_$ANeq8u<s^)<GBlN_kjk]?kpgqbF;j)@AS*(:^,Q:F/Ce!+aV9\<cHQTcM.
%p[(`!7g=Hk+SkTe5KM1;MgtcmTKJ$S9CFO6SKN7WCHV6cCr0^B\`1&h!:/VDO7<1m-d49]U(9-q[`6NapmL::^]3u<)0Upc(NmqC
%E$llSrI(TLgt[;[X(-m1H1^^nZr+`8ra1m"L%V;QX!);$Yu0pq"nbX<mf6S[SubBf3%XRNe8U`\+("?JDH)32YLdhgs'4+>OC?,s
%FB[5DDC9,@E=A6CXd8uo/S7>WV"0d(WjPGLW/%oK-/&N'`NSg(cHg)6^0\BPDkHsh\(^.u4eTRjpTo/Fnn[&@1VRN5a]Jf+$M/tR
%BkMpdHWH\<lP1P3l#6u3H5(I-9:fh$/"M*6-A[@u`3?+O#d#u,QU+&ua=-@"L#U]%_6.F(?=-e4dorD%13@hdlCC.#.'3BD%h"bK
%2M<(7/9fj>`mkL5hes7W[C2.],gN(`2#<C3h\\<!TNQ'V@L_Gmg#"S.hfF>/m96p13%th8#$;]a#(GqXP5h[c3YttJ*p/t!jOPOB
%,,h)?BL,:]FXDoKdA$',(1BF?KVk7'q*ts?AqV3@R1>##F5#i.?Ek<:FnT$>=N5*<fDj7BW"9R\NuHhT3S6aSm;1tt0X].n40F0q
%?NK8'!fc`!\M:QDTnPm-k#/ar6Zo^N";R0?GH&IVL73fu,o^*'<qB`P4%q+_C9=:62.E`dp1802?`QZeCl,+iVI-=p%_$Vfd7Kd5
%fZb/BSOW%oDg-e6ofk`\\V4>/EY3`1C:d@74$i9KmC0lr0K1q-dg[7$f_'96X)m"a>Ep28^<t)k\ari5pWekp0C,jPD0.k$\']'d
%kOiji^DXD!mHR]\-LHsZU=Wal%hN0(:<TiMRm+ncq'XZkX[%.dd=QFt%k!"k>4LVL`iNm3De.0"jdmfNFCVST]M)G1($CSCIp7C#
%0>Dq"E.DNrk+EHrK@XBqmPt!>PM<6>48rs%<pfhO)b;`2CfLW2^Y?ttTU.]**P+q1e&eGF1[taeG/"C<(U3t_T$88[+DBS1-YGWq
%mrk-B-oZVgP2"m&4hlI&p!89G6)0h`[a_NEDD]h;2Z*%VQ(@P_*kgF02,=,(@F4Alg.>MY)h3>K[+`bimO.IRr11p'[f>S#K9&_e
%Tk3L-?5R-GVQ=<I0_=?2LAht2`[cSD!Me&`S]-!],I(:O#It=drICsnQ.<'^W]@j:56@K(B'5/dOi#De_JZ>WX$s_k%[mjNJ[`NN
%Z"Hfq$>Roc%Xc"B./Pk9UpeK$GQs4M"6i*e\!Y:,IXd<7<NKAf)/ZoK*Kb'6`a1([8F2hKO(0HE(]5#t#)k&[GLUIf@7[bHEr.,k
%s&[Q^U>c*+<g7CM-B)fK6MpqIE=Vn]pWImZMj>>+.t<,'!$HesqXsEPTq;7\)%HF3e?!2K\shI\m-1plIDSDIp7N:W&=dp%rUkNJ
%H6]CA=05+F)f=A7$75!/X.WAX?DU-ef*<2g0lo%6h#KGal,@oY`O:;+RnR@,VT9CZOQTgkcOVfon&r<b9$'q"8rR33Ng#UenC0/2
%4:9eChl2Xjm-V;VhYl;[\sZ\P[s`3P!k0lX:$bbhC@Y#/^6rE_Hp]lj124$F/?tOS2i2Rl^=?cmYki"m1`suRTNI]h4i=N`020Tg
%52D=$"i/N##?Z>RLOe6_mE989'I\sj_;WXT_JGQViij%A=8Z5r1L!7qb*3X@%QKVY1er8\B8p.'@W,^tAh/?B1!%6t(6K6]6-X4i
%CAE`:9=?`jk2:87H^HI_h-ZAT=h0,uZrYds7C.#EWQLNuj;]Ei0R8?IY,N3nL%RoMK?*SL)/0SoH.02Nf4K;HB[2R5LH0Xt*gX-Y
%"[\QZJPHj>*a5Mbg1`sd(jFat'A)DbV:sms?=(.nk?"O3#UD^[!)kAXe"=0[$hU@J&:)1^lN8uqN(iqcE-SMopT>sHEH]nCDU*IR
%S$,U!A2_!b\H-k'6+_GL:TpkDlN[B'BYq9f9UW5,<it22Gm[@$Vq'(Xhn0QFZMi0HEikVAb,DfPZ]lDOkk5K=Lp*QUZc:/0WUs#t
%-?H5NDmZO;j8&kD,/$"_@(*^][/Q7?+pMYCWmH:(:k-IIq<K=\bS4n911P"+2X&g[>hY/Ts13d0G.Ca+s1AQ><2O]LIB>%fV@K[m
%@g-C&Q-`qs^T#&00]R9Y1s`?Xo0FB5$eOAnAo#F^D8QKYAlJJq)Aq)e"c;\I438&VRsZ@*@:"J3<0_d6BQ-mGEHuh.VK/`b]I=BV
%(0-abDp$[(3L/E&0<S5LrDrg,%SXqD(ed^^)S%qh^30JFbiu*=n>q;rYPcs_];Hqn\W`=mA59UEco=(eGOh$Q%Hs]F2-X^QqR+\*
%q:aZRGYD:nHE.M9AlcKqZCFrmj1DJCg\H/7m\;)gqHUNe`5V<W15$NRlD`Z;>)cs9ISA[-S:cdf$Qmmgi&YaaY+UCtkrQ1)iQ&b)
%HEoP`YlC>-5.bE&/B'd*>-2,s(ZRlgT(ce:OtiIJ;[/m\I@FbH`fV4G_M!,]X_:E!Z`D:n3?-66Fbh8`['/eERA83D7bN>4mEeo*
%2k"L@JU53H];LT,e.l(I[PaouRI.([04-)0.T<j]O/6W2b@Fqo?B=g_Y/tkIHD>kQ<k4OMLHD!9h<cf14<[bL4<(_t])pM9XWS,=
%#0;J`Z>-"3Z`bWc\gh(c]N.NqE],rp60ju@W,*rSFO6tsC"C?V3&Ij&PCF^:Ar?&cK4:T,NPpI9hhC:;g^kDP:[I'GeUN2)6-qY#
%ig^WJ,-/>]2=7dK$7`MF^Kq66p:YiF6"oo@*ZAr(/bPCa9Bc7&>F.+nN*MeI9V]%9[K[qQ*Vk0gY@(@9D:X;*O7hN[j2N2RX4Aq>
%m1+Y[\)-B6`SLB%%\:8]h3[!cl=kOmYK,,];PDMu"WE8pd("j7A>@gTp:.3_oL7ds\$',79n88aV>-;"2JC:4G;%sS*j=X*2ldNd
%$:e=4].P`<?Rdg)j0&>ss5)p/O5E14^[?SRIUV'e?eO4Jm9EquS_%en.,A'5]"_8<oBeX!mIP17HYqg1cI5kgZaIJ"pKqdE\n.eH
%D8(&Z1>BN[)"$=T`Ud[$cGo^ir54N7bK]`Mqk^h1eSM>Uh.fBh??A*OT>0(6G\dUT>Lb)sbJel.rcqjVH^0XgTi3Mu?#r3sFGbQs
%h6]DK//PH-HYnjtcGcQVic_e1[-tZbr3LSH4]G?B1L?R]/FAJXSN6/qI/[#'hTESP?>DUZg=M>)Q_gl)C[M&MUZ1k#DJ<g_EX(&b
%I[.X>m!"A#?f*r7[>imq[Bn,9cIR^@M.J[;rEcbQp3pg?IWkb).L6sKhYMEpXT;5lIM?uV]=0\"gct6AN`L&L<?j^&PqH%rrOMR!
%]NsZ<QF8F4PP)tM]@OYcS$/0n5MFc$s0f9LF<<\ppYtncHF`BLi`#Ntp=\;VWgXg+^=0+=q7]o.p7eiq]DLso9'alkDIN"th@Cmi
%_8c>0$O`sHlgMQ*'^FfW=-&rc>$lET^-&AUc>*7#.^[@1m*Xo5Mi0,&?aS\kkFDF#oA25PCXoOe+$,h'HEso`*,O2rK.BC.a1])(
%>J#r7^Y`Ak3(D=1G<_#?:S"W-[muM:<BdUSVmjF`EhCqO!_H2,_qWfqT>c0IVN.a(\p=*:XFpZOY-M]EYI@jR=8g269",jiC1/t$
%?[S'6a=L/IEVd_Y/Ur'<[.H>*HMi6hV96Q\]_u-$ApuR\6%V<<O.JPk?8d_fcC]an]moTt^%1@PDmD=^(.3BERlm\TEc&OHS+&:L
%!aBtkLq*RkVX[l[`=pA]@aKR9Mbi?YEoFP'kG.%ilH::(^461.VDs#$k4/'&aj\,s7Cc>V\5RiV3&W?&JV*Ldj)+RinnJ!=pLi<L
%91jFbde`>d.F#!V>L0'>qq*<g*Gnk'9;,Vj_5!p;fAEW8_NLU]m1]3Wh5:/07;8OI\p/"o]mB]Pp6*V"/HJ$0E;@mn_u&$.bq/*n
%ejlf>SVop&2=$<pFI,V=)V[)Tn29uRa/H"iSr2":`qj]<O2CFF::Hjb4h[7mIFS-9>.63Q(btDJ^09`3<VOiJ8k\oI&%4+/iMZ'A
%j71#rctY-O_82?.\0["W0g#)P$7@KoPe"gbhb,q>?fm9YIl`%7!if>XUE<Pj$iAg>?^8(F?FU2dH!2Y6<N\MX,TY5B4.A+tjF'q9
%kj1J.[/'Xpp62(;5W-oK@)'3mGrL8bhE493Z&H#spPo1Gp?!mCdrK*!q8]Jt4^,=%p[D^A(DNLDC:br@FKU!T0H]*,I@efn*j"20
%Jh_]K!/9diUF.]Y]ngDdrrSR"_:uSK%sL&^Q)hdLpD:g!lBA'-.cB[mF&=oGeMuH2GJ*7.[bWkaTUNo^N9r8Q8"/2UNRqe,Slkji
%*T-OubEkH]75`/;;Y(VshtqeN&$YWHrPE!Fq(SB.NW0ukn@n90?9HFJ?@G#:6T$;\O#!5A*'<og\+Y7jZcj-Sn6YXdE;s-S8iSAe
%:*/3%OG!T6f)ljnr3YX(,Qa@l1,JNt5(<jel:ti9q7->*)#<;W%.OjP*^+oq/GZ_n[(K8nW`J"VOLSM^jgb*Vjn"bcj)+c\^6R3<
%5HLp`a0.DhDUr,2H0h`\aZt"(B@Ve2`k0]"kMZ0:6[&=nD8Ef-lcus7i6Je`[^3BNJPT'-db,9Y3*gmNQC#%O`G&,ARd<NoX%^E<
%2\@4BjHoF=EO9Am_7*5$kA^r8R'ruO.Qh#d3IIZJBV'TdDI]!QLsVM2;i5R#S!`Ma;NRm_/'O<a&NB`(r5H7kK$?<;D3BlDC7q5O
%C(+"?BZ=X-K8q['?'^dU,Ko<4&iP&4Xn()"BisFnQD*lEFaP\GH'WDJA]E:M7b5o;ho&2JOt;TnH(:`Yl+s:Lp9/XPo^i8ce'f3"
%,NMp(\0OJJ.a*r%P-3kI=]AZ!:=9EH-JP4i#797ph4bf>T45B2Xi[c?U^\"K%GAP@HSJf_]_"g68Bjt[4]/T/&JT6G8O>:HhB0\f
%SfnKl`,'hL6YXc1[;6`,ZH_&p^6NV`C5r':)1X0Ha`Qq!7!N9TA4C"COBIX6GS%cK'%N)4P2rGj=-qaB7U.H#P3XLtaNM*_Vh<>m
%&f6VVd=bBj8]\9ZE=K4=LVdU5p>qM'Js]S/]ZZoJSH!;W';8L+(Cnd:?\6/jZIq$`'TV(aXHtg^]7apBmd?SF>PO@PBe8(!G9</H
%3l_aier>;dO1*qoGTP+H.sFlP7S6VC>t1[^Tg7YL5q+ZF.mHWXhO"NUR[9N'53RY14qCq:3U<=28d4POc3q0TaHH0d/g$`)\+.=S
%[TAd@m,H3$5O<JLRjUM\Y^Z5QE7ERSg4$E<\s.VI.rBNTS'd\bn3O?B;`3oj55nF3hqC2SRSB`'?"J6_b>d!:ZF$Jc&8/]Sp9<J&
%H#Zr6d<bS9:]Ub!r9J7Zjnh!86\fN*HhVQY]cXUJST%A@_GpL\+"o5:f.S_Y?WTd`,?e8YBo_fYC[eWSp838F>!;Wh.eWLr/Z"D1
%jr^5!?S)^m.R>rVeP[Ti8=Wk>IjjZMMLW?)frG$#<nG[#m[f'rqiCh_SpkmR_b(#8\!![aTn[nnqjJ4Q!ZdT8=:5Z00K'n5/Y9..
%Gc#5#@m0c#$JbXZXc#[k[oTP*T<*bFQ"<s-WH&<nT._LkA]1rt59)eP>l_99\'`@&Vdr#Vd8WbnXZ>f4<T9U/K7i>E>^.O;KC%;7
%ePtumGe!u'<?@F>T02e(4!1"L=LE(:L:Lg/l7MbTXTr3ZehEenD+>=jIoAIVqe-42]2UU/<4:=RPfm4"&j->,h]C[e*&bO$d^QCj
%DjRouh='K3n&gVXi:6B/e^(BshKuO'k$S:iq0;Qn1^%nbhCZBcIIs[AHr,Z+,Vn8eB/l76dfX+Kj_6MR8bX,NbYOSX2d7)*DQQ'J
%\oVm)ak,-,FCY=3k2iX6T_KV!-%gCNXYScl0?klROr(C>^f[XBeI7sH?6d?P-$Bl*'Fq'idT)&0eEc`LDW]h=HM5Ya&_1jeCokDL
%p]i?)05b>/h_,u:<;qQbH."H,hVRg65KHTEZIC`6'YH6t!\s)q7Ct'sg3Wo5$e9XrToA%*p.:I=DQLUdT2-?T9O@U+rN(A8BArWf
%rt0!JWu7`e)\t9nq+?Ur]qu:HVq"D!ZXImliiL2J0M[t33K1)!&b>d\Cm^r9YBXde7lLq<<(h0IT;+Z<*ZW\\91Aj%I.['kf8';n
%C01R9jmJt"n`J]MKk)Y+bu=/,>Ke0i<]8N8s*5L.=i]N_;LL(&-@uN+1k.?^`RPLb)\Ga3#HJZW\*qDdG1aBsifapKh`p'Zo:)4N
%qbM38bGZYhmEPU4oa09!f\V)L:n4AZYXJ=aTZ!DU5MV7+pHP\DB?sB"2qC0WdR>V_<_Ii/'^a7,Ma(PI.%\W!;tG:%eQ@FbI&@C$
%ph@DY2#$a?NZi</fs`]\/A=5qog_opo<,NG$o?eI452,PrG1ri\;1@KmH)?gDLl^?5&ZbuC(GWtW6guYIeOK%ebd6uYJ,He38WE*
%n`[+I2uiEr7Vg!/((LgU^TLSO\S':TmiQ#rUpM1#5<W-Q\_2<8C<MsQV3CS1e_XKSVa%>WVpB9ur-26POr)bXh1C"-4O:@sn!:jJ
%k[r>nNplmJ.4mEi#<hP.l/&S2PS$^%f]^p;S$ad,%#!d6PBa[Is)DP^l*5]s_L/Y-+KOP:BfmB(94h>-<).r8BDJo41qZWY93ZtW
%/0#IS[TRZi]8!loUUm_=s/%,)/IaUdZ6XWQSs2HeL;?f9<B*+tpsC`;\(b-;-a25CCSeYWGU>W@Cq\\OpFK>a75Wm]O/qBg`SL+D
%_5@1fm.BuM\(eB"1,7XMQ<l].o:CF\F[?6lm)V;FgIngNnkS/FG^fOjmAr2:>G*6A+!sE*FV%2-$Q:F?T-$;-F8#fkr:0LFlDJ5p
%/QZe1O71mb.\5A/G6AUDqQg(ecV@W3/c/\^e(Hq@I(0=0XM&pjI4cK]hn,-cR:j-O\U1#I/!Q#V"j,/q?\V+no@p+D_H5))2g3S0
%==PpFo@V9cg?W#[[Z:fVGBiQ/h`%`hbY;S\(7Z1g>Y@4^W@o@6C)a8'No*"3gj&b(M;(Ff[CU?r5T.E#jo*J_:&ErmDkB8i@c,e3
%2:VX]V(C`CaD*>O?c2GF]9+.b@\\MGisR]*!l<['%4d61?;ec]F)S`E4ns9K.D5T".]HUD]R4!6<j'*sb`2q8D$`IWs7/9<@g0u6
%mh\)DAE1?6"i$+)2uYA"GqWpOdtcJchVS"Xj&2ROs$PL:H\;Sl!&k&4?>lrp.DC3*GZF!Ik*r-2dPa0k.]jEqs+l!or=Vd,a/e2k
%WUP".ghlWAY$\fq#=Z%Q#Jcn6LBt!Wilg.Bd*U<!Orc9#%mH:;N6V`OI/UEolesUOFm`K3a>76-=l3XM5''Za=q?r@W!0,@m!O`"
%^GbNRCuL(q=>)8n?5:,20<];\M?g>F8p?a_i6;)VI)F\9A1*!be;iH9dC\I/@)4k7]iBU_T5QhuaZgVI%Hb72K1=uVODEV9+)JD>
%$hi$2g[1j2kuYe;f#o_A^&1HF!fZ'&O2J"Yg=nG+S/i+kKAD#S_1hR*6K;PT@<uX1h2moM+"mu)*<<A#rj1BG_#?*IrmB#XS\$sj
%>nEIJDCT^?YOiPt@,m9s:ZPQSe=jk$X($PXic.S8T8M`"l/@8+!SWZa(KMFn27[A1*dHdjiBEiXnMX*Wg/daf/?LT*Of\0O,qV9F
%2_/O;V3a8M\u2CG^A2dg?doEQVp.$*TJXV0kF5P&\::@iW/]ub+7\hojr7IJHg@s*XM<FQ-ldBeRf*m.D\[K"Wbn-D2Qrd12,X5L
%lE3'N/(e3UN/"L;=-^JRKDRc/1gI5h>2DG[4C>WBhsnDS?ap"&]74X'4h?uKZXZR"kp4S]It6siVYgF?8kTW/5$DrX3BMePI/`U?
%W8kLnj%3F+l(>*T+%l:=c!]#gDSf9W(?DHk]?G<'j8tk6[qhI_rct_Fgo\6R'ONCCQ#Js1=7&*bCAsLJR'o*NG&KfL^VK6e!IF.i
%+QYN2E*Ke%."09m2\/\lc7E>-1cW86G)Y8'4-+`C777T`/`l$#fAB?8V=3<c/!Mk@hOFP0(8rUsAnj6>&[+06f=:_eF2`p2in;$-
%D:*X^Gu?]&j]Ae=<51#W6]\Sr3c!Uo*T<%,UY`_i*n2c<&o><jhnS(<f__#9"a?m#5sGKKoQL0D)smkPr[>L.nb#C,Gl6riUsmhN
%i4BHIp/r&jjNFQ*45IZLq`0,k_<U@^o?p4nlUkmOIW1h5d1^Q5KO>Iq)\-8ahH7=-Tu,o^SPS\DQgN8^_Y`=Q^K9egZ5CM(r/)k>
%"^,9CCs263mg%Xjgq*:Ypd_<&YgH^&ea>?$ejL[10^l5JhXW=X&$)aBkHVE8Ck"M#h2Y3u1<U8grM("N<IVbiao?omP9#KfMJ3<f
%SE'(a=%gMM6#LVT!B&s;9!M>K]Rh$opqc+SqW!i;D<WM?*5M!@HX'.45nl)/Ktd@mP<UIhT?VOjXa$Fhc7m0+m?#d?qq`(u)ggJ]
%diT)QdgKr%oB-"lHeZ_N2fHOAk#Gm=Q2H6epe)?ip@QDC(WFi6_''6!VpBQNSi"2T^l4&r&FRRZ'Nu9E!1^6WDN!)8kKcC:H3Sou
%o#IVD;f#>hh^inHWZI)-#F/:+Z>Z(&GM*V1Y2:3O(LPrY1X\+YbY9G@rAZ=K)5;4scWTQ_4O/nK<kA%i]O!^9I!m7L9`kj^+nBQ_
%BN77Ql/nJm$84V,E"`gKQ\,+hjmF5Jh#6EeZ"GZ'=>-3r^K^$#-8+M,]?rF"B++RMFad3!O*g).VU9Aa9sIW1r+N:.bK,/&C\?`T
%bgpt>"`#dhGHVVpA/<p<5W=-l]"`<qo_^1F2o,jdrLJ?+`M;0M?$38jB=iQ&>`in1n',KRo$niVYkLpiOaEV'OahL3f"\>/$ccJs
%$*6fNYRk/InI(=C:eFoh9!OZhlPo.shekLJh.'L`HN)G_]>.9\@l5_FT];[H"0q\>B[1:jgSK6YHd0LZ.=^ZTpJ-M\eT5`Co'qpS
%I;<D8oqGd_ms+$a>L;$c(uN*M[]6f#hoBa.k[F9WdC?M\QW$)_[IoWtP2Y[:=:Di*h*H,J?"X&me&4O+l]P>6B;]:q%!t/.e1((r
%2*^el^H!3R[oVh;R#OQc2bmoG@$c"XD`fG6:0ogCNUfN=E>90,J(N3WHi:[PK*sB<!-JtY`qe4J#Ki/G.mI^sWn2tE71G'5\4Da=
%k?J"(>CKMAG#8^OFj_?TjSh28*4MqLYL!k`,O^25*pdLuD>HDRUV+uW(>=$mdn\!9[Gil":H/&0/oQFu)hlkN!BQWl*2WdCQB!Vk
%RrWs.aE9+e>Su(]CBkmHWHR^uMkHYWqgY;1qXkhOjobEb,e5<>3PUP,'?Abhka?hdD-Ibas0gI%R=]oH]"'0[A$/\T"\Lab1K:(2
%Gj9acY.i)UjCgOY'upL-JYZPKJH_<k>ZIA9i9+jhqX,^PI,d/T+LUJkPBOE_JIUJ<(M-]\;OFIEX:I;CKiU.XOp4q@\Sh?YO%7M,
%)5km7JWe3YC@d0NOJl)M+P?.8ds'@#DiGf>-Qc@K_"?s`%QOLJ)G-qd>+:qaYbB]gg]EK?Q0VX^92:.Xo\.0mQ\oLkV?KI1*rs%j
%2dp)f:56.'@;mWT^9#m9Bb2=RP3uI6f@@R`npbO'6!<1:-eCdM`#UL@QV5\A!/A6-Xih.HQsAFbX^_q;UWfE32o5*9@r6tIG4YM_
%fCaMN([]esJ-WlTb_1*:YT,Ep79hR&9L=ABBG]^c$`AtDVJ`d/8>Zie.C;oh2,=+qT)UT[ocB6:^!*@L-RH.O;i4Is%ADD"7_kf+
%8Si^=dcjfFj@.(/moH*.X(TsuO8.'d!9e`BaYKo8FPf('#'\E"6#c?>&g*=5U/KE0GjqCDV/noSN?(1o)!u+lL(\flN"$05mT&N.
%#NH/J#11.2%LS&'ap8iJqWd`JLRgijKNEd'9RSVK=OEWq6]&^JdQZa)<\%4+[ii_P1WQ@&qVp6#bH;cp4gSEdQEHc'Yp-pr*+*fk
%:@!A:VPE:/KB5(8A>+b/"1kSp`,YXDK^7f!Uo@uVA_/QhNk2.@[>fLq&7nC28JnOtgotUFnhXng_U96,.J28M(S($=rZuCG<h5h/
%;"!=;.Mt2?n'l2*Er&[XoW[gW+8gt^bW$[CBB2$!m[a@S?V<.qc?t`.X39$M#l:2=XP`F]@<J\mT0R;%HoFeCqqLm.1i2=]?Ete/
%'Dh2W[\;',Xt@d8QJlk0RlL!ZS#7=s;BIMrH"h-a_hcoVa^^ObiQ5/g<B]cLX+0i[pW6A3qFlP<;nm^:7se^k%qIr_)1YA/F_qRK
%'9q_P>5B]X9]*bbpb)JVYdX6FPjDT#9&KTp>?!_mA;XVrgM4*'?lo.uNO@BhN+c\TXoAQL;!Fr7p"^e>!A>!tf%)D>mo4_gYD0He
%TW#R_:U^5aR-chZ`aVa+h0KfGnj-!e6d@`&&Si`'15qOnWA@1:/"GF#q"#VTDFSkaDGQ[F^WPHaps=Ogq)GPTY`X6W4D?T@We2U2
%gG@Ilr0Di_*qD?"AR5,(O_9DYg?N]CO5U7m_WBRmbK(*E]CHjn(U);rjkYIV#I"!05W/.<$"2PmntopO\J<_JX>[BrSPlGWjb4ql
%SF'I)`XE>K%UKV,MOa&nH.t&-QcnsTEkU8Z^].jQ-Z?M\Kc-FDce7+!>Fo]2>W.3MfJ^+cYXL%@$m1o^n$pS8B4O-NYg#u[cU4C,
%cA&2&(6sXI5b45,!b;\9)J;%4PI$p&fB$U8Jo.c7;FE$7S"r*:aI?:hD/]K#_#G->\9VZo=#QI.^pG?nRgcDSNHDmfF)bmr=BrQE
%es!WO-R_fDKkK@eF,mJTNS'l#-Y-<=\\h\/6jLCJ]@rEL[c'sHbS,`r@Gk#>F%iAJa9($+fY]Udch4fE;D$&r'"OKec2nVE>jsdt
%?oAgHbI#JmP3aU\'us(Ig8:;45T[-h2fB%:Z-Aq;:cO#BGd:"58r)fr4\JA!K@:djl5KGk$gho,0&$D88d#El:suiS$A+Et`ahpp
%Oera$*!gGNqm+\)@1M7F.b/Y4%ZU`e!guCV#=0'N?q:@!\E>8,3KPQQm:YX*dr[?QTj&M_G-MQP+Zp^Uc?'KA4f"h2R#iRHl@beg
%=>hb&<]$PO+B&@JjjLKFlr3'.4k!%Mg6*fL;<UPY4\MV2![0mi]He*/Jq.j".@/*:JF]@!Xr.^33uN=HA;1,-\ursO!CHkDgWT](
%j=kZ6>L9Km;I[/Op3P(=-F=c-28),X)[<Jn8%Spu"t>_@OdB0]>Fp/-,[l%:(j:M/o0IRVdh8Z;/d9jGUAAhJ87[=4j,u^\0Z0'J
%Am0B-H36PJ71J<)">q,08:HGTnKN-A#=1NbC7BoTl6>AfP>]V!;WCL`:p"M8l(72/;$@SNDicJ&\+Cg;iOrK8&!RDl+'1)Qe+"^d
%59=/ii9PBZ!uWhZI)(Nt9*fo-^5V!jj%IMMPG'M&:e4\`?+nJk_&OaR&s!IIEt!^A:a:W>D[R%.28sj\'rJVT'S"8*&`>5(&o(H=
%[=mT4l:D+6JMiJPVGa\>)9ap.Qii3GI%O#OE#/"<3DNJO?JaY^Bi>)/V3p^,:c4KE82We-MlEQT$h$*A4mn`b9Rp!p!Z:u<#a6f9
%:8!N/3BU%D_8J.YM,IHC(R6>?&1&tl&K"^Q$7lCH)?ZuI!kKt">W]M?&[j&B8L\D<e<hg-l^(#Xbj4G4N!_oVIaT)nKZ<HjKT5L`
%"MXkh/l<j<bYGuO4Ee3la5_B&r]gVCMUXUrSd.<SeD!6H<'MC!W<K4+30EG+PV)Z.NBe$)#RNkk,s*fbQ!T7E+u%QO!FSW$dm4T=
%T_C\t"cu%2JsAUX;4>+Jp'amE<.KFX,0F;=%tF[(LbUO43d>;KLn#M/WIt+'"Khik)?<CD^q5//7Y#VH:=/Wd/b.O[_+=/k-"*"(
%#oXLj8LDft\B2X/O:YAC%GQjl"OL)Y",Ib;7G'@GP[bY0/8W%[lN^O=J@tO$$(Q!44\cgqRPh1(/='b7"oNL+LSad(Ws+kfTY75N
%'(K^ZaCmmdbYsD%A\_hb@fr*L\SM7cDTDDWcEMl.$'5PDO_s"h9'Y3!"@E4D%.XBSMu&aW3_7]B9^!EUmG`Fap+)(a9:/=J9`r?s
%iGb$7eT+bQak8]"#HJT2.a1rb*/K$q@LfuP;L<r'bXn79953C_jf'M%S5I)7]F!;:&%++=3f]_?A%$V1?rA/(Qo@9f#9qqg@>FJ^
%&9g"fO"'S.]eQ,",;bE0oSD_kM`iP#isYkBP@"oM<VO#?O)r_$if?5[p&I@sD#>H,ni?[l(hGUFX`u`1/_bQo&Kj/K'JM[PgStKS
%)MXp.GhQsVofHkYJG#e=/pN^ljeudC;XD5G="Z49[UW3WEIPrNZdeR-<,Gd:T]6[$cA+6//9il%,&hiL(@S4U+c?NP,="5Zd,8:u
%o,u0"];?9*(FDGN-4'd@_Qj80%%-4NkQi;maUntlNhJQhL:r26#_^8U*+bgP!jB,#WA)R9dP0X2a>7WSd-*Kua:09cL=Oo($Le]u
%OCP+\KU\HbEk-O>fZ5%/5%('BOLLT@/pC`GNmD&PSE"Z-RlrrrY7^?Q=e*pCGW[#YjFo?>V?L+qkpA.n.9=Wg*ogs@_aq7AX,#B:
%[!#'T1LdcZ!eUrJB!q"-2Hha%O_#?C:^c3KdggJul^DN_$X=ZEHY-HI5rH%r"(O7,F9N*HdVS>!pEibGE"VCC0odLiA1ja?cX'#a
%nJR9mO3_:3s,Y:_lXY9?*Y/rrAJ57O!uW5Z3IqAM-3`,sJ5`.5#<48$Rti0YER6%+Si24?>XU:mce28:VmpQ+KkB"S'!)Lg^4j,E
%`@eN7!A-SgZ#&3CYgTSb-qW_'2D/f63[4t>Y4bbi,t[?9Z`2TiCl6Ja;n1#602Xls>d7hA$lWT.%!>;.I2bT(1Y(moo%<*igW4+4
%MM0I^D4K.EiSCSg,<_]mAMQUN?;_c'OoDL(]\X_U!LQ'Z%%rnC^(b+l*`W\H+Wau'6;,3uZ4MFGSi#BWA'4stf(]k4P+f_X;[n5q
%m-!FM:JUSkKj.Gi1F\RroV4qXp?/ujHPmFhIX5B%&%S$8&$jq&2G4jQ8damLho;W2/CF[AN,`hQcU2oD)6""-jFE1.Qt2/tLl:Ss
%GM%H4B1k.2<5p?V)OE>Vp%ZbIQB0@`OVTQmapdDtS!c*S$%pEL9UO!4gQR!9gm6]fB!bTi[2L[Ij^&jopm$)M\GI5>&:Eh6;e)&,
%j"@h]BV8GLFotBB-b[>8-V4X)3$?ZF@.A-5"_q.?Oq:Y3g9ndcBKIX$\YLKY*fTHEm5%@lp9mrLP)N!0UXJuF*A!P0plS8mOWu8V
%j7,MT5/uVT\>M,0?UfW?G@LFo&bBBJiu2Zf2O/$/7Z%rl$Z/A]2?h<G/<@t_C+?P\QkEjKbY_+^+.?AdPpn:V$EKHL`i0_gYa,?R
%YW//k?mqkONDei8EV&1;W?-phl_epY5".\7ZKWU>7H*%3N5;^<Ads2O5''0pajb(V7RNC3aN2G&Or=o@ctn8"P@b1bGYG9UdXhX0
%E9=E!`r>rS8Amc.j5L]C`:]uR.qrCS0d\+oY)hFJ5hF>JD#1)h;(C;0XN=$+aNRM]_mo%N;mn#.!LnA\nj;D-XH_]Nj2<e)?k-+N
%9(OjVh8q>c(BVI1c):iXrZk'cq^1JM>!#3Q^etu7#ISBJ&NV7ABSbT?UQ=T38e'!#R*9-9lW:I%lUeKaM.lhMTs<2@$qL#b@7e-^
%8[@q]/Tme+6Obi8b%6F>?c\K'<7E$q.&i4*\CmjWO?QfVOrEncQ:[((#$&S5jJ5r5h_R4EL!XdkJ&\`$%?psKR/N2@<8DP*6*27+
%V'2<lW]]4kK-UNIa-R+/=SGIBdVm-j$iG=4A7X+YQAt4S=egjD9#%YYUL.06`?h)J65RS@9Ho"bK0D---.>miI3(X,Y$(6P>:)KC
%USP294p=@I1)YX?QE\fVV39:+O@^p>D5"Wd.1VoPciY_r2G=FD$"<G"C^CDF;14Z=S,`fa,Ek5>7rYeSI%K9Jj)RR?'ZT.U82Hm+
%BN>"[Y#j<+Lfb.^f9MZdQmE_2.UB5JT$YfKadn_WUQ)n4G,@&n8L\pWV+/BM`C12,W_LT6d_%PD6:4`'5c<IfM&OI!D#1)85sQ?\
%0+-"Ej,D]q+-SWn8enr0>)q<="a!+6b6r4G[MWa]Xs:H050l+Q!=oP"?m$l@@g;+Z<.RFdX/3Y/Ba:'I\XOJf@?LaD2fbln1;^9f
%7&IIn;B"b^<"#Q`#;[^GRHT[%XZ&o\f:YtCUPpWWU>l%6*K5/ofTJrNPqe(sj0L(#b;#E[etM-0B-d"X.F>CUKY[!Z]d,J0R%(V+
%jehj:)Vupri[DH_3]6$f*uC898qUH5)GutR0&fI&hNViQ)Am*\aG>c?UN\E[%:VsgI8n5-@-Fju';FWVbe^m2B?usNAV<pC.aV*;
%)+1H^X(l`.VAt=hWG$7:gH=[b,=>&L[8],#kD,OIX!C:eX7-/1Q!Q7d7S%!kD5W:b-&)#Hh^5=WLS!1uilo&p,<9%JQkU`IeA+%R
%RQ+;P5J;]3C_0gVl(^"'q9G&E)YNd5bY]r6QTZQbRup#m$b%:*6n:ifk_0`5AbZKT_rb]jQP(hd7uf$h=-AO4p1@3+P*?T\9WB9o
%<F!J(<4s`s9%k*E9+_pTek>:9$ld!D9_*uj;&d1.1*s7i4>L,?]>nC)3:\oU*g2Di^23R%s8#jh\2U3-aG%GM>:s]F#F)8Z/$bhY
%;.M"4Qm^O:cuKYqi_6pZVW'F2WOP$KHiK\r5])\5NgI3l[r\^1.t5#XNUDU-3E<Z=0ar^&/Ef&pJ2Y]L,H^:ID[_9XL&)5qM7_p*
%i*k7Z>!jlGKujU&Q1H!L-lo.ua=9k^<l&TScq?;8fbRZuU>m[YV6?q91!:i=,4q&J307$5P8NDMKNl%)5i3QI%EiiVT!rRc8u3l)
%MMiFhd^"=,-A\hb@@&^lJ>FZ;,'9_F3l#.O=5So-H%GoF4Yb@E;L.`C%`kbWhZ?N4,98aK)a37])i_MT5YC`(eV"GRBemRc"R'>h
%j_-f>.qJ)13<iYpWk]60).A*dTj6]%be,XjVO/mCc>qPXT&kV;;YVAG7)`'&%[7Q&8si`1Ir:!TZN!U2#Tm!EkhYU@RL55ej^j8.
%(mPmJ*_]*"$+f?+.fGmB$,T."B*XmE1&Q97!6]JZ/hK]rPGAZBjjLdnK^$YLAt]1+RI6hh"JYptM;I(e_3_;)NJX.QT@h),CY<pY
%$^N=Ae&'$d2/8L+IA+PHlsaS,!*'9[9Y>H[7\AA2N+,ATH>$M^je7/aQYTlK]QS71F*(`P5!P,S!+p6gq?h7]W[&FTZ7F>Mfa4Eq
%9TYd7Cd;)gC)jc6&-gkj]OB3'&V'.&(mG:B+ELjb*=g9IQ=Zs5"1%)YD,Dm.TM#`Njrn=,b;_4c_HnQHjq^p4gQn18BjZ(#N>ac:
%YX]j^:nM4ffY%V6&*d4i*ku?m73hK-,'`2*L!Rd,?i5(D%qj<\lsp"9h%AH,F+Q0XbLOlR#!s`.G!(WBL<1\hK[Eg#$8+eWA)8K6
%*iD3C*ni$iOtC[h2)3N:"@ER[:rFs?QE%+[AsMtgK=fF&abtKe;e$<4.@b'oO.gbW&Nd-pVAYV-^bgST"mWLS(4j'DLf@DB%qZ,H
%boNHd5eYeaoX8^DL68@3#QTVtmKPX'#_:WD`!AHR_@CO8,%3gm;%O^G!js2hINb\_g7,O3<e+9["4tQF58qaN9HTn?./)[W=@rO;
%/;A(mJ]Tj\aH+@$,SHKB*!9%qYm^l87bb86JPp_H)GI!c=R'.CbS_Ta5Orb=Qr+-fM(cADDLd0BXI&]nicK(<Y-M:E-5dZjJn*Um
%][4H+ie\@i,RC'$`<S'+QL#>fl("Cq^eBd-@=Lr-8.6FmQ-PGU^_/s('f_/4i#&@$5VB;(:a<B9dW`2K3tnBAR%!\5nN^pl;_cAJ
%`G^%SU$*'U8\FDfp\0]%60q$c*1t&,(<0uAeic3\OeVC!r4>E#:]!HUo%\a7cfh^*SJs,If3HWsK,;c/b]U$EG]=U?-@4eYNfG/U
%)S%!0[3`o5aFuh%>hY[r;Zg+aNMLP%>JdKNE(M-abK\<A+@VSD&&O03bEVSYVI?Ntg7-*7Ka;H<!f]A`#4`PYa6,(T:h0)559?<3
%nF81$q"ff1d9)nW$RsQY0?t!3:R'N[2)E$/(=p]1)RuH<J9!.L>gbg3%,@hMJ`DS[VO`Gne:'PpAVacQa0A+uRDHo'&>VK3K9hLL
%?!/$hd'D^RUXq:X=OKl\V]j7#1CDWLFp(tHo`!F(0Sm?NQl)I1.*U^m=KQM]jY9Xi5*pcJ=IAHf!8=-GcA4d4Gt/&+Uf%@iR*a+u
%*d;4#;H"=GE@-t)GSq;D8XU?fBf++jIM#J5N!kPBU.WUDMGf;p>9nP5btGn\K0\D/8Cn_*Q'Gro37=B8B1tjPMsI9`OK!O[9/>`V
%1Bka:9X^nqAPC)lSSVQ^N,jkQ(8>Zd:eh3'K;&c:7F/m#<:cX5N*?T8VnG$Q6VL?G1t6OPH%QmDX)'7:VpO#Y$BD1ocN*#QZdXkh
%OsEX%U+!eU3$U'2e\iCCQV%VN%8G)E.O#.e4lXo>/BuVn7S.XR&@X=7Qr"B\ekbZu\K&\TD#1)H6#[j:1!9&D->TjE@l%c)"/\u.
%^j&NqDT1OrP7/!>7FH@!F&4pm`Q&J,-WGD*I1:lchL`OtLDk7a&WK4!'fn1$b6':LU/s=W<7B>t7[+PQ@+]M29Cg%[oVAi>8_%"i
%f\2%56%Z,cU=+!n93CF^_j%G^$V.=Wntg#U9'`6pYXAuZ82b`]Sg]F6P:K8m*Kr/!\2ksL7MEi'S0^#ME(fhZ<%9UH(C,LP4safu
%^dq7RouIh*P@rN!0\Fjs0JA]ULf>iY-8dD,k!r<`8u,@eM__/CLe@!.FeD87i^btQ<1YMunp"EUDo_!5#gMCLAo*SBGZLe#ilRK*
%+\]_fYiY^59!,'a&_;"cQ&:GVj*#,6p2&5N;G!O()p3.UQ"o@TM_K$`fi6bMOsS,5=AI_=H;;nW.&i_NH'F149'&T4@`P+]H\ueh
%WMHaUjiljseFHd$2'OcS,\BG/+)b7@h0?QcA.CR@:bp(DF4k5^Sf\.o+7Ft(q:,#fNRjA%S,AuC,7n:D9>l'FT8u<YI.B:20:lV:
%*.C(Dn^0qa->j4G_hoQ)q"%@N3OU?@d<g6lkqbf4kLWHqs-<AT_76W0T75j%HMb5)XnHE)d6!g].Xl#D80KsiO,r8pocOspVN6Vp
%f?CD4o3r%.lIc8S'K$HshZ_LFX>iq@J9nq\3j!1qO(5C3a-1dW2Wg<^7Kbia+-67Tn;M6;_ioB,F_=/:=#4\mLs6n&gOk7rpK5#R
%_$0RJ&n?b\'&9fKVT(;=C[$^4Aumhh\0NN'2f%Z@2L!crfQ/7gQc,Dh;L/aW;7;.`W2tGWD_Q:0G`jq+NQRNFTke2QA.2`gE[GSb
%)Ncs'XTArMOqq0a!utLQR:A[d84UaBkJG0+8sEYN@1rQWKing/rOY1[LIK2ePpT4c?;s[aAhdMX%='pu1L"!9UY8^?3SR;o=::+/
%NXUAs^L_]>N`*aRdn)[UO\;O*mB'qu,H?nV'"YChS([HY\rm+:k?AB5JVZ<_6h!Kd5"n]GAM(j:^asiHQ&lUSqj3P/&aGeHC2j59
%X5lHp<lq+'[/-d=UpI&s0V*'#%+O6B_0AeY54/[AD#-\A4f)^5iUI?9Z-2NC99ET$@h;7R(omq&k6-goCI3)?mV.]sMjgHH9qK!=
%mKb/=Y4>h\5mm-2>@('1)8hYkE*poOY+9)9)!YOSl#KZn@>3[[8X*uP4XXL,KS;iL<N/#X@9,tCP'fjmUXK#'*5!4ML`P1@&K%7.
%OQ3T6fc.tC8f1P`*a;+g$;@((oZO.\UgdafnsH46H%UI;T=6+j3g#Jh@:hJ2-;!_]U,tHrN6"G1j'l7u.Ocs88ZE5@2KNp'i[bq^
%/6d%['KY2C%?*(iAAlI[d5tG_#I,SE4t:(3lg\*kMY<F];==&9Z=c#i9HC=kG9d9Vcd\M,GQ>2rX@V-@<",P0,u_AF-cMhdD,WoP
%\V</<?_rueR&M7aF=md%lZq`XP*E2j0Qnm;`NTC]G7^)ES8o%#WA7-SjXb.MS2"`->Zr5C_rRnk+5-:K3.dc_aceF2DEP'M!?7@Y
%UBqd0e6L3`fU6=D?sbB@RP;5[1j"mP`V/dJ,VLqkA!j*$Z;`.iBN@W17g5`P;Q,pSNTQ(nY]r&tl:b!n8^l[X.0?7'qC*F5N<:&]
%9co'8@I35\9YkYfB8a(YNm!fPggW(rg:ofnA$`_)GKn3>OrDRXGeA`G7XC&a92_i^c,]%'+)=b(?Q9UsQ^169$YGP?9b9m1d4CH\
%2)Q>NRMTO/&J:;Z:[MQ#*5n(XqP\4-!RP=3-50?A.Vl9Ej"k>"F"t_n#2V-N-]-ee_(iq^3ggna'9:[hH)ZWk8d\m_bL5'[:YlPP
%.OgXGRYatBd2\8u/=K..Q):G<Uht+c\G9!1I8g]BYQ;DX,`feO'T[80TtVP6,HAjqnRVPXG]L%hZbJlmiSBQ_@#QM50,PhUpcl,W
%H7a2a_Z<5:cY1apMH#G8-N)Br=jffDK_GTKJ+h`9=0LCM'7?'nA&-P1b<-lPYGsDq<C!;*S^g!#Y7/ZN[@Lt[Z]IqoVqum^M[5KN
%rjA!EMd%Z4!H#Wn?f1#*+W(UlaZ(]8`ko_c"%D)6/CDu[g`e##FOMQ+(F%\^)UN.g0GNI?2rRL#+c>Hi-9oQ'lX:tBUlqp-G-7;<
%@8iHDNd4YqZDXoAQYdMcTP5G#rmA(WdJN)TcGR>-dOV='PO?jf>afgb,8+sZ2PP<];Wh)&ORe*1<j&urA$(DONsg+BSIjXa,ihSF
%!&+lPSDNPU@,bCFNr5H%D=6TnR"SFu[P'`A!ARLsF;(_1ZQSMa3162g,bW@KUTjV',Pee?DT.h8;Co@S'YPI@,7?JOQS9=kB9+nD
%CeMp1=EO"\r8YD]J,8EkiTOm.f[Oo18id$UjUaj.7I#ZNW(&;T@&=%lVh3>cU4U9#mLYU8de\-toI#gdP*u)ha[N!S%2((cJAcOJ
%6uHB%W2]_iEEMa%(Rj:ucdun8']qNQ\2[S)Sreigi38uYJt/IBH`<%6U*<q=aT!US9!Ee)CXrjLj8P0qB;3iE-os):J];Z$D4nIr
%W+Ho00a#r0UfW:6m-=.pd-_<A2c2rU;;DDDT3iY</eNko`pr:kTM`c]BA#se*S4QW,f"2]&XA@TJHk?U<=pqqoBP7jNAVKHLN>@D
%@-^4b#'1#9,:P1CE9+0V38+Y='7E=_>)hI[hQ]1$UpV^ZK%A=/=iZ?T+d$R_!U`8T%3sZ]8(g-1K<cI)6KWG#'@t.H=_9[OcY\]8
%.jhh&kb%j3Xu7Oa-o/u2l?YM^W_Yd*K%^u7DaO0g/[Z/kiMqp5j.-JMp4YftZ3tW:_Q?6<oc2<SM>*IY@9sp/^%a!1#??J%<5Q,&
%+E]eL]\[2%AHEI)$P?S+(ef<I#8<[oj<2LlHph'PUms_:(kho!.DHls]eR^8+sLA^O:'\CBjBK3G<[o-?A'+ZlLTf[#c]]k-h[\9
%EKm8$+jZ"$SJPsP#TLMP,MHOI0JSWE!/=,HmU)[%<hAnPA"aWQ+kd6ak1Y7lf#uLXfaO_j#s,GGg)hRELYQ6bcA51a6T8L"./>,/
%S5c.;TQaSsU_`+JOih'&RQ+r+Hnr')e3><B$4eEQ[n&P[AaocfSE_Xpd$9n:VR&mSE$Ap\iCGugog)-P)Uu)<Mn,od%[ALOUd;m/
%?I4;F4/-DB+H)XiXYQ,&1N2?1V4sXr$[Brk*g+5uofgrND\-QD#mI)bQ4Z!AQTSuF'd4n`c3`L)E%*'RHn4XgV=I^i;L<.#X2jlQ
%joA%+Z1B$TP?3RZ"hPIhLhhAW&6@np8<?^o2i[>t&M'B[(LK8"qW6`LT6/cfC07`dIJS-D]*-U*[sGk6/2=bhX+1ttm5..P6f+rm
%TuIA06g0+n$.Kg.a3:oSA;Ki?NeA]L_Lg&NGUied3:Q.#/ZpfnM<]7f&SX6F-U0Z&_HL2r)R8<H0^@XGe-Pm;GW^WM&D"6'S-UHk
%U(kY"Sp\`snn)cbSjbW1rjfnN3)D<>_\1snc5?Xqk>F[,=9]d;aiCDLKsVD)V[-o-2TLbh<]CG/aK6`q\;*ZR&Z4()&UR971Sp"`
%<!M#O<EQr"^1];iY]11DGD6)SI9%e2L,O]6GAr^2jmKTE=!cI[c\AAcL`>UiC&_3<=#__og_mUk/8#s<&rEbD1Q$FYi)jf]U%".*
%3!oJ`_bIi2!fNJV@$Y)0E?.l=;rH]PRt+%U84Y"7i^C]Y4k7C&SR2b,7710NY*&0YGu)K@rY*j^k`N?&i]^\nZ+o7ZR6V=MR-ujD
%T>j;s$Nn6eY;Mb2B*3$Is$Nta>?!Ghet1HU#F'Xd>+u%G,8Egs4N5`:^Qli`O^I_G.HFMC;]<rqYgatYU@X&2diC(t%8hLA]g^@C
%;Nh';JmcJoPmE3KNYE+:@1iq5JbZ%Fji!rC2_kO8V#IiTb0I5gC$m'Y1?V+_BDnsr'$^;]3(-cb0H$\U"qE)KU>`SF_XdD<'\=k#
%#O%H$"+42;Tl2S!+5jc2&,L@DquGVTJ'al>"\:\cVZNPZ=%\PcH;b:$;4\IF_)G@;"Pp^gL(IO%?QG<F6t_3E6^DVi6t.Q`<f4g&
%?rnqCJ>Xd681\pC<MT?uo:R)f>K<UeKW%OF$52iV'hRDASWtJYqe?alIAnUqhc?$3nWgD5n::E$&q,2)0EL$2RF'CjV+F.kX#<P1
%cAE;)?.B6E\knuOd_"e.%.gPc!T-tP^lVVi'_$N.9%a0F8-.UHV/R[Z6=ibr?2)htH*TC[<+<5DWDZ#K^JLmrd=&Ff2h/><X9@E\
%X[HYZ.p'#"DlHh4Y,&1r/+nMd"hp,aOcs)39X@i]Gro(U7&92Y%rW^*DBkaM?Hp+aa.f(PfIBm_)\B2(4<3kuM\QaV)G,c;Q]`/)
%&.r*%\3&]IP6]i>XYOsfgar;?U>O8dj<FjZ^U;K8Urk7:hpcss8!jk&/lVLJ8[`$G`eCX]X#dIdaShf<>`SC8gZi06i+=d">2N;.
%N'!!+;X]M3Q6lm\^u:h#jj#.NoqrZh'Cs/J3>[c.gTpp;Ys0<Ici/lZp9lh+@V`M9/%8h6XdOt94gUge.K,+J3cJ5^/@ePQ8Q\3O
%#3C0`EC-#Q+'2jhDHY^J2/3.-//-"gCZaF3Z'%6.a0#Sg,QuQ"M\CdIb)#$dMlb9\r!lRU?SYqqG^c0.Cs3ld(2/^JD&-$7+,`=l
%#-kl7Hmi)oFgon$CfrL=G1/uA''%VhUk:M=Y.JS,0qlL0(HMkTQV,QC\&`cjo4OA_R1<)lG:,dbc?H0S9h[Jn7G`33VaZQHG:*T%
%mn_3AmEhJs;k7Qi_1EfIeIa-0V!Z6\`$8Jo"+l?a8h_a1o="i+L'#=!.`A8Qo[o30['@nVg$7A%0kfHsNAEU=[5(I%E.o"ETgfaO
%;;4K.X3Yg9/7;pK$[i?UI"\6cT]9QiX3gr2b8j[qHsWBJf,1_t\GC;%f#pL%8Wj1)Rj_`U\jmMr0l@Un[+S1%gg`t4+^i]!1P_e:
%F>sWOMj9U4.VPfmbdN(sQf3pk<OVK,5Nb/.I+^e)AAV?p`rh4L(N:k!UL6Z<>Q#O[P&0BB0<]!(p!c((>L7'Xq=#`dS@f`/l=dNM
%Y4oj!<f#FMG&S3RK,`@3a8:Idp94":MuJINYKOj$NYq3E!JI-R-X_NP9q6=Oj[AhT5nZB9/_GYsdZ7OscDYSGg+%T`5U]UG4dk"p
%9Bs2m$\o&Q*\H2Pjjq4:D5XXFn!"V&3P]iQ,/um;<;Fc\?:,MdJ_HjB4df[[L$sp'pe$8h$:!tG8<s1!6o-AH`/i/)4tFud>RG*_
%KR#u2#1=/a$S[TI"gLP/pU3*bBtIk0/':`b0uL=Y6l<]CP%f,*cg'C7*F&d"0Lg3JnQteI-!?9'?,FZ[AsY?[+EiU:c>K-4\]:*%
%9=rK\'6aop.V2D=XA3(nllIjX^hadO'07+W'dB@,:QF-E@QAL]*k/Od^GbB:Km.?4TkCWg(qlCB`s?9g&&Z%latkV#HC#OjmC#Lq
%A`c.5aKrqt9tmEe/.r0/%5^iSZ4@m.0_:/Cl<0^r\X/SKb$K#B5gO3/&p]C;"oTC,>W>]l+DFk@?!p2Ac$In%j<E)3X3e@<df.LC
%G%b(8j(PV6m"-QSpb#S=V/),Eo'n>DoEJrh2Z&LqYLnc,o;;:*lkVSSLWmKKG'AK=mE8pJGo"`C*;KYO(/,!nI]Ug[7c##)lj^#,
%\V$u,m7t;T\-gMYN7q$Z^#[6bOrWDl6kQW>?*_O_jt:)\[qCaYJ'1!B3_^]N8&eftfI?%J>^SN$`QTTpI2MFBnle!\JquE-W\]au
%b_;(J_GiI;'@X,;MG4=g_)70Kh0HZb]Qlr3,CYt5Ega1*)Wg?\ilKs:/pY1,b:N#";`jEk"rphODGnH\@;[V6!Qr=da6_$<SUQ_R
%#cD)c+IL[sB^O"K:ppa1gXoJ!ZY!i.rL3uXd'UC)d=-u):,FuJGH(/&5J2S#ndN0()8-42UWqB84Idb4h#1B*PIm2^[5XN-&bQa&
%l"h/u$XS_PN]Ydep/e6a)6;6OX*hbIn`h^XX>"W"=cKE_VsD@/EoR7/Jcc07$Y8;klmS!j\DH/uNr6bA@?JR4dZKcW[3Y$FWMRe%
%1crUnP">62@gh/#ojY:i*X!.-QLPB\7VAs/^pA=/;*QX0rR"gp"eDjaOFT@%`lV\Bj09a=@>D88R8gqEp%DVL+lk<e0+B%Yk_9RZ
%4e0p.7JnQUk&?\ZQN@4SiMoWpYOh748rbKK7f'i(fQIK4&8,gnWJ;,tPF>So9S1[R`_R($RAFl(WD4Nh,L_m(=/WZ/k[K<7']^2T
%Jt0p;>h/BFODdR\#03UMnu\^]#JIe5:e1IYCdCW0nc!T(eLU2t:"&]NVQ%Ob4ZEm/hHJR%OL'[M8J3<EHt18($7Y,]%E9*&`spiN
%2bEot<b?#5/FNqK]!MXE(Q%'7IRfD<PnF]7pN,,"4B]RXiaRLGE..U5>oXnt;<HC[E%JRM96Vq+pp0&=m/j2(;\:`l(3o1aFH)=R
%*FZo"mICaC9#-a,G'P<TXlK5Gb<+34gj?B?g#A"Yo^).'#n[F+>g"(S2s[^>ioM36YcBo@7&5BH\M5"m6QJle%)3!rSI+tib8]+J
%F2Kfg^YSI@S=]@]F[pU3o6,C,:<4%7nkQR\`%g4lGpgr`g=8ngQ@"Y&\eElooAf*?Dku%QlGh"Gp<Bc.9;5`is'h!P0ps$2-eQt/
%n1.u93*/$N7?Xqt<]?_W[;K&iKTQG1XQSl/3'#N.>hou>E4usRX./l@HKN;Z]MB45X"4D&&R'5FV(D6ODqdLis8J)Js7Fb^msEfD
%+tpaW]>hM94NUVYfVl\,F39q2T8/O[R[1#I3rO:g8Kl0Ck.&8.-@.BW9=T#CM:g+1O)9K"*tt^g0@\-fA8DHF>?=81l/^BrYJA8d
%#3o6Mbs;'Te'8_6Z3;8EP8F\CV3durkm/S3X0h2Vpu`Dj*Wmdf:Mdm>qaJU4p;8D;7Zem7UOeC$V*Tl<Ck9Qc_lbtIB@5l`_3WZo
%[NY_qB;&Z9(\L7?(M&!:ehN\2';lJ`$X\OA.J:U1`,SjlEHH[!mf=&jAC-,U&9pR)8IdGcoj0%IGn[0qm/d3nN28k!XC?,3ICMdW
%S'X/J@u^XEA)RUC#;]bJ00&*7bSH3-a-CR7L@N"#)40kFkI4GSe0-UZM1CK9%_QjEpff+h@_b6$:AT3An[JSK6*"G-$!*K#U&YlK
%]WLE3HD>@Mfn?84IaLMXl6nMP'(+Ei51RXi+\!$GYoouugiOf8)\Jc`gmg-#@ck.'/4nh@T.Z^Mm8ALh60!JakZnMSb-#E;m)gq-
%0**"(8CKT"&din`_CN".iGa')c(U5XX@,'Xm3Hjj4cs"1R87h(m[BWhJ5]#MgWuCGPh^(fqKGJ88-X1HYRU5TFEP442K,pp_o8WO
%;I'?foBK([fSe;9fP7AW#+?!R@B'H^+fEh#'Y]_mTIguG5\]51(r;nKhqOe3G*@eEEmL%rB.?.'FV23V.H&s%73B9R[cm$YbSP^+
%MAc<9+'p[7de)t/h2:IKds3TpAKLQnd:644E"V5q#[CJu6#0mT,`ltk_B>%53C&QlDtWTjBt?TU=9*o-"!4[u3a-WA.($<?pA@IK
%,MKb3[M=W5dDX7^\K?r%]"55(\7IJ*^g],Dj`u?m<2IlH=$s9&>GT_p;?nGnR@;#u\'.G]nS<1\ctTkZ=ZN9=A^X.bhaj&P9j?VD
%=&9\`FI0`"e9q[64Spu7'gBB,i_LkMIne9iR1g_f,.'mC1T^@TjM$3/Lc7/^WE/[mJef<I)7VRN\\#ogf;772!uRmNPR!?q4=r!Q
%,``!s*Vl!)-kW\HAs#LO+StfK*(%]smMgfiF<F,Q#U/4q')BNr#%N0,[I^[:.^$47pDFHKe_s3Clp)2PNe75o@_?&f-!X@bpca,B
%c2/3pfD@DE>1fbD='>t:X8(<7$eVorWN$L+6:Bli\a^T$$X7_3`C_b9VXZf6mL/5P[W9Qt,?qL+.jR)PL51b>Ico4\'jKmYB[T7a
%SMb;48p$+F7#/j`:t"/cA6fW;F,T"$(c?n6m];.9g-U5AVlj]TS+O\?gD%YP[V>YT9Aqdc^WO:+F2E,XG$g%CdBnLj>7p$BkH3N+
%BID(4He9,9Y&;7E)%/#_E,;sLMa!C2&%a@-a-Np>Vne1'b)35&G?abR2rY29f%KeCaspkV/1/qH<h2bW<>WIt@=dm2(4<bf>dV.8
%?EAZo!e7<en:c&gG]@<&mgU_ec.bW"+s,ZQK\=OOh/=6kHIkm@KUtW;MOk>G",/4mMRTuFBK"$@c9r&45!>O^)LHqm<[RI19tM'b
%eqKTF[ftC9Ap*:q?9L#M;oRb*koqV)/nL]Am*eGUhBmA_*Fo]?R:L:!bdGjkb]cmO(06aui&5+d)%M$SGQ^oT[_u`YltU2Oi91"-
%LuO_lF[.oFMnrS^(IVN>occ'N$8GnN6jW0V%XuV!.Q;-!O>b:S:)#>8aBZGoj-8N29`\AHT3]o4X8B5po/JE!nWFk^r%::NOP;%s
%a'1qtT6JCtmm^lbY-!Mm>AJUo-A.>`7QgSA"%Aq3JK>nX.<O?r"^<T%4?oH^Ao.`-bd>_Wg/X\AA2_#dBm"9WRGFM.SB#os9UFg"
%i\q0qm<P<Lpj.iHkjpE0[[AQY;RkDJ-M*^mgk/D,;54GMNsP]aY1@Re[bHC#/0md[3aZ_igb:cQ^<YF@Uoj3s$Oq#8K#FbUi7Ls>
%p"sQl"(F1<rg@eJ%&:,W:bUMdMBE0!-:o=(p5+C)pW8#9D\D1R6^9<=PR<PACO[%;#"?=7gf3;@`\mFNi2@fBF&7\%4BS>f@mR'C
%mSKI*luop9LL:?8330rs%/nQ@JFo6t4#dV:@>sKsj1X;,YK1b&mh,gDh`barceTk,]LV=OB@ePs7BE]gJ[l1ML5c$PWH:e#[94@'
%_TbS7'SEK*m804%m,kk*1"]X`Ur_7<$tHEbX`A1_Za/%^YBS>DOrX"]7$0k%-<YHfh'*7GhC$R7ZZN>ifnaLci1Cuf+#7Z*J^4:O
%;!qbZm1h+TE5I<IX2>"OBPJHY5*g!m3f_FGD06'2G+[mTI\8B1W8Yit#?Q+SA=.NFUbYV*\-fBIbj%s`rKI^PPN@VX-&gW@mudl1
%CnE[2_fj/.l\Pc,or7fnjtc-;19H8#LVKf"#*t*pR"8&qMYMeLhQ%b*k?@2F\ciu61?]SCWbrG\[;21GF`8(#_jJuF`qq2FFsbBE
%^IoDk]h]Po]h]W1A\7$VG&u+;qhue"Ce[jm^O-pd,6pKL2+[5[&C]^<MCWK[=MDs!%3dgKf)MLY@]?]>#s/FRNF6P/b4b2)+IcT$
%Vce:+E3RYrqb!)'M(P/YV]n[5CVWL0M/PRfn"MBr2#Ht[K':uO;27(,LQD1VGYd479,?Hr,"_7!/,K1o>;)ks]Id0uVjIPo<(\du
%9Lhp`\7:REltJqj:)VZ_fh3f%F\]*hGIo5\@^C^!6lnfKY<U_DO&2HrEf3J==QI-.:o)ruSKA<OM/(g+cY)>A@b7rV6>DG<`Kt!J
%KN0L/5HO,cV!Y0S0i2,Mio+9Ff.(67AD?O&oVAZ2S-@.k7Wmna?6?b^aE#5f&k7gNG"EoN`@c/kbeHfBHX'a6>(A#cr$#^?bFi@d
%!IfY6Iq91')J1%X/&XAeJ\K8YX0u0cJdcQ8FH1Oo[R`/X[B-dI2[c'?N7uRP]iGKCLiUH&P!uNR2@6-*NI.I`#Ol$Yln[-B?`))u
%'^'X;RC?"[SpOVoC)Ddtdom9+@LD?m6l-Af<=j%+XCeTg(8T3TaA]J)7[@uUB6B"8?N&i/DEqqb'f_BE._%r&X#gjd>3&sdjbVfi
%MeY,=PS&b]9,fU+g83)4_J$0aIq5X;NT&<C5u^QOP]c##fEtF6Tc`KG0c?;[\/ZrV;.NBsHAlGf=0:o8EaoB]Y/bO29%#j8_kK*3
%+[U(5+9tBM9+mA-4%.cI4T=FV]E3/4/0.Nr(`3c5Xm.[!_f:8rI#kAe'$>LhfW&44&m-R&&JCYLI4HeB'4X>&8'-pFNR>Q)84'@m
%1-I4c7n>`_a/>l_;roapLG&EIET'WAT^ftY+/%=mGj$=[ZuV.\']06Yj@MYaciq3!bK3,mp^V*VV15]fX5ec+,oJ=Ag%jb7VY%Ur
%M/jq'TJ6V43n5SmK'\G:jCF":<>3]rBO;/,9V(dK3^C!_C:cMQ[+hUtfO.YLm6F1N1G9U#H8DB$.LM#1Mnp.1E:K)(i`e^T'.H'm
%AtVH?1ETpEcn=!OT=[i,.pa%(/1^#`R;!Dn@pA:]=,\[)0'gZ\gR3<jhdKkLH[K4/6-h*`pa-[?\S77ejm+]I%t';#O.<YG=n#^?
%hS-.BN@E2"j;jqWeT7gX?t1dH2c=J@*GKaC`T`AHjh:mnZgoPCQ@plcKkC@sKIj3)od2[T9Ltf"3O$FOk@$cFZnc/-&8*+M>(ou4
%gYoqJbA[Ul\iRDCfYpsB?'VfC&Rhq9'[^-.aWeoMO"eIEC5XqC%TrPg)2%t]mcX?=rKf;a=pRoNp]*/M.=TDdY-iR0T0o<:'QMDs
%5PO-WCsZAM@p4eEYN4cAL#rYtXpWS+AI^R-)sf-T`;!I]W&RK_ZHHc<k--]nJqq5Y-o^JsP+=uPqD&j")X9,Z`K1+hK7p#&kkn@S
%$#Xk=A.;uM6.5F#P0c',\Sn&pDA-=)G[de/Ag-27CXD$\S<<$5_XV(r-?FBNm'.&E"e.bj(,]Wlrm5<S5/5m(\^F(,F7=4="#')F
%h/T@rk7SlY6RL(-qCh.FG,Y!P'cYsp%O=4j=OQ4261U<%`X`hkd6a%c)\NC"SYM&f//^`CbeHHZhD?:h7)8o7q`JI"KV=$.cZ)Vt
%9^Y/3UaGN26X\VUkg/=!Mc1l@6H1)jT[GJ;^WYAiJ\BRRfZ!..pm@@0][YOD3/?h"3WAd>=U]cQ=V<&+MLF[.oE&N*$/PiX9%n@6
%bMHBc$AdQt3/pWu$7![W#.[:K6PQ$8()],bBXlh+!_2\)Rh.o^@jQ+o!d7g6L+(c7s,)CL\ZRf)\OU8:M_>"pk7-WH@b%tu5^uLj
%hu)H01ng'cV$\,f+^Iq:Kp;Cljnh3XfF>WWf^Ci@,2V^`Ac341/8jA(g^E-I&ln2Ua'!:m3j'8jjc.J_L]Y@SR+:9ub'it+@Y].]
%-T8lZc:)she6mto(5)u:q+aj',c>"LUcd$Pg^JdK92[R/&CgG%5e6C%3W'5'K`8"dXQnVoZguR6#QOJK_LgR?neYQW[.,u]Lpu0/
%iQRFPrKMMI6>QdkNkChn:8Y6R4?,94:0/MYeoO:XWHd?*`(Grm5-/C!YV[,IPAAKMr7lUYfVGM=c>pWE#iRE^$'fle;5i\Oab$6?
%,g<H=2;Y+O^WC4C$/%DhEAcp<^i4HSB*9>o%uWFqKG!Zb/RtAcLui%sF1eGbQZ>B@ci1G=&`#Y?'DGbUkPkGF@_PKF=j*ojC`WI&
%M/<c.l%i]^k;?#bEq/1!2,=A\!O>mnJ5Nk=mZ^'mBI4d`_Z<*-?lfcqhCT#q"<GOU#fBEC%oDB"$[B[5KO/*;2"I&d<E%#`.4Ql]
%P(PfS43Yp*(sT$hWgEFL_+HLYgC%TC3fg9pjfF#KQ8to"?*to+997de>*D585ZD7sY#Fp->!lTZUe,PIn]QfdgmQ)^LW8YJJ9]b>
%$](,Ifmj@_S.AJ;2J30hc1[[Ka1JZu/!l[;59ZksF(?Q"0pGq[\2Z1.DQ(VU@O[a0O:3L6Q"9E)Q4.]Y%.?b@adOFe],i(U<-SOB
%_`F/5'+T1Ii1JGm*Y^V7BJ-*Fe>NsW8<30[+8-(+*q>27S;qZE96%#)?%0:5bhf'j->?hfUGb.Ld]l5m;fJdoGmlJBMqiJD8ZQ+S
%[&cR/1(rUM"51L/FA`:95`sUBd-aTgcR_::(Kc.`Z[i:e59I1`DpAUmZo]WpM<rOq^>>KKHP]0AFMkGaiYFSq\)'!N+?YrS*^D"=
%V.uT@J9Ui6*-$m7m5P<gf/&5Sft8nm8CUe$E^t6[dUmb6:G@oCP'u8hSL3O5!!XT<D42K,hBrJ`R6+5$MG`2TZr\d;OsUG/2H?uO
%[crCoZqhRDjYguDEMYn5U@.CY*BfOtf.aVXEmV[=DbeiU);3e&AQqQOhgU)H?mNkcGsp>SPp&0GB>bu&;I,BWFpRo#S.aHp)N8om
%L2t*@gi#Wia3!\pJ3B/rT-XU0^=#O@Tn225%Ip2>(<6-\6>m[tAo44gq#-P7T!85_::&,A:kEl9EEQh4It<5IM#<f(B'5s:Oudni
%*sSOmXf9lh$^0#"a[KF)JP<BSD$V5OT1jA2pG9oLX2qUeJk<-V[[9R^C+\S1LmlBBpdgc61:7@\&qX!3nYmKBiIfEsc08G23^@f2
%dHo0p9mFk*11L\\bdHMW2p.gsWP0^+5]>c$<#K2=hhp!H6l)juJ[R&SF$&,1OETcg/;&Lga1jd3@tY!Hd^l8B6Zcd$n6(?c7)Wrq
%;RYU[UY&^QCXUE>5:JKP9=1f:M,6$Agd$TO$p&WHeM]GT/.!q/QqMu29jh==i9PfbJZj::#1T7q_#\pbFPtnZiM#/sM%@-Cg(bb*
%H<5d@Q-lH?_8lF^7(thmOs>ESP^oU5KS_+i]Ac3oa]Y8Vn[fu6DVt2AMO^=u`<nfc(G)c?_-_%8`]\I`N9T@'7"/ZMco>"CQo05-
%-n-,?UsQH^%41^bS-:&Lq;HHrB-=62/X.K!eL+QA:.I-AgTElumcr^]3(G]=HQ;C[Cqh+7!PV2@I2^fbMs`'aKL+A)V"o$`WVj7@
%X0u+R?9]LY/.r_hV;4R!'8Ppi\b"dQ)i,k(n9sYs+G,'.E2[Y?g?u;Gq[7NX-FULA\,C>\=!;.^dD8u4%Sj&dNV?AQFsbBE^IoDk
%]h]PDD0Ca\bdL09rT&4,(PA6DW!C6?+-5VfU3IBp,8d=0AC1SGK-8)b=IhmS7V"GEZq5BEZDX(DNqI+d)iN@UCBU?qi%2Bm0rd<r
%pQ@`oa`>>g&k;<bG"Eq4h(E^>;/_X\?Vh^dZXe(C5o^eb/CHScYKWgO*E+$)XZ5CcC*TL0'LW4Y`qbp4FTsV\n:8X_2:[[tCt^c+
%cua4B["Him:?29e]:I&a`:"=.Y',"\"*WEHNj.7jH!ZbuXH7+2S>q*]l,(7F6h-.cG__ZFYhd_ML6"R%X?$pO[q__)*5kmIp$3MQ
%K-2Q8"&rINJf\N8U8iGI`t<Wt6W&eWabNeEAd+$]MHk?@\:&M6?qc\!4$fjee"m)-%&\<[ON;?D8/cUod@uo$JfisuH49TLXg]^:
%_SV?EhK2<R&q?Fk*`H:PrtF>p!1R@Sih#8Y.nS/L.U.^CFFg3.'kZJN,H_LW:@Q42PmK.\K"$*;14iN:=;GqSPJBkkDTEqTd_Ra#
%7`:kE=riM\8qK'p['#=dNmK8'J-=X$1?L<lX$<(;jJ[(dBI.4A(cBp@6TeR2S8_3oOaEIiCV.]0n5)G3'gh&NQP1_e](nXeEHLG_
%+FOK9[1umW]I,`&\2l#2=%u^2g;P.6s7;ttTS#4S!X`fTUWA#RJ`U6H+ScY&g4/q__n2Q@nGg4Pp[a,BD%3_P&6!ShH)in3.0?.D
%M`n;u_\#`l:K;QMk,q;M<je_\-nJ52nP9JZRN*cU1C"LiOnY&VB(9!j`Pt.$?+S38(nRaaE>$#mMt&.,2lL+NVMa)sJab7mEAWHh
%.-Mn\bBit2FW_hQ32b%eZ]:G1[RR=$cL1N',W<"iN%otfAB\3d3p^5LBas5!b=ZsNfUC89n<1->%-aX+m[;(=XD(u",VhQ.cM>tj
%o-(Ck/M/plEfl)6mDq(N9+h^ZF+Qo.8<972O6AK<gV$'ok9lX8Fm:HgG!oG@2ZXL<KMA0Jr$V:%-tOA#=EqbRIs+`>pG`!sjMVZ*
%>FeVdL4];iS>r6e'/RWV;b1t8)+?_F"F62f7IJ!V&jd_GSZY=\SqO?#NP?0X3=ba__%aaG@aU,`&`+2Ze\oQA\Sfb'?\51%=pDJ`
%_e)I%9&hOIQ_T89%CSP7JfjQI+g6*n#e+e#rnEd:'quq$@cq=[>Ju^?XTDU"d,YhQU;T9i$--?m3>EQZ6o*/\c&9BN*6dkZe:J"m
%_4"\<D+TW7@BqU"CYW>`2.ck%K-/Ff0P1>be9GLAZg`RLXVk%QAeNs/jpS_b&*ks@"UQ-OYC]1`5aO25k.8'aNlEV83VD75A4\K*
%:;\92/QjW8#!:4$'O3p^g$K%+c4n"@@]q/2nD1(::\Q4=mI!aTIJo$0Ts(r'"Q/WCat;YJBPnGRr:qUi[NSa"//N]n'Q'YJ#$.DG
%b/f;W?S&]KS0"m_9n/+A9B'XMLHB_*R+,4n%FYag)(Uc%:;`A33$$d.)M)<i$5j@Cq.SDIC,-)oG$>ks/LeP".AtKF`KZMNf9W0p
%6%nJVC.WH?.L2^a8F)k%eI='58<lV7LgcbTMj=Me`k'MgP`-QXOtGqD2#b]c4P1ObAhpT\p8<PWI`6tJ7%7+ATC,J^52MotHSNj+
%5mQY![;m8d9ZoIE<fDq&PePMT.a$TSp"mUh1E0l)1DM?jR=ui#EM9)Rq92^^.qle3/BFP!5m`K7=GYX/;U=!IV"E$=ZV#);`l&G1
%+n[N[n2P_E4'Q2`&dI<:0Hhc7NPoeA(,^i$`hFfRSkuOP%7GG7dM5/_-N,q.%m*TFL<bU1JTg!4bLWBB6%lu5Clk3q^c;gBL#e,q
%j)o<9F;EsY8.r:*l7H\2RD3#UZ:bB9SCJci/InSRh#TZs#2tcuJ")$UdYouHV9b=cP7\ff.>V+:]a;u.1g3CbKiM!abj262BNZAo
%E#;*AJ/EN&q4:<ZbQJf!Ws%J#/2#tX+:bl$80>66`&'M0mMkDb$(:+;T*%WU2r*QkrJ*o.7CEl``J%t:"9t*!Plo\T+'\S:I\5`G
%;Alf`?9OWQp2Z99n@QjP!b["VM9`E=e0(L[(E59!rT+5PDh#U^lhr+WHK+(]_oKC4%c,uKGaRjBV$@dl?@6/.mH'+h[hmu9rNq#N
%h0.T\(oo#8XVMG5%11]\HaNK.(0XK`8!GTW!7`d+le18H8Q$a\cl<fj:kn2HD(Lg*m7?WCHB6A69"8k[]ic;Q[rORhb/"LDmjoru
%rU>)#ihZ)sc>CLQ_g$Rm913lqi+Jsa@%-4%1:.-?Bjf:R/.sE%BKqY&GY[rW:h<orQp;r1*8O\#gHnT7$WR!=;jSE=Qo:;=$oHV2
%dBL#\oXGBk:Wr;5!sfOn`#._=FZruE*dl]fcd]2pZ-]dqZKST4ZD^qI@ELF0iD`M&F;sfu_]$P)$,#CgngqJ_,I3lLN>Q>s2Hb,>
%2Hb,1OW^9:Z%TnBP">21@L6J]F0MIbS7L>Kdor&LRPJafP+AJ/n-C2l.6!>s%>,-+>.%'g3t$[6p#&_[i$bob2=U:QglQ$qVW<8R
%E$[SrDbCUg]IuMAlV.[0a5K0!Jo<TELn',WjbW,6]93;(?ceHUITMtgX01N?nER/E_:MaDjbVfZ.e<8(>S6@L;mP?AIG&X:oD&a5
%P3Al\_6/BN7oX>,;@^&bA3$]EM]L5$L&o\-8/C;9bOJE"JZS:H:pjN4eZ!\LD0Hl7fFH2YCDaChds/&br"W@ppg(bpl[@4Fp9I70
%[(T8,04uSa/%4a)rFq\;=B'-=!-ri[*u6IG6'UPP@gn"[((q%2Jfa.bqk:S)/T[.$b'#;D3jik1m4LaCgVI%>%Sj&dNVAmtY/kY%
%mh/+^P[2_Yf=St`T'qj*DeLuL3eg%_[c5Z,A!%s=Wl/G<9A(^<7N@/;!"J0h&.c&O1MI6M"3j0Q!]AMfASg'Xim;dd'K!]EeXaa-
%ae+o13T>5h"&3R'1ofSQ&kDSg?1NA/EJU,XZ/u:2B[F"T,KH+oFt#f3FP`Go1<Ug7GHr!:8TH,'>Fg>(3'<k>5YZB2)4Pf/3&DYG
%"mt6D](:0Mg$OYJ8,OuJ^bGY]Ofrtc,<ap1cbCj&8LPQIU15%88_15sY_IhU,`n,"g7GRo,jQq/,lAW?PL/$q>-=gK,`]1aKUPR]
%Up5,[<No.D/\"J$nSrSUF'>i^+mVj;p8D#K(0WBX(0)kT<9GcYAdq\[ooNm)-?6!LXkIeTkD@==XNa#-=bDb67JN(UGSgUsf0_F5
%I4J+b".aV!r3b7?WSJgZ.tfWGCcBHKYgtpKXjqD+et]$X;S,L\e^cHnY]tt[VV;e'As5LEs(\%FAs6IREQG.g2@6=j1s?cdCm(:T
%enU?S)Wg1^`fPRR?:OMF@5Z0nP&mu6_0mc_;4Yl=-!=EkC6I7Q/M>Rg&s,R:<ia=MSpu3O4k)He^&!og_(#d.m1Qu*n-$C#3fbIa
%-uT$R0\3IPPKWi:&:O]#RL.qL/j]hS>FU2fPGgd(E1JRaAp(I&k8$al$LiDum+a"#7PLi'&,#e4mYW2Yr$G/-(pZpPH0s@\$[TK\
%R=!Nl9/FD*?E]DZ"Uc<&7<EI)`B?eu?J[5'+ZchudTOrUktoG]W\]`bA7+O;m&Fr"`&oq1Q<N+6`T@_D<KAB<A>h#)*8nFCOlsYg
%R`I#E*`^SX-=+(4kp>KOpC,#T%k6?o0/ha)?g;)k?L5U#^qYgFFW:KP$r#!i$he!N`@#5"N>o5b"D`>#"^MS&c#23ReN`"Y4@HGG
%@d>;Eh[[.pi;dC0=5UA07ZVeD*$3?LJ8]P^G9gcRr_6bI<r8`t$&B$=^goCe2JYl[!EZ4^;d;t:r#OeKn?++oU(*]S];-eENlZXp
%fg<^Hf:^$q4-2Egf(ESW^A;T(`FHj3mB*e++k`g]K!m>b,cA%pEg$ALkKNN;&B=uU;3'e*NM/lpilFf-K\=X[5)a4<`^<bN5*62s
%',tp%/QN(s@Mej/RIi2<h$.Qo6pu7ZJ,l6b5c,u.@VBCd9%/[7,XN/Xj.@G$Z6YYH5FY7V*EjQ1!X7QXR:X#F_-'_'+df`.mdbnd
%bX_Y"*gKM4e"R#N3K"U$=.b'a^]QXEipBA@2A>!='a^l/:<j1Y"tL>a9!.bpeIX``'r`Xe?K`bpNC5jm!1TZ*m:/Zk'eW:N\18a,
%`I_J`d55X;6!<>=>p6Eu&bC:$Z">DN1^T1noA\2+gH73t6EpGu[?e[QPqM)b?HY&D$HbIY;k;5*TiK*!O/@+F6!?$R0T[1=675bE
%!S3*Wkb-`8Ofp[Klacf8+'p`Bo_&32d)W>W&K9$iSC"aKQkfRGF'`a$Uno.gC\Z,s/b[UP`C<S(-Ab>:6GSb#@gahT2QC[)bJl=]
%+WDH75GC#d#A%VV9F=GumB[X:;+#Wa`]65(nu+YA:+(/cp:_+FSg?ZsUjAT&^Bn<l,BgR=2T^o0'5M[Ge-7<H@B\3t?tZHH\qg7*
%],j/Z2SZOKN[Zkm6Pf1R2IU9%]RhtBceHCKa.)6;Xs#&l,2]X%7SG1Bf9Ft4\Vq*:;,Y-d$AeZWQo,Oo@hKd%l=13UNs%+-NlgX4
%f8S)OloLUIp^8gBK!tmc0%[Di;psq>A6#FZ,0=r#ribT@O/;S_Vf+i%#`]CtJnl3u\r6)b1?Trd%esnX5j[p&L;&*?EN&'(+O;Y5
%XObsO>Fg=2CeT3[PWDcAhD>\!J?-2sKbd5V#-6YJQ`T7$P%R`;<r$G_&?FZ="qJU)`XZ1CJO[8qdgN!j$]YH;+e!Y&7-"OuD)RK/
%BT4;IN-9RS,&a`=ETe$%9;+]Xe6Nl8/cZLF=ktC_d00$MV,J*Fh@%b&BV#@!+Uj<3T_G'mFii+!,X((pM$g5k:KFQQIDS<WmunMk
%`BJ;1Xb^Rj"Rb1Cpmg$j%A?12n!2e+ptf*'!hZ9@WXkU<L@lE[Va"$$/Xd8T8'XXOA^)Q#lSq\_Zjhh:'$2e!12&r6SX-pfc9g5;
%Ill%UnM3Trii3L)@>>P[Aeb>*YO9YEEt"hHMnr_8%p(SJich@'L>&O5^>>[pqRoUmHb=#ZT&W:GgqU0c?=q..Lm`\2CWQ?O0-:/?
%JiWca]9A<"ETg4:5l`EQ9g2ab3f2OM_=c=MRA_9ARFT\"@bu\]>-%o3;+':fJ"o%,NFnG/#?n@05l[;'Pq;oGVVM8%B5.ZQ_)X?S
%m6'#s1$4<<(;<KW0\/EjKIqBS,E00'RX9E"?Rm@&p\=kdA`Q0>,3`Xp92]Dd"iM'?;BRMg0<*e4`;BbM(l:R8$[SUSC5;'iV![`^
%$Ve_5LcoQT<s%5i&+'j_^RZAbW#^UnG;7t#gcZL[*:^Xo!CuO@#%-g4#@Hq`k8m,GUSd69dP9?Dk$"\n3BAQ*'&H(a1[cnI$2JV*
%SS:g/du7NBic;E4\j_h1XJ)6MhC>u=0l&k1p6rClLiUFPOp)rr'B[Bd2bAX_pPH6"=L]IZBga'2HH``E@P?fbZJE.OQr#SLGjD.r
%e6jC_jhRh2V*dOH/c#_g-Iiu)gXQt#U8]<.0!2uj>s][4P\n#7dbRtd3")ltbj*L6]je*ZZ5iDHKY^5kT/:T6fd2[F_7Sd=a'<1I
%/S'dB]cO.d;&s]L82;*r+\_N!H(<oWL=kX&j^_TB+e>mI[4PpK@=_piVQN2se#4F]l.mgKa"XPU&,&n7?..eihkc2YGC+Folcr5I
%T\K@N\]7bD93V+"27VcjB#13\Pn#c;d@\*R11n6@1TO_'IF!$ZL-n71SQQ#?O6R-a`SO"&_M9G&W=D>WX#@;i("19ImGKP*L,#_j
%O7uiE?'46)h^+4f95ft_L#s_%j?e9]4>5mDj@t"4?4mlLj<4+2W[$XrL")lkMd>4uK\5jB)<T+?&50CB6ZiU=Ec7[^[&1E#'>(mn
%q+M#p_)[HWh0HZbK("RJ8,OuJ7+^0>NJbtTilEY2/pT@#lYJ]/B,N_>A5;'M7?Uf\\Jk5sjLodEH1C4@ieWjeh$f+9&J>2(3Pd+7
%OAhL,;;D94G4f'.C&B^^p110jW/;F]D0J6kACV0mJo_d8](:0M-.s#9*q=T1JLoM&NI8E4*9m8OH#@Vk1Qj<K@P/[XGXQhqJ7sKZ
%6Ph;6kf%[gOUt/797Dk#OB.(JDm&@V1^7C80j7N3TS[C7OO&#f'qE0DeXa^,/]k0:nqc0J%)1RG%DL[HNq@^c4I`u@>n^Oo"3d+k
%I%?6B[408K#QjN,heZJ.OUpG8Ne#+uqr:\d6@/Z3].Jf=T\<[1[G_0CjUt7ncZ3uJ26!K=7]7B`/4I[tN)MluhGGcA18D::B=`hF
%i-HomAmBk"$Mb%/ihVnO?#HH;M]2e+1*l[=((>Er9;Xa`qPiS3G&co2@l+'N\X$tfUUZufop*bOAB5eZmW?O0gZF11OaVFGV!6],
%dEA?1Bp&:cc&(,gq$o6ecE"-j9GlMm;G[(,Q$Yfi@Sf2&D%7`hpkLCgg`=m)HSf0D&39HiG.H,dq1Z1j3.q:p&%uG9-qb!13$,5N
%$,I;a]kWqr=WMa\Un18lj+/oqT,g$s!HD;4J(*KgK.%h]NLM:**VZ$T-&l#g&Ea+9*^^c?@6GUS*!W55W]<_3VBAJ%A?#a2;D$k4
%?0%\Qd<&2+jWkh!N8fH3f*h+`14\ghLHKeL:5HW$mS/PnXR8i@/B$@Y&RoWQbe8]I^51`?ihDs7Sjj;;Cc9X:]k0)Q"n-rG]ZH[;
%)_p#nKWP9lO*#A2M53thq^r,CPBaf,8]s@>^,>kr])jdB9SN8%-_Od+I8Y?_8$'AK(=</&V8Xf/5cf>3Zq-K@R$m\.)Jtmha)O]7
%FS.rd@\^lG98Kh`lT08b</Js+dr!f:@.^!9G6,q&9+aPiKSR8"\^B)d07g1V]fd^\TG-O?HujjE:ZQFSquY-Ys7Q$]J,\Qm++F.J
%dr59cn,MhOq(Ei)qrsGk./O=[#+0I;9pX_Ldj52UHP;-P\#2n<5#7W7c0e>r&7]qDIUrQ:Si=8\h8ofjeII$F>\/gk-?E'0?(c!G
%)W@41[`O@HH(W`ZW$Z0Yn/6C#\Hq2YJhA3I7Kfi&.bNDq'X^r54[Ue)NVD(0eg4+of$*^n-XN<4^^b@;Q0_m*1eS1g7[37*!op#)
%YpX\)BS`(06)`6ZiWOV:c9@6]CTb!:g+'g,?/bKOqMI;o/qq^AI2[U3-.10*E4<N9_.t/c`$Z=:6#O(;Jsikq'+(q"S=$"S4'384
%jkp.J.(H-p+9sd$5WG^Xg,)=6K"26Ue$T&&GV;oe"@9c,kC,hKC!"^&-Ri6@<M`cJ;&3Ji]ui,lY]huZAC#B6?9Mor'X#K9n"h6M
%IAq]<`#kh3,8U1`&3M%2)W#`biI[HJ2XVWkMMGHt$6c"AOJ'Ci+i%#5nH09KWkt2$Jpa1p>96@e8D%j^Xm=(1^->ouH@Ng$p%FWd
%-M2'$`+`e(g@4Y+`;SDA]fU.>Gn7dmH7:'Y0iWjf@_H#-$W*Ltk>rqL&_3`,823Cu3@F'p+K^#hL.=:YU3sb=CJeBhSK?I2W,54G
%E,&fcX5)a"REQK,),?A]X=1YZ7Oh,BaE*pgQHr\8K`GE(effS>87.3B-#V%'I%)/]qj!N$RC$G>]LuN"#hU@THF-IUI(`86YI#G?
%3%od>MI,_`N#RtrNla9sG1[/Sr)p;l]LQ!5QfTTY&h!:!kCjFfJ3mS#Fmo9R5iG)!La?^ahDEP-;B56;O>?:X(fTu<H)/(3l0s\0
%VG-_EKWk"_(Nd?KGH6KWmYbT$nV,oM6rVUpTj1!)DU*XHc?Rj--i)D"kee@#ob`jP89i[>,:r6]*=8j8.G,/soWX#dLQDZLhd[ai
%pBhO_H77,->#/bfOnPeYe.?No7@u%,r,PSFdUX9ZFf;u7c<lm-8!FqIAQO'5b9Aae<EbX129`MLV+M#n[lO68Hj&.74'\PR\(!A\
%Q04X[UaI=Kd@?<@_c94PO.63<Aq3_]M[-ZcGf?)W4K^`>ACmMD*pFVN.]g:hpd9)I.UP2?75U*HNJD/T.>[VJ-*Z!t@qLY<%;%t,
%S%%T:4KD*pNpXb5J=ulJjDZ]nOKp.;cW?Z$R[Ds=,Iut7":BCq%tn7'Xq'DpR<K\.@HB%rWHYEe"&0AVC<R-d#t-gH@48E)4;/uu
%WJcNh.*#TrnW51-8=,9RLd_j*PBgq4Z3B@P[ECNL`$T/L9g>N'q5S._@NjhTOOqcXKRo4\+o\9a"ju8UCe#HMKkQoG830/u@IHTS
%IIDIaasbR=UI7=t,^9;3C_[@M-9OOjI'"E)7RaU#e\mFM,U_fEi2GT9cG::OWL$cS?,$h.`<aPY.=sqXQnF2MO+6*#:L539DZ5e6
%7ST87I&1sVD<3AQ^bmD=d*7FLLmQ(&U?bQa20A1aJ5V^L+9SB(=]33u=KG0f+-He,%Bm/Lrl8LKc"F,*8P2o_H9a\UOhYYB2:o,r
%GB8:a2Jhh%q'gANd\.@ia<nu)QaN2L>K+'Z?chC0B#WX0Y7Yr(!_Xc>*MBF/Lr;lDiYcS8%4p`ARhj[J*f8kFDT5Kh=61hJWVBEg
%1FG#<S`Uai8E`kVfus6s/XFE$,%;17gMdEnqCPUn8O6TR_3bE<B/B`Z4(r4S3Ss3*\MQM;?G$[S<X-]d;Ek'oZ+e#4";)4`K!D'h
%,^:</q=5;79(Hg08YM+++!<*<!@3(k6_Y\5a8k,;gqch$#s\"cPEFl[p^Vpoou5$TqYVr5d!?KbJ_COS*Aelak@:I[M[Vm+lQH]T
%d3K/\SIZq<^OT9U9l`N6E,]9b32b0&8F_g4%n<V2qZO,96U!!\iERp1fAK\9;b;^oRl%j.5\)#:'V&(O:qi&I7h@*LDYQg<^%_\%
%jjYHkZ0m</:f:c\N]Y_D%rr>^q#l!$D_JT#DdOE"Ji:\"OZf3;W66>Uma!f(L5TSq`6CIn!Bg[WQlE_uDa6Ac6HrZJHmg.<U:(O"
%r<6=oItNc;!"?9d:##a!C$+j'YC<5C\.QdcJI#4Bb/WPsBN!"[Rl.A2%cnVk1"nSnZDY"VA6SA:ASsR7UlG;915#haYtfBQKm;:O
%_qH6hM8WKA:6uV[n11Af^>>IjqKRKNki;UJTo\rG6pKOtPZoR<m>KGoUJ.2WLh0]`9%9"8ZH3n%Vne4sj$Q3:TL#=PNR.pW6\C%o
%ABR_h-5cec)Wie$)j&@WGdqOtWWWsXq8Te05\8't4$&-^YkbWlo'+,4$nq,XJq,()8OB';'*Tn2QRo>"/?sVYN$X]k;e2Z#.Sjga
%`U*h\>V]#(?]?mq`<7%c2IVH[Tb*i<_pU98*&:U7&8c7l)U7Q%1/Nqo#pM+G<fP1hE!KkCp$j6A&8qo_\]/S:BL_,0+mR$S03Rk/
%-3sH,<PTU/F:mcO7iAC_IG4Ug3m`4Y@s*W]$X2XEU2ckAQdh,\=Yds:0EWEhdUc6\+Vo(=S\fU&ZX?88UL%bZ#1@\jgPJf=;P7T<
%W[iJYm;9H;_RHRuX5Fu;XR84-CC,8TQ6UjF0G&@'Uqt[[`'M`Dan%H5U\=q+;af06UPi4^)%_**cIWn>Xt/WfOm,.:OZNP>/5*X7
%=Y>'7HW[[-86b1O(J(SG\WBL%,Y`<Uj5t*!+Ng2-]2`_XCt*VHlSWHa:uhW6V26ng-<9R*2I1tf2_"?:l9oR%Nsc-u\SA("E%D$*
%(RYDiXrk/]J/#D&K.nf!<an''K:-iULUnfhg/JN%TGc_E+@BaX0[kuog/\IN/@V_7]30*4CXdMGl*$_W$p>*@XEtW^)f=%l<6/@F
%i9O[[m!:TX2>1$*3Z3BMkSu9h\E*C;5o&Z]X=YG1$Eq^J+,ZV$ibAHpj.'+$@a$/N2m'7-JnA,[](8HGq<=%b#Q,o?^l4aN3O&6`
%ZA=[J9:0RN6E6J.S.m1PqsfL%I]TjaO*N(ZM`AEqmqNhF-5b_e"cVqC3Y^Xs[C.uGBWKI"^SPTfSL.bBX1!\ZNmMUK"4BnEq_nnc
%6-SW>UV13<9;3ErRq0@'@[f&lhm?#pfkGYeZg0*%e!BSS4YW0fFi5"rjWjSXOJQF.eGd6c["C<hJh9M$+=/+(D$D_R[Epqd<SJe@
%C=Y/klJF'N#;N8@O7la\>nQ1Sh^"+nE1;Nsa8;Yu^\<TV2ftAKoanfd'RC/[#ga8fD/`@)@g(l8[]<UUQ<X]"0c\0?+>(o]XNa"2
%l:mL!T0(ikcK[[4Hu+!lWmjW?B"9dT=ke5/f0\q`-qF1^=Wk3I$)8\cP;K#gD%^L1R@0C/#lRW_/T_C<fkNjQQ7QWj)oemo+DAr,
%FiIp.#-pR6U3!QF[Rh(;YROg=m]D(^&?E7gBWl"('iC"d?*`DSD8N6ig`m83hC$SbF->^-bOh!Q1%n*F,,G>n*51F6)SY!SG=WgO
%1kMSYUaAk`P]/$Q@B&4&FUK,4o!]!DDfWq\a](c[C^%;EX5*fU!7MG'Jno%p[aSWfjjsZ-/:<p8njouX(4<ek)!Uf:Bf7!!]tDYb
%#Gt\g*&$`+nqcHS<2lZT`q$oE\-hm,5eS)g'$+*3&BdrZ*!9Jh9kqm1/OQYSX`A2^ZaS=Z5:*nd'KP)qBd-?WHW6,GpZNfACR6f+
%CR9:Y0R@`gLZ(^9q@K.ST?5\<W#MUO"m1i_T=Ep$fj8JFUfUa-ph1&t!aD'[FW"A"/Z)geL!-a$+1">s1u,@f)TU7=Y`]]_ktMiQ
%_8o*8oo0\u>[Sb&*hY&ElsS-M`rXq+RKU9>^6Q=!d`'=T(.=<]J#JAAqTrJ.2N)qY1``m4Hal1O51i/kWI0,JG;U8RpSUCHdWR!+
%:?J$E,#.N$MVJta:5`BQlqYd^_Bg7EgmhIBG>c^t+\#_k/#h2')cUgkX4MEHM4;5):.VRSiGgbF/*/Mu^p2)EXGo1_Z?=B-G.\Zh
%_+G19S:"891E;L9/Fp86Ao45tWP@V<Q7O<WI>_J4O_%U?_NQ).-(cB-A_MdT=uGE['4t:b->.rTZV^jInD/8J58XDFA-cf\?a%>I
%R/jra(K_"@Z_>^0Hh2f;DpO6@_7_jkQ_`G?q&;<2#7_]g2O;FnL[6E2"\k0S3KeW<\N6h&ULl;LP^U1UZ[lpo0:LPD>crWg7F=@=
%/).^p,rj*[n7=u@'rO6f+ce;TS(+1DPr25D+Hdg_fKd*6+C,oVYf;feTLj6-[+_(*=`fX:nH$'L*mpa?-mU(.`$jI;&^<$l[YTJ0
%.XRFQ:>KV)Y0j%aO',oabZ=H&+@hW!Sh?u9r:PGZYNJOIh:X!,h4?9I]0BfRnnHBWCU66@6B'07q[_`p%t\?<.KSN75hl(4W!M^B
%p`*$K4hTDg-&r((Qk;m8pBl'9he4]OP@/eYI9G31"CHe\B'nlsU<Q/%[/ht(YMf^1Cm@QkH.+$H,dAUMEdHBf8[NG'Wb*W0[n71j
%8K(0V6EVNJM:dPQ6pF99l!h#,ELC+]<q/oL$F=[!(E[Qo)#`<hnUCO?GRnNN,U`Y+7XI=b!^*LY<\;*-#[2?.1oQiN=:VE`F2NkL
%BO2<n1[$+H-"76i<W]p^j:MGZC`jo^$A_.OG!2i;,H3%:N6m57?Tq)&:).#qE?8HA4mF7^QgEiUEB>FP(P7(N"UOuAbsW?A$q1*9
%3)E*jk4C-CIH*3m@e]A&qDZs(Kb9)S(oDee0]A=gP/JRGmKMi=\#s&rT6i^u^iu[`hel4*52Mh_R*Au4)"@JQ_q2Map)h?Z*WtWc
%mKImcJiI[<fQd"lJ?k;R`+`:_O)uY]B;A0O"CrDV\p-c+9"KnuH%h(]W"'e,KaBMdLNnh'_CWX2>4k?[H7RV9km_Fo!FDM%%m_ZY
%P;#r]'G`PFRMqb/Wc@G<Wi+cX']Dang]'MAB:Z2\d=117G,?i.CR_p1Gb;_6dPceJ2XJlehh`$Eq`k,VNZWYjE;>:e$h-4=QPtM[
%OkWS&GfN6+YHVATIF#VO:es*_^1S'O&^EQ+kh&0k&lM7*?J%E--CVkK7[V2m3a0F,'/#Pjc+%2"Hp+%QYVK8jO$p\,Jt)*loGtQ\
%a`eJpq<<$$"lU:0Hlne:RLE1Y)ElM^Z,6hCf"a,kTcF5+n-*(<)!J<rHVa,uni2%k^\<tT.*5Xs9nZNoiV,O`7C?:Q"aQ_YAFLr2
%Fe2+O_CAngHXGELO%rdG!eC8K&.$Jc;,Y_FQCD[[0?!g:p-`*rNqIkdYRHuV0#d:MVTm"?l$!F]5=Ct8G+>hj',^/jV24"j9i$rE
%XW8pa(>QB.5h.kM;b#o7V#KkN<61%=3"`Xpc/X(I-P8OJl:W5p\I)_=d#E%siNZU>+7K=!6#\Rus*b`QT#+PRZVY-<U.g43ous@@
%q(t>WITFd#`)dYM$->pbEt)+BlNo\J&QWrS_4_m2o>BPY8H$"No]*$`Ep@f\>`S!:#1bd96AlKN_QE]4AH37M:B(WE:0hZ]>[qR/
%\J*q$b>]?-.m=]SSJ0kfA$QXN;q5/mJI1cqJ]eX6Z$$Lf8C+kJb?V(n45T7GhOpr]4<D=u%k/V]D0E&f<Z/lfbd50Mfe]"Uj_sgk
%2p2&2M8]n$WLW'ChAC9G_(bu(p^HM74A3MpZDAf]FhZq>37tU8/L!:i>&7U2*joe/bIpI)1u6r:X>FNB<j@=m8fM*L%>p`R6k2p#
%cAl&lL<E0s/c%)=c3#Z:ct"/VffDppB2jQm"lPP$6ndA,%d_(0m%HJ^*eW[OpO*fS8!?(__0LC"9lT%IAe]X*cRSZo$&cJ]-J;H_
%]-?=[)\Y?hA!c6MY^(Tn0g$)U-S_h1](hRYPK3sHS9qnhdCAu"`*4Y!FV2#X\70!91uKLmj0)9co3`AZj"%_e?D0(#C,2>#[`n;O
%&GX@$2qV;\F6Pn$Ppr9!D6Itr_o!MRg=TN=+=,Fs(FLl8c&$u_pQ#fgEolP;E^45rGp7F5':^mF%K+)J.!MQXoaB'q7*#_hS-k(3
%mE&1_\\76hot*:/=MVOIJoA+Gjk^(2VmEcU\L0FgGN'Jcs2C-GR\tW)6`u'8^EMr3L0W$(&1f[.\K1A\'bN$t8/F>[,s.7j4cA`p
%3L0Ci(e-3G<S`6r]?d2`.-esELaTo-k691_CPISTR[k!C#_X/YTE)=V)TAZB4PIs^EClAsI[_lt3kn<)faB`1"30+Cc991kAnRd=
%&GFn(<,l1pC(aKaN^2TC]lW^22MQb7A`[?1TVY-SD)CG]3BoKH5$/1Dj/E^n>V\N:KlhhVMQ`uSbX*PUiM+g];>AjT[k`pc1'N9/
%RGJA9q9\_aIScf5<%SHpc[^rUVND%AhE6_dlp.uA+-,P%ibE!qRM-]+UD<db!`-T2Vk8G6meu`Q5C`_4Hb"@qmCOISq1bPLhYm5i
%&+@aX#k2b^q!7g,rmSK/H2l,Js7#Hsmm"Jbq4HMlI'5IET;riRU9kI/rk%pn5!0jTq<"0U5Q1N?qk(WMp\bVPq=?Q&33Db\hnB'Z
%mMBX1Tc`F7msb,VO5JD.rnG2^=)iW_:I"gUn_JsrIjXP'5B<C[gYW;`mLCH-%Usf&T76g$5Q5[Qr/X)AnB2@255a$I]_h]kG<c)4
%1ZHd`Jk[Dobk5rSq[_Tanu&&DrMUc7=@k*SY5TO"s7"&nNUB^err/gf/kGitVs"*Q^OQ%Mqd!ZKZ]`'fj'1=%m^G!`p7G-]o"Vj7
%q;'(UJ)\eLGIUGcs)tQ,0BKX0[@JVQR-Et[DK,nA9CDt3>CI[6?mN89)K*]:Z1C1QnKWKaNrR8Ar;4sFop:fqs$oocq\7P!DbH]@
%cKbXV-KU1#ci55gs$I0/X/;p,mPKjjbr(=i=M.a4K];ej[Wji(nhY+"/b?rBo0X-1_s,C*UGXfoe6YU\J=QEV&Je`9%o;U&2,jaZ
%\5<Ll32dg`b3F_4TGa91O\n(Qi07R]T2tHS*]Q-G-^sP@)M(EOMIh@KMQ@_a(P+DQ&sSFCQ(@JMkB?)8-IG<f@P5e3L_ok::@u7I
%L@@/>9XLsZ$mX`^/]n*69(',G".<1+3dV*af#$%1CC%.$9m3UVjdL%ZG`Bde]Xq.Rq]t_ie;]GD"?rH0aG:038?tlEPY;4@aNo/p
%D,oA@9'To,ObF6@:-s6eYmE48>`*o[95&t\V%a>,TRuOJJ?%Cn^hhVhfdm2k1>7?HlTMd,6gK-Y;V2qt)+a5[,f]1##i83C]@T/l
%rG`t(d4Dq,Ss>e7;f43A-N[9%*(8.]#S0&tK%I]>nA#-90fEcA%Bkq((>g=\/08U48<\pa@/s\Kh(4/ZISK(85_N.SLU4#I33G:.
%a[VI-;YrSs2Ue^7kLZqOX##iOG+l6hZar/Mdmu-qEj"ULfCW8]_/?kZ'="LjV2@AGm*XqO/^Ep,BBtVo;=4lTKdKBa<gsY-lohX8
%[NIZ<"s&>e[4RQc<Y$1(V&RmW@)B6(LSCBj)9B1sd+Q6<h&OCJYa6>P7?ZR+i>"`mA!L?*aAr*i@;mg/9:B^p@^Q:sVmN5o\K@-r
%jdBX2"Z?mKm"ZhubqfE3M?h+P$>_@p93>kTP:PAsi)nP*jQ@+,dIUR-k<t%<H<,77)K!"hjb/Tp4FC`!4*Bu^-&5`c9Y<6,a!LgB
%G"8H*Q[@c)2pLVlncaVT4=ZU=)/mEF/0Bp$0&kF926rb[P>iT=(JtmpNLa%7BFD\N:>Uh>FU#.Q[SYUeZOcB%/qS>gFqs"[<sNBS
%22k\oBtQ)q./oF8MpA"B$1<ceS=Y35YmYRmJN&-RPG*aRHk.mdQhubu.-.DJ#L7ZO;:^S4gr37YLb`ikmetY+'hkXHRbA<ETB!B(
%<Y\K#PoShX*5&6*Z*jh<<Xh$7B5/Aq3/pr)F8XMeF!*l6`g%+C)N9;/kjU>cjTAtjcjdBlPmed5;`f+k&LE!P_&pfG1Gl'\>u>!\
%g+cN-3g!\[+i&U(S-d;`KES:"&L&:gdu&d<XHJP#b$u.s&;`@81<bf_akk@[$DVV#Z,;b5JigPm.-KQME2[RsdcRm[WFE6]MA,/s
%XU."Z69MWROA<aXg+9`<0Pc"Tkk.tr6&m1;QQY:X^I&V?B!Oo@I(N+=4$-.+p5SU-B.#g`7UQ%F%[(ep9\o-c8GY+YTBt#21)kj3
%a"GUQdVS8+pYOD>e8>dX81N*oIjbP[);"6sII?[hXMPRSc0)h&d<%r&$&Gr],2=U7'1kMND3F/8%(kt+aXTI<CFMD'<).+O<-es6
%[$4P+o$-GTL3uJT_*q)keJ8;P;`I`h+NrLI*En?"DWijQ?).%Z%aKZA(o+\6GlQ$R*pJ-&d!DYfft2mVOH>*8b_#$n#$SXB!Jd7U
%C)blcC"B4G\FN8VTH<3FBIJZ$%()H\i96c3D%>P^>-%Cb^Db'=2<=V>-jDNJW#CCV$n82")=&fMY'05rd=)Y>lDPA9`3_PA=HA7]
%_ud>bVQP"fs&W3MO<>jkM#\';/e3aK[,;58rQ1S_OmU-\L,H>X/-M\Wis\,KR&:ZUhC5ubK4pJFjZqd/KBm#G)4\-DHtjR"kZQPI
%FD_dL,8et%L\b"0W[kq-nQVfSLZCVXb.#"D7Aokdr,oHXWHGnmGNiJkrV6?'^KCb:KXL>i?4!PLP<k>T*r#8^EE,&hC)>s9lc9AR
%n8?+?g0R[f^.$%bpoa.r*6(-+7?YY9?IV+EJFi'G,6*C-8;@d(:SM6JZ]bj9pE1oA9.7\b"Weo<>0%\<+A'$lS43RX94n?W`3HAU
%Krd)Q7$lY*_<Zh7^.FH>5*Q:"-M[.g,[LX%c":f/`-oH+4d1*,&s1$0oN^'M4P!h3AT+H%S3/X3@tMTh;O2"D3(\bpft!r)iHdIu
%N#:1ldj4KlEWd,k.ruSHD>Z@?$*^[0'3bKaG(>Ikmh^4S+so\n#H6j<,^/5r1Y?GkHfU0@8S+tG:UNr>6hH;X\%1e^J7gh'Zof>`
%C1s+HLfq%R>l[t^ecWl)-Z"^1P9Ag'OX*jfic.<VRP:BSURWA!/9[>$gj+[*=J>t<&n5)\VN+W@Kt>6`;D@6.[1Z=DFWR0lZ'WSu
%]%e5Lhf+G=F]K)pO>nD0"S;u;Q5.]kdBa^7'JHiAjWtaWi#L[3;k9*J'1j<9%[dX%i09)k)*@"=6`O)8,9uc@(A?4091Ht7\:fNH
%>S,6=FF<33OhF&*1".VP.2atX>W-Y@1=VWKpsnkEM[)Z<>a,WmcjIEU[!rt0)?PLJE*>IYk_OOQ-"<=?SYNkcKLk--R;'0(9,ebI
%6X7PS=b*"#oK_KQ&^QgI@l=BM[dXnOF2jgfp2q6obMU0[J%RqSe.WW,\G'XWkGV3hh9@+MMsOc$A&165B/nWll!J%cAgV`rS<(7&
%##/2A,P7RT99dTs-As.Q&>"Eb=E>WG/8)e(&<bJ=0Y^UE1mq8RO,g+h2W6hfns(T3jCTNHWX^A\jZ#=b97Tm/JP<BSFZB%T.@B[F
%I`ub7j^84V&#_1j:(m+(BW1JRKJ.QfOQS1reE`3#E(oE`Y>"'q`ht,h72r*+.E08WR3`29Ra4bG/,/<Al?\!`hd5=7nLGA8IJo%7
%:1*HCo\]T*2+sLSI`5d:f=T3H8`07Y4MKZZo()JAU=WrMS',-PhHfna[-a]N"gYo<A_CoQJ,+=j!8MnIb;S:lY9C4==!hNGN[<oQ
%['Wq<kGsj_[:<qb+>FRWH&HiRB'9bs1Nr9i@[Co4E'-3DL(IH2'c%[P@p7m>\iX>g)!EB5Gu5,[dt4<G!M3igZ]512#^@pe:3_?=
%U*R-="D<8&Hl(0&K)*5/O]Ygu=AnC]*9E(n^tQCWgM+%#7_Em^7TrXFA9JOQ&)*XdDU4j<>=&E]7';VuDo^P"ct/6h=nRaq\'u4i
%qV7M7G8pT*,en>4^7H5#qf;k]^HF[:li$WFe,(qSYP75Df8e[rVoUL*jm!)Mk4u./c5)tAM)oIR1$/g>:YsA3+BR=8>`i-6dsO(f
%7H\QY[C_j*^i)Os*[V4af2fh`9W'>trB"t)eM0er.=3k?=T[6ob&5E8p:)ZFb@?Q!70k_6hjQRB&__4_qDgnD\U/,"1NYp]QeX^b
%(=Q#p`QMrr^-=@Ep%HmC8)0[U1qZ%9pj.FA5'M'jB7@!bcqD^"l\5Q)[^`WjL"7OAJ:`/u,ED`4=ne;Z"Ymu#*33YENULccEAgJ(
%*NEGLK4IWqF\inOjacOFc>NmaF:.R^d:N_15X@&_fdOeY(Jkj4\/[dXZsmpY!\mepX@Zgn8eJ1]B!E81ccK2(#FL+7_h7Nh8GO/m
%RkI'Z1Z6s-27Y64Jo&WR?)-pW!-c`\/Hap@";69Oj$4Ij4W923'Vu,4gCY>,2X$M7FO)tu??Nj)ZhbQ=E3WhX0nq7P:"GEV]#u'q
%E;T"<Vj/8,!?q/>"<6_\PDFgpb9m)Y(8KY`R`e"Z3''1D'4cjif-Hosd5KZ=*sBmq>l[lmNX`Dc`UQ4Xs#<sHpc&J*+2j1LNgj9m
%@W\/D1Qu^08.*c):6V7$3tW7LC3DjgJPF1KCf'UuD+q!-)m`QXp0Gpt#,2=N4YW4Hh%&g][$TAXQUCkg:DV>t2[P*uJpl'TeSPu_
%*Z)!/g86cq6f]^Y)BpAH=;qFK=1?8sq#Qn!IBuboDc-tC`*"q7TgGEJmMQa#]Kg=YC`nfdo*1^SfRP2,(hlgYSc)b&a7/Da3X9(r
%/K4-nQc92SA/-,Ono8o=[,TP^`fY2mX$kKb]tG6>Nr/m:nJZK\#.t`9]Y17f-Ltg%GtiuH`TC]=(YG>i1qc*s(si2G?n9m%'`E>n
%>4*u<oGDM#?Qq9=QQrlAo,@%1\AjeBF;EOpKB)F:;5:G<n/gPEjn*.]pfu3d!O=#Xd"#K$K/1jDUDF"qb;'EPE\IYoF0E#1")5+<
%XIptRc\3`FRmU^:KR$hI%S1dIl/!u#`\8l(O7d66>a+6)h^"(5o.F2,0XjUjfbO3OF,q8A"r5o^Ge*8s'XXg!(Fq8AYI[WNk\Gp'
%fE5UtK:GfcE>!=sgHsI.(8sSX<=O8A2@\bAk>oDZKN[&DW0bs*Os3Eo/ktj./lb;>hP1J4h58CZQEhAo?>[U$lbF$8c6_`kMSqjk
%CC?9(H-c*K&tBHT=s925):rip:bX&[FZi^5+=lan$<=a(-W?RGmI7W_(#j.E#A6=YN)ADV][u02MC_9q/n#m-p.6LWEgJc\HCm<h
%)(9c!P^8L;$e5jL"];Fn-=-!'?6k3/#H'\g"VE`)p-Ws11,@1K3a,J<TSZt1MgVCSX5Fo9XR7q%CU&(PQ6UjF0_fsd1b(=@M'F[h
%]B&csfhL.SX(H4RORbCWfg,)SfJ>25=P+qVj+`+A#Uo>EFUPHB_-JbPV65F39p]5jX1AIK]4sm2W9\A:eRrQtcJd8UK5Gft.`o&M
%ZeubAXR84-:J%iJ=cW8__EaRVP=?VMGDRQ-CmR8R3@Xcc'ZC?*&^d=6@]Y5.n*kr^Y_C/=ZX?=[V'I2i<]N4'c)%DI/SL-[TOY4,
%[QtMSWZdtuhC:JiZ"c@[p/?"u9U$cNQRqoXRkXV^Rku>.G)<QC='mDN$a/3(ar9cd_+.c!,u`&,Q),_*8*!d8:.'Z@$B#0k,_ZRA
%_I<CG54tU`]TA0:e-Ls;Z&t!T(%uY[>91K7,)68Pa1R\LXF\AM*m\/-S_5:"%(iN02Yfq0FdqS@WjI>='I>b&\L`tu#`?I6Ls7XC
%E:".EEJj6_\D`:F/MJ;m>3G9DC9kWid%KS?1)Q`<'eSX!iq%hU8P[fU_Lb0G5>\'\2W/LN@ssR&2%RWXBasJECM+St-@B_5PubqY
%l.44DFCPO;WA#5;.*4Zt"e.c^N=-_.^Zq`gg*stmZre;,<3Ab^BUhqn.e^m;C9Dk#Klk*I6V.nkVVhn=0aY-jPn&W5$_/ESRg"Wa
%nfGo\-%Um,["21UlN/HsW&I;Q6`k<H3Z<!L6AWLb&,cG)GmiAnfZ*s;TDlTl>K2`^^3$SoV9'qD#cbg!2(*BY$AbqhMg<7sre,tf
%XGK8<2WMcs".C5%ZMjuj\&sl9^fQ?Q7&k)#V=-+F_YE@DnOliTM1%uV5kOS*'sAqRM$,!Mc<?%FQ]P!>bhZntl:mib5sg=-`qKoc
%ikb((JT4hEU.[N?Vhd#1N@,/5cI?2')3a9<:':4NOOGFW1\[,q<J(bDN'2PTrb6#g/TT+i0'N-54rH\uV<gMbmo?.rL59i?J'b&k
%fVj[n]&t0/n138;k^mMC"`XcY,>pUGRT;e(2V2L0R#kKR">6dr;&.FZ5u][U^C/OL+J'O(E)GAC"&bU.OSJ*A3$h@$+k`X?Lgsa^
%e/QI?aJ*XLaSdQopl9[=Ca?aJ@P*J;7Ug-e*^BM+fao23lPR[!&Dt2Uq@\Vba*/Jb[Q_FmLk0t?@'i9/M!mQ?5*^mFB4La*!^3C(
%`_$j=nb=5m4L%).(pF_aKt*09%Qqi[:6SGAlX-V66sF+ndgH+<P(p"[[$Qa<S(I%T\Bq.V]0l?d4%)MEg83!D52<f-9'/*&]*@YM
%&9hhn5`qR&.!`ls:17fe%Ng2i!XZ46MV+L7P&Qs6lq&@I_g/.?Qjo#.P".46_O`Beo7au$!F:Z5\7!#5=M60(DC(<Rn\8D=E]Fr&
%SH8_amU4ILfV-KsDU3tl1\'a1P#<)@KB'NkT!j"PK#NI`Z&8Nh=lB8.o5H#eNcKnTEGjmUfCM#8*Y[Kc*#4`diOCMpqXk/CNB_c5
%?ZZllfMIIu]NKmk/m`AQ5IeEm+_0[:ZNt!RJIGM4k@_?C,!<@*25gFo9UPYmN=%KA_Jrkip%>1GeM"Q"LMA+i+JU>5!U<VO##2>m
%YO!o(luEMF9R)RGg\NVR`(!<MJcN3VKB5p]"+B7_<aoK:7JlFXP6lNq0;SD@[goZFnl[eNADh#Jb8)&($ko1iJt+'iU@Z_UlNH]_
%.aX+i7XH@%SYR;h@m_nb2%C9K5*.)=co>j"oF'Lo$!Hqoqb$<sL1?(&qh'G6URZ=D&He,>),HD9TLmmlc:NQ?Qt!=!Fe7(:G')>`
%JSf1p1SC^`nclPRII<3QG)&:ILb0*fT\8K?8=t;_dB>M)jPI5=h1n<(GoVZGi;ZhGH>u`$#361;O$=\=OKfm;b.D+[VS0IY@i/5]
%(EI#%"dB-6O'bVp&j5tO#:Rln"4MPONdj;rA$@@LcB_IjR&WfB_H@iL=fi4Z17.*3qo;qWCf7'ed9^+c?5#aFEfVd(WV-XNe&+(X
%`Y.&Oc98SFSZZU3^J3..Wfl-O-A[KWs7(WV3]<)*!!5Y^W/?hf=9f[@E?)N"5eLUChiGJ,B0iF5[S1fO)XZf*X!hf]Ok^4_3@=FI
%m*Y-q8Ja#sL%&eG!(h/d(^8M>fIJQ7Vi0M?ZKNT7%esnPJ5Q"h,?rA=D6Q.rWH4+j]6Vj>*ds=G<&u5m%^qI[,)]\D@AFa*rK?UQ
%M'<spZoFWQ`qKVGkKYB3*:p[<jic27lW`(,O9&N?VLF9'3J8"%--q1!D]U3'l_ptN2_L?8G-PV)hHOUt1X`nUBSURKn#,70R4KP;
%FpWf)pIPJdg*_nq'V"0oa.;076+q%Z.3U?93(m.ZdQhab$GY#/VL8:blj9<DW%Skla3fr<'J%m's!"")lsURB+8H!Z(#g7F;X;5F
%<=31_Oa&"T3Wj*.r9Zg6Q8<]X=^=:COF3G1!V'T,G&S1$_\gppa*Z(&=(F>NG6rmBHCm%hHCm1\q*')lZ"GgaB.9ga[hpRkh=J)2
%BTHf4?T>:]X6G_7r8*TtY%/t=\DSXs@s7E`C/KX[E1No#MYb6<ATC"KcjDLg'a-T+[U;MUD]/5Hc9U)9IlgNQ2hX'&We9N8U"XYp
%V#724>Qs:EAp*;,?M!=p=cW8__LTPt8V=5@M'Mr/9:fAc=ejs%f*KYZNrB58?6>7&24b;//eJD_nMFBFNccQ`l=W9l%#A$o#M2oc
%"l1+(LqP8WLpj91,/k*S,=6q)WWLBX>HhrSLd)o.S)qkm7W#&SIc`c"aDnkk\4I5ce0[cJ/@7t_I(W+<H\-8m,+nEcDM_r%"jXq.
%gnWrQR1r4H',[SNPFGH8+L?GDGb0en0jK`]f!Zt^S$`[4qDSeNToJ>4UV5`e/".I9gJe2<DU[^gj*)psU3Vq\]57-d*Zkq-7=*2_
%U.LBr##0>@_obBCTV*naM!=d>>s@Ca&3a5A/S=@)Ek"7(dFMnPD>%*c^'2KhAC%d3R+9#Z"n@RQZNGK=pKm7D/@Pg<CHIUNOu4nL
%El;mZ"_X0M_W]85*bj]kH'^MbGdA<N2[q5f@i9BI(n%hnAnoa?LH!JCr4lI7,A]`Q"]IiHWPaB+aDf]skAXLFP:3J;b?Cs!X5Fu;
%XR84-CT2MHQ6UjF0_5(N9,`2k:E9"ST02k8b;bKrh?eth7&f^-57NKc/%eiCSF.$%'SL!IYdM=_@Gup\a*9.*.o`h/YM'b&"lDXd
%4JIt+lL5o0S/!RW;6)G=hCN:D0kre2p0-rk&`ni+,R[#l5%.E,mZ@\qmh9?_8V3:],\T<]]nMIIB226@WFAo;i@Et+*6ssM%Z@ZK
%?n4$pQ$NfYA"C#%Js^[tfP:+tQ!6VCQ(>p@/b?,9El;l/"WqZH7HNVP@F4R'Btftp%DN'X[MnlOL2q'=5`^^hJPT(UYq7q/q[qKd
%CEaP9:SNq7iTDJPR^6Cu"7c!ai9C^rc17bGF<E*j<EF#keNiV=e*MVWE3&r,"kP/7Ff3Vn$a0r,*9"M/Oo+E<]&;Usb"0Q3Bs[&E
%"/_&a>XfK1)/p!CA')]!M39)M6H9>6U*\<9pP4>+#9"*$@A(S>$_0Ri[7u7SAh@)driLcn'W\gcd=+]4SS3%smnuSJQ8[tO+7E)s
%Ut6r12S&+2g_/YGPL[@B_(,BC&T)9sT&Q6$SR**ikN@P023>O]FGVD%$f\`GV.cncOLE?i/eh/R;gu%&H2&V;6b<]qQFo7<$a*os
%lH\G'^6H5Rb7VK^(jX*Q,n7TF-OtI::S)ogM&Z7/rqb*!s*5tt6RiT1P*)\)^uH'd"$Ne6ETs!IX!Ja%HSgp.%V<"6h\:M"?4JCg
%AVUtlT1Xdj16OJ9Uo,h](n9$PMs'O\IHpt*:pDO'HC*^<7U=YS8f++TN6&e@S6$CKb&U[@_U6D9_-ElW6r>?UhEk,8.2"2uOMD15
%eK"ka?>+6PA^iSc5"i%\`4A6.F?,R24?-=+Mh3QCNf\+j;i8m>eS:h:GdFgd.R1]'4f,Z[fSCi,-rMWDRV4Qo_$)W81I/%HT4&5"
%GcdbKIh#0JB."S]l***#<.eeXbKpP4$6s=aY*+WoL.q0-,?sleYu\TXbelA&lXnTW@%:%Ldudr%ZBTKQ>"L6\01IbaRFGTC,9CrH
%<G%dX2R)KVpeF.%^``n:]@!D;`-mcjJLPtk3c]5\/]6F5LtQ"r\Zn4t&"-.K=s+aT%;8Iq;d@_)P.Fn]nhq2<KHXWGVnhRH9=i@R
%:]/-4'tumaQ>07cHBu@ooII`4gcujN;"?AEP\(%&"q6@g&Xs4B%l)Rkk!u,)QX,D&d_JFPg<)%(oPJ"IlR0./nuuN;nk57/1)5A;
%)Nu1!Mm"OW8`_a+lS^KreB,O/P8\3dK`8E=d%e\um%0cpW/A[r`5=;oj<7i1eThAZ1oFBA$(dU)Pp,j`@^M=i"H+PW<&A_F=ZmVh
%*+U%dQ'!K81+Xp*kcB8!(3LEQB7YJ+?+4ltT%)r8#.`?E622s4K>)d<F3rP9lp2`^1'hQua!/:o_eYWm^><H8q0%s!DC+0K2Yj5.
%^@2Mho.\UG52[!fNC0BKFgkjJ./\]LS(Ja(FTfgH?n)C9K\a9qW<N^Md+3JI\Nop2+=i0^>(^@+KDT+-SBR3G?TaHRR)Mj5WBk&$
%W>I@*4N<8*("cJI`sTYe':mm^[2]@NPiutG`nWS&P>p*EW)U8QjiK*UYN2;6@U,aV'g<kQ(J3tD0gnDW?AKWf"=HnTLF8([VF%gL
%M6Ac&l^>QZfq/XCNW%Ol[Q!A:(@UCEd)Xm^JoA,2jk^?O%[+"p%a\4A.NE">^?*!;1ZAGu,5t'-qEX11,`X-r=S2UqCG*?kbn!J$
%`oA#%16B8&?ZD'mW^."mdsCT*$B'\/ZhV$F6res9bQNW3HH7s5KO8:j(Z?T#R&Rpp1b07AFlkftb9_+!"Q1pX"5*Q`KE.4KO;*f?
%0-ga:h'^6+hCDr&qI;J1,PO$hC4&.:UsE\8q83dRaI1b<[#rZV:[IDl6>BAE+O>'.3.e)i7"B=u`F=:$Oice5_EtUWW,@3^diT'-
%JIc[18JO(r,Kpi>K)<,I/8C!hY<,d=8JiC=+IFi78XppeE5T_FWl;j^IR0)P;95XC,XI/]K$_tUmNXY2Y.294Xpe7TJj:L3G).m:
%Cs0(i&L]MJl!McOb.UKpMI]'1QKneWenn[unLq/fD522T/!;Z8oF@maMlrO(=D3`FJ<M=9@cBDfbbQ6T-E`Pu`!pW!D#?EY_XQEL
%YqnIJn!$mYHb^*J*q>_iMiTN9(H^Y0pYsp8r]S&@3>d?dRtpP(4r<8F>s8I8[lG>CG+4i[J?[5AU>,&*o0#+;AhGUd1$q79G,?Kk
%#+^Vs0.V'bL5QF'^4,&%E>cm$K3[7'OXkJGZ%91pL!PFrPG7En.%-fDME&tgKd)IhAW8>W[&4#!e@<j*ZUn'L<[3_[iVeu)c%)Ar
%4Wc(j7$6+fi\Sj*1EK\gD8\]n)jNdJNh1_[U19"[O\(?b*ImJ=kk?H3n97*Eo?DLJT7;.\iu^Lu2\+f^^]!,pn,N2Zn,DGI2rFPN
%]-"ffnG_U#HM?sC?N$Iq8u2J"huE\fp[::.*UE[dS$tW\r8[[H^O,_R%tFEH2r?Tsj1!pZs7#FmC?;-toAOmXrT2)gkn!g]?dXim
%55_=NIfB-1_l#__p5U6*:\=&CAEa'fbs@$=6&Z?7e*m>,a'VSqs7+,OIehsYL]@4;GMiGum`/[X7Qaj>r&Bjaf;&015CELST6=uD
%q@U$5,=K@jp&FO\LHkcPo\Mh2rpP@5l%5WOIX;!#s8.R9^YbmL2CJ=t'>DG5mX@6mC]F4;$NJ;]TAP(po-aN"HACg1r9pK0*QENA
%V^&43'hN^?[2-[ObnFa)7ZM%J>GGP3bftH4IGO7aOU;Lg4u-LoC@9Pi:?("g"!tKKI&jl0TTPF.l%Qf>?"AY'2?GB/gh*\6$q*O-
%O;gSlDI!4fg+:1e^-0+BN%Q/Y&(Xip,AY5YP^30%>Q*OP((`N'*mZ,-\Z_O?JNYbYDOAHda8(5l3(EW3!*3W]/@+5k'cC8VP4u%$
%7GVtuHBu28RY&!P8[5<7lu,j9+Dk.T0`uPD/O5P#?)S$X=_t\PHIcq?3]IN$fp18dK71SR$$<0Y@X]G^6-#X[cF"oZEetYQ+%V'E
%=mYKU_%XYg\p?6.=k=ScCt-mGG&EU%,8dhZL\fGc,uQ$$-k5;H7=9k_%[gH3Z.+(2,C<#!rqPO=D2DB27@dtL=Rkp3MBcnH"a*(E
%/^6*9E&;RNU<H.8NS5.)RcSH(atY:@PGsS8LlA=6fmu9/Q,=HZ/6<9+[@Kg7I;6D=aoT7M(-T!@&dD]]P=A<T]>V7(">MOqY]YV%
%"BHQaq7rs]F+,!3OnlkaRYP$?*'`LdK"*;,8TobPa/Z"T%1@ll"Wg?Vm4;Cr4[0!<^.!+bHNWM:6P%'8644u/2'6(9FU$9;TB3%P
%;:j]MoY=F]5c!UpBm2hgqG*_uP"3>GN*4t^]U+S&8X:TMQS<IM^IoJjCtp=s4r\=$k8nCk#:7(mE7:h-0UG)GOSa-ASqQ@\#P%t8
%FbBqcQE[nW4?NaNRt1ud/Td"r<B"VIS$f?*]!oi,6*/d8UV13?9;3ErRq0@Uqh0OQg*R8thC$T3`qlE4=QC@EPm?/&BTc'4o!\Jr
%ZhH(8QL)\\i*V>#!,XL0pLBcKMdH$b[KTC(ct_M$'MtRP5kF;she,F,r4#hj3?E1j?%<]5l\$RTU`#.]UX:,_GA(g;+830q.(m]a
%Y,NE[,($d`G.0b<n80SGX5]W5Nqr,>@GD/epFMlnC1tt]h4=)L(491o3Po,L$q/]qd\tg28K<,+T0+dsVb]eO+Ufm_8&;[.'BPhC
%9,.ur8XR3/%<(3".^s_;LOf&Fltq@`D].cWG'CE/Z?NcdXZaARDBlE44(3Ifpo]EnKYL%nI!hP?.Q6aX7\7Nd''ClWSO5^4Y[2]Y
%:\54Z>%)qigduN48\;M19K,4eZom7LIE4Qj.#n5QO@<jRTt:bs@6`i3Glj+b4,EiAHZNK`f:-1r86J[M[i939<d0VW??=g(9oe.5
%WIh<ldm`,dmnuV7m3Z[VA$kX;6o0PH(H-)@J.pgt([fd)<T#-mVO"L>C5?M7;R?o!qiL4$G%X(0XUK1.\pIWqfu%"%g@JMX%2Q:^
%'=QM*irr/;i)cm%06K5<+tnn!.3fM@8Xm>.23"`1\[%Mt&=>sPO"*Zs&+P'[L=4Qj$@Sh]_S@Wm4kD!lB9Att,S";CjlXf`]9G(N
%&sn,'>a3Gj!QM#k5d7[t9fb%Oj"`dBF7s?Ok]DK4)QYFhDru`I:?I[0iiNhNY>#mUBJgMr>2<!u"jYi9Q683W,&0!14$%l/0?#eg
%_n;YYYL>LuKJ[m3dQ(Z5*:V]>f8jiJ*WA:tl&LP]gQ]IK`\/!#^IENrkqPeAbSoeU<rmT99$2;hpnfYi$0EE3e0;6NR76&C?5tD9
%#quW_+.=LsM+)[CE=!26O`G2K!A^Ch+tFPV"[HNp\D/)@+>`DV/;o[`!@<;"r[7NhSJ5<_jM)hSY8I9YMr_5^DK,S4blPRTFoD.`
%h;L8@TCOrsDU\TJ*5>n[Q\g4.qp,CZrQARIa6SG3;@SV@:C+0Pi("kmRY:/i<2CVA8)Ojd%C:X_g$*R<:*$`2WPnSV#4r`\U:+OT
%Dj?Y`Y&%O$kkJ2T9TXS6fC%iY?W3aj]p8YuK:g0]inFt1W^AuD-s<\NMW1\s4AW\9""bPHYbWXg=]!ObQ`V-,'ZOVOF\5!6d.(N,
%_Q:^^T6r+$Zl5$_f@eLk@F`GF`Pc3P$/:!4E<dGIL-tWO\ELB4]--SVY;n+@/$T3timH3,;/`Ni&EnT-LDIb.8T?pB-Ag2T5HriV
%:<?DPDO2"T#6`f^kU!RX#us*68RP'H&&@*sjnO@14L.8<\$:K@$DWRIQ7!>Z#[M;\OU6\FlK"8XhG-3+[qK9F>"T&C0/Z&'PYc5,
%QnjGs.4'Wn#uPHqPjrJP`8X1;-RoEgQZE^oNZRR=lBK:8@[*[\%bR6F3Jdk3On,!b9g\dCYWE7%4RK!'g<@3I5UK)"&^"qX"NfJ8
%k'SOI.[HRrn7@F#-j>-h$\'jX)8`UjRc-i<+hT<^O3B2m>kga$3])^peaX_G.a#@-9m],(lEWq!V6*W9RfA-?N/=-Tr2Yl1+n7UY
%iRCe21g2[hNR5ILE-*]N,W+*0PKChKonX?V_%m(p7!&>XNK0Z'9EUhbYLj1c_,&\F@L8[[]9n#>2)j)9OgB%D!@dFP&p-3g''l^F
%X16pXV`"XH<:0k?EBH8i"bgH[ZffPp%Pmo8WN=e&JR%UONh:%;CS^osRFjAW],B1qENcl=H'\,-%9`(V.GIpJU:.LcEKOM<$a7eM
%+o-sF#;"0a5"4Y\mSHk+7]AOBhX-2*b#"3(?FSfgb/_>FUpN#sNENu2*o^g_rZ)pj@Z6GME)SnXKUd)C[/?!.@=E^s4Wi2gH*i3*
%GkDIt'OdVb=-Z>59[ptkC`X\g#J,/!T`1/5Zl]Fo0u#9e"F/oHHp;MQn7"pden,nj=g/m'<fn%NiCNR;@7L"nWc2:*F&b!]H91)@
%o'D$!dq>S#3SJ7;Z\E#;BBr@"gOnLnA><^"*4U^UBc$Bk4H@>'>)%e-.LT,hbC$pqA\Rai5@_EolO81^RmpXf>s7bt=EIMKYZt&S
%ckC-JZ!9"_+]P8@L*q/^".Pn&q#cOI?"5bMcf-gN5)\+UBR`uaWP'tI`T1fY#@[]X_\7d-g:O.aL$hM;'mf$X,RAoMlP\23+coj6
%8Jc<<@oFP5C,$b.LM`Cq+me7WE'aKZ%_UPeBD<Rp8bK(:Iu/"11TskJ*8(tl=WWBD;]i"U[)+0X*fPFJA6c5^+u@"T]o.c9VOANu
%j$>b$301J-nt8Y=rFfGPZrT[i&r]X`dks%C9lA;u9-9%I97"cpj(s+\I)jKlhMS6s.QLH4^Hdk?E^^:XX%7umo`!DqcOCcdPZf@t
%p]_4%#L=4U])a5i"ZkqYK?>\H8ogT7igFggf(2Q2b#rkJ_Do2Gdhi2EVt.Xc2P'C*"f2af(MWi:21E/tiIXoQnWQ`/LBYsps)*Aq
%\'W+I_[mrNlYC"9!R$VHku3GW,3mO'40<.RoL$)0kk&t%V4++!bXC>n:4S)/%XZIjl-PRIJN7t?Q<+g_+^U0Sain;&b*;Ve8Bf5P
%On'tWM8&42=6;o]9:!>eY6>jP>O]fm`Z]T!auC4+dM^s!V)2#_9C#e55EAn/3X\eVFD_nmnd_]ANf6/;9)$(8]f#4imq&Aq:U'*Q
%5Rf+dUiCbl%qPl85[r4EHMDS5HPFiR0]`X)euWQPO)a>96#Mo"1EGDk?k6lNk\ZJ!a4Y&9[heh+cYa:"WSr)637r*o,(%SXdB:sb
%llCJQ]YX/+CbA.sQ6;H$YE4*`)HF1rS=k>5\P<EMA5*cm/>E!65P0)mm'H-6DVU2IEg*PX[Tlm\d8b'<$U?@Y/1ZGs@a2U7S]=^:
%ZrKA<Q7fSlN*H(M(lMaCFj?buc.H^2%1YD0>d;l.3q2NJHEB_^#,L9W(i:[CQjd3:l;"N0Alsb7Li0BE>Ko&9X032BQZDGU-:dj3
%<5I2\klT7PQSP;ihk\LifA/eGP#$EUEn7de8']mdGcjF5ig"*fZ'GJ4-AX2S]5RG!L)tWOo:`W&15oq?*p#4H`m='L;6:n[<=loN
%o3:T?'!&JT[b%U+7?f%p7C(k3qh.h\^.B5jI@E4"n`J/fatSZ)q/+-54\L%*Kd(9d("*fifJe(_BJ;He1cRR/"8WS`8b]b9)TMNF
%Wjb?>)l2NZ[i66Iq9aA@K<g6L\-c,?RhK$9/TTS$$/]N1]->E1r[M@GomP90f6<&r1VZSSf@]JP)=.!!c1_jCj+@asd!9G8mUB1'
%LWctD+&6I(ge#U0)@l_R80WW<SH0TOBV=tHf\OfIAIiQOk<6N3bht2P3[9!nQ'X<f_I',HY3YiHK!4W@#4oQ'S,\bO1M32!IcS]^
%S]?IT'f,=4Rtlo)"*6RLa(@Q+=,s[;PO6VF/7WS]4>M(uo3=#FR`!fPD`0FCbhgXt?F/c/;3(-IaTCV99c3!XH_eKjmh=jl:M11e
%=W\.:%@edMVC5U8kHX#-SEA8;d0qr6GnAgAEV[q9h@.IFbm10e(8e]hUmQ/HdCeX$gKDIjZP0@jCj&++"8G<JJ5,GF7D?K/(7FnK
%_V@>;5@m=I;gS+?gtkQCJ3^()>2?Bk";=8Df$b2e*eIL@>4\3EW$;RS*?U`g9Ya`F6/IARp)?4Jn1p_t+_@R[Neet=ho-OI6H?Bc
%_V>Im3&esU'ZUVlQ+9FWCh,UU0j,&m<kET;>A1jb.&W4@X`>S[!-#CO%u$+[laqDlXCfO5e=#lHp15@YbRIjA)kDs-CHJ2n4Xq/t
%mmgFsd)FC"V]m?`lO"(lmXRU/<0&DhI3U05eE<8lU^NhMeMrnTZPaV11dTqhGM]_c\Y-)q"d^L`&3UAi2XK-ONHGg_aE8h=;JD3H
%paQD[V2;mFMn<%K)"SEQ=:faA5p*Dl6.4-KL(u<sD0At`jC='g>dm`rXQd:>Al5T9ie\4;S9b+f!.;13'Rk+ELnXV#p;".=)[,[-
%>=@tk[n._0mVW\`1:b"o0^GdAJmRna(7EY-m35oph(Un`bq1/&E-KbZ:Z'kaY8pj+H)KT8rq"1N?h!F]Wag".j)!f`2\*X.1t9=t
%j3/6BjGJ9F"5HbL_L$XIqJh$05tW"VV2o]PFXbBcmML3"(cUgUh#6ffP70RU%@6OIC*+LmnSLs:n5Z+&]&<YGOBl3+pJ9-Ym*J_p
%Zfu4\Q'Gg.A^%-5:YOH!P)Y'g9"g%8pdHbEJa%_%i9;:`Q5=(M1E_%@?I7fEg\@l2D;g4MOB2`AW7DQjot`f4)SDc5GcSFa._jmI
%>RO7In6d6.=6:8b9b=ma93mu?D%A_e;dkpnXLO9s0%Y=`01.ooJAeu3:F$4g+*&AS[q_Y?W9?6th;)HkL'"4VJQ#^]@>O\%PirpN
%q3V9:TE+qE&J1%UY`.XaL;u!<q#?E&+*ahCjfO9=mq-`F4F!2tT^hAYM]Y>!WZ[3P'A2Fg83)I\n1:HM4K-;t&Sk0X8B#Y!F4mX&
%h0U*!_+;+WKp#F^@Vr]F)NaJ\4[SDG8eA\iVMD3+IZ87N:Y:CXU'>b.ogA7f&b-H\$:WrBppIO5^M_>Vm_)B(.O$ZZX&cb1^9nr#
%P]Na3iIIk;h8`lik?,f1H0S%Tn_^m<PP!CmeWa4NA13jW_]*B^;]9H-)M><CR^[<-0DtpfNW9aU/L:[c2#NPB#LK42L9:]Y%Cqe+
%A+.B_If.tSm-O+^bnC3Y$*G+PhrfpfnU8]u]O0b0d,66pN)/p6a8#EC*&>:Ca!37:!mr>\)VSDm`-+M#WQa6YA:*\>[SP"$IO(_$
%4kc.F9T4UK.i%Ie((0U;M)h(9fLl.Rg?PXHF;$f5QV7&i%k_`nD=?Gr="OS&#WiHK-mc:NC5B6qiiBf)90iYRm'$dqAdm@]+,X'U
%YPQ,qN:,6HjdIZLhl"Zmq@f)2?f.aj2W0#K]Yp,XSb1$"T9g#K9#T,:G7ATVK#(B_O/'H5/Yceale)2Vk`SuiRNO)7E$T;/?,2N\
%D/UAhKCWDU5Uc<>&)Aj0*C!CQL;`:2W`3&f+FMqJmtttk:d@3P</3LXqMU!dj`I,\`@m$^TeDTE9Qlc,31K?"('=LWEI[,ur$lQc
%Ci7_Ns1Vl)hQ0n7Gs1Jq]PFoB",/rZ,%#>)Q:AVJQA`q,[Z8O-1a%\0EU\3Zl;tk3dq`X*]+(4ho%OV-q\/BW]/sQ!N4>kSE@4;B
%5+UVHBTS_>Sah,+4kI(%-Ooso2*^MI8-;4)UW:omarQdl#o7Z!*B&SL-1*K.#H>1UGrbdL<LVt#+c-)2qK;u0IGAb/N-@MuJ!K,'
%7.%N%e^"['pheeo]2ZQQnFH&$MXQ'8n<-YXjU)O+AfD6IX%LL(fit3%QQJ\N04oCDbV"K%nc8jd.aLNfeZk`Nm+Kh*m/0GcYElKG
%-i%KD59hmHZ2PU6/dI4'EK^X#4l#0$&aVIP5U?5$:AF1\n:KNFrCLr'FQHgR_u^t2j+G^=M"cG,K1r@Ao-`/^E'mIKLKHukR2LFL
%+_7ird<;ubF5/4O'ab$M(jpO_oW5bIq+!_LBZgN[6\F1\mYpVrQFnKd!WFi_^u4rYK<O_W8$8k9an$.3B)gDJ^4?&WH6=,>+2;d2
%aJ_EU^=$G+F'P1jZ=#@_G_4"AaOQNDD)d2?(8q)\SH7ubC8d]M8Cr1:>OWi!bchc!@FtEX6\C*dG/j4lG<SBY,Q(QIJ?eMU#(lS-
%Be]0rik33oXY-KhdH.1dO5[,KSENSacY//eJq*@0A@SYTj:`$A]3(%c'Wt8<]kr)>;(Y`6fr]E:"mtW/kd@4u+NFN\,!j#(pITDd
%jk#<?Df:g#2.gS.#tIXZ6[2Aa>6U170Ot@-EK@I3ip;^hLd)+;LPAg=J]@JH/81]To9]n]!p?G5%"goTV9H&1"8WR%]J&[!%XAn3
%Ye:p9%]fHtKEf)2\$t1__hj#DTKVQCl"R9K>7D#SZaVa!Q[F$LPU$*+ZA:73-=K<=]La#%XmZnc[I\QGZX="E&i")<b<RGpYk"%l
%/6u*/=)'Zs`e)l(jCB3q2AGOTD0H1p36OQ7]">RCPWc0\XZaMNd%E,*46(\0>*ib[_I"UJW.K4b"%dX-3,5;'8Y3Q<o`ZtX:_gQr
%obdZb:gRA28V*McPgC-]9tS^c7-TDQ83%_0Z:7t]FLOP:nnmU#$q>-sh&Th-j)J<-I>B2!:2i)GBWUVspg3OS-!?8t<saM_mup3E
%k=srl.K;#Gm^h@t:WT<(AM+(U.+e%HrS7*5(phNsF4ER/)VUnDfV:GI]A"IG>R!7:2;M!$QuNRVR0g$N)i`D($/]OsmYWPcpoB(a
%fCqk3U@T^OnF_5#I%?<WY<C1UZm:b+5E=*B_?u-([YCS>XCo3<VYVogXpOn8hh:-)>nCk.r*j[jXPPj+LXg;j'LCDH[cZp/^;Im+
%7MUHrYrTAJC1FKZ3hcDZ`7UJ%8,/!!O]V@j<0=A&d7$IU:!27P]*b^94uQ;@H:J5/?4)R;+93pMbBKLX]HfEC4@?8*Gds.Vc,5+$
%A_G8W@L1]5*AaD("$2+E\Go8Oc)m.)N>VjkZln8E,Ef),L.59$V8EaqTdSjV^W(6^5,;Ur9kJu@%MPI2oN:$s+Bm4k*#@\pZQ6u7
%A2<a66@h2dh[e(fi#ZBjiCq3t]Q,'NNP>A?J,@F(rV&O+r8k-^o&kMMU5*)S`q6"gJtd_an%>[b$V:19<&MX;TT3mY8!PsVaFiaW
%^<;tZYi;9)C\kn-s2ehH%qaWJW=9f`Q.uTA^?!;c(UEoDIT:\9:b_GZnCnR\?P?3jquD4LMZ;aVrZd=ss-K,PhbQojhsTF`5Haji
%p[2r7\,J$8rHBH_mJFNmfmU(K`H8RjO<7!V]W2I&DmA"8%C8?m/qi9a)bN>"P2K?q;`Jm.60:LIT_#<q]$h%H)0XmCc1GVSNPk&I
%K^?,6iJJsPpo@B1fD"N]YO>@Yk'`FOT8rjJ[%g-"YSW@E'V;7D1E=H4(:k>1Ca.gFN%.C>C`!Om]]:D1+1=fe-!/!X0T8pkg$TCs
%PPL_-a47YDXc!m\>QbMVEF$-sl406'TTV:6RP@&bKfQ7+HE+jk"@.!$faW/"Jj:pJf%6!WS]T]==m.Z4R5RGneP]+[V1I:u3$nte
%KpaVhk(]=!iYB-\30X.6&cZSl6rgh1(@mW;G;\HHmH/`9d.^R/hMUd($+Amm<OqMF!lI[/41mp8$$`o-QXsa<n&T=++*R,7pX,/F
%45"euJh#`h.!H,MZP$Y<dM:shX5?8YSJE>j4j5>+P`fmN#E#36gKd8s@[7VVPr<f`m*UOp00U7OF_lG**4>[[K!+Bp/N#b01Jon9
%_bUbs>:t19(Q\E!O?(b'gFGhN,BB@c[]<id39/[t)4W28ZA3G?ocl.pigSd*Kpo\Dj$;Dc%JN,:JF5(@grj#2!do3A&`eglG8Xqd
%h-C9qFF&?a??<0Od6aH8a;=o%Lj1ADjP\hh6_G=igqT[DY+p4`&78R@6u1c;F6*sV'dT@Nop4+V\95`Y'?[O.]W_ld<=(&BK*D@L
%+h`3OfNNr-I>Ath%&$;kBF[o!_Ks]m#t+FF9,<f>o_gB*8_K3!Q(Cna6A8H6A4B<sP70Cg\0EO`Z^MRC&Pjs4TOi)C6X2i:6QBmn
%RStW*1B&"&M,N!(6OWA^m=KGp0RogSP\]-24)*`Y=%_Cpf1N]CDm#CN?Jf!@I!f6T\7FK%1D&RFWr8[af5$:Vmm?!oMk!7LM(7e`
%\5U/f<3URV+(T!or1I3_K@K+:MV@$6.PXn&lC\`AkbNY@TMCCBPp),qlTr'g=n4k><5t)R\e0'EKg`?5NZDJk=TiURBdacLTkG'`
%!;3ei_@9<OA.+V;0'\<VTT)M`''c"F'.dsD/4t__jX;c:qA_n9%45'&dK4HK"UVK?:P&BFYfNA6)2q^6%W<0IrfPt%R^rR88RLu`
%I1#$#q_Z=2mo0%Cg(l]?DJl'W/OZ*rD\)CN:fgcu@S'&o+p^3,F@8#&f,bF-aK5'jMFM+`.?nC:1rcd5ad(mPQ:<g)`<hl=6q1j`
%q3$]XE8G0>bt/]"cn3E!+@@L,edb"Y27:T<;,\ke-UX\%Z_V&_)T$)Z-A!Fm'oJkZ]V+&`Fr8ZR+9BWU%<f9W!l)9D#\h&e<d;Nr
%^KMKNZsEah>qlK)gg7=ZQZ[Rjao:L&%$(i`VB;P!bo2[_`+bXojqru/qOE!@fteBDOQ=<BZ(]BI1ZW(G#s1,%X.>H):bra3rrWt@
%W$buO/t2u`M++e@EJ&FRabbgq&fkXj:X[%V7FlQ]q&6!AnA@?!oeLfj9D"HY\eI]eOr5_GJF"Ag^FfdBd$pgG(;ELII!qX"R.sqg
%s$<,_SmAk`"kkn-oW=%RZ1Y9N%2??l87<:01+T^&0^k0l_1OeRJgMP:RYFn>PS@<+]l=-uX;_VJ3:pO^&QP-W!sIk:4sVt,[%G\R
%"&WNI86$U$VudTMlS\&$DX&D]@C^N$:Ig3QlUuBMp;EmuC*4[l;6SGbdC^6#l`GJf%FcX)]##@3T`kt:If)5,(ac72b#K97&9CZ<
%@G@g*gi,Tq/f'jp#gICUJ;G1K<)D"+Sf>lhZbHY>jFB#T>!..*.hh!UC]G0XXE@]T]urH-XD5<cCdntf(:#P#Ej>uWnm*[Y=V69_
%A-sPn[:jbYZ8EVaI>U3:nWl1^XAteqZN8Re`_;@i5Sbe*Le9*nbVce-Kk/`Q6(]K.LgN'o7@U<1?p+Z=m;)&grN^*J+[BP5]7-5N
%;@&a)Prc4a!Lf_/>bJ&q,MAMnTNI1@\\F[II=aLQZ"tl,",msH;%LSQ-RHhb>%f_%-1Se>SW=_h8L\GtXWSp)n44G/UfGQiN&4;G
%HZuR_)o\T55D?.U_JV[)EiJ8U$m1,Enniu+eU/JWRE,CYP3!oEF\S[kidBAE+;LTp+#<m#0I/*`&-E.uZk4"gq.Es9*>#DF,4M'i
%JWRWB(-,dj&nV?@g`Xl5G.1Y6E>rHY&nhHt?kM4+!!e,h"XIQ/8UVS7M$NCWd%H86B<\e-o&qJp%))/Bkk?Ms]jJ9Tif&dd*)Dnp
%^(Nh#P%RP.0rc1%83VaUR<1'aOE*=DZDP;+8-]Gt9hif>HT`LVQ<juh`T,1jM!W!fO9)Aco:E5#AuZ6-#l$#P7#ScN(OUV&18;/2
%Us32J6:O<kH;ke4%#IRfE?[3ZAJrqB_gICNLSMb2af+.PGq7$b],AK6_]0-:(r.6ppFnR>9eb.dc$jc#BJfc<0m1i&K,e4;aApka
%'En[64;\@DoWf_j-s`!i?-N),2(fICr&/;Q!:;+RRK2_%H?WGWF]p(!U,e"uJ1d\CVP$72Mb]oE--`(nQi(eB1mI[W>,f%H*0a:V
%l3%RD$:*!dEZPu>c+$hU`P7H)+((`n+`"S1\Q">n2&*VGfj>DMcH>r_;.DHKGq_(U9W*D\A+k4^81`<oU=VR>=7hTQKmOLG/)*4U
%b\qDs"d?YnQb2&&i5X^(nH9cG/EKcqHpVCBg)[X:lUXs?gVZlBTJ]M"kc,;#B!53gV1Trt';P#!PEZM&>)j_Q.n;h3im@KQh!J+]
%a+1OF*=i]2ik5jQM[h>1KLX`!#:S#`6Vua1oi].ma$\>s0^^!=&^!4+R&Qd3*VO4=Fsb]b1L?2B^ip)70,\t*WaFX.WhuZ(8_/Cd
%ds]*ik%8/gTh];t^,GF8PfQCFK@Gsu1WLg&2TVZ(L/jI"k`B=HVN]Q:+<lRo5Z(uV$gW;c[pBO[LVf/1jV]elX@\:JVu.G4/6T?"
%Xrt:9`ItGJl3]1qho4q(rcB)<H#gNTh4:qg@j+f&fB[O>7\]Gq!j+&TLNK8EFWB#`cal55e"7CI&-R>-)ur/jYo-G>'-4=B4*pKi
%d_=c0!XeF$09F#rEoRQ;aUC#^RDTgt0PPD6Pdt<K<`\Kb#6aLCR&7T;dFIK(8Tb15e#X,GL\gOaJaLeOX8hC78dS9T>4P]/WR`9$
%2'-=YaK7:D2lgs5)UntX$0_f<l361;;DZO-67f+t1`8^(;:Mf_M&'o\d7J7*9,Z7eTqG1,aBFjA:#\^G$2u*Z2OQ*#M!3*VB%+iI
%!A-$@^"&hAbo%<LO-Ce90<kCYC;RP(a`<\+4.SEajiu2WHc`1^]\-/`FJ1R;'2V8Z]m(2$F&JWUZ6gLcprJp]9[0<*_OIJmY+@M7
%2t<CSGuq;aM'n,s%_RW9Ms@Wno8N(?W&[iHqXb.;Q)NR"")eZ_$8G]?`-Z/4s16=B"4X/j\n+W%>ATTc!U>m3KK6$n[0PQAVH5,Y
%$Z@r!67]l-B>^e!Ot`([!S*_rR8^!</T[N2rDIZ";]=TOroa=Vo3\+C$o"QH16'hg;FdsHULfm3H*h#Oc/ta$0O-kF%?ae33->'X
%5Vme_:t#HEQ5L9l@-(]lE<tej+rhX!P`;uphke[R'DHud@T"W]NLS]^BN]sJMc@>;nF9\T&#jNo>PnPsi-D7I8668"A.$r"a#W8n
%n70[?nR@28-BfBMLOoTT9SOc?N.j-^M<c"%6RuL%^pL&^*Z^jJl8U8A@bp3MN+7Dmje6*o3hktqMfc#3$Q;6<lWiNOHL#[PFPR2Q
%GGoY?Xt8Z7P.3X#aq*eah=op9-6`=q5ss.tK5!cTW:u*-@+[LE)H):pY<S\]j'P>q!;Z2Fl&plpb"t=$6">bn!T#b@NQteKj:oNi
%a^VJ>b)r=9,5r%G(hcHr<5uCW$t04p=S-oin-iMK:.:NM92KlRCiC8D7Idi;oRD4rA908!"u<dV)dU_/KX*SMcMS`+(1;s(f.JO2
%0@%Cd9^%Ja',:f39#"bElj0@'/E7e>mL0A3M8HD"L_o?]EWkoPL,pAh78Qa./khRJ!ZqudF*rTSN<i$)S\\ie+R:l,qRAh0,RjGp
%k@G:cNfuoSHr'g<ejMq>8L-bQM#V.-SY-Lq=MuK;]-5=F=4uq78q5>].Gf1%/4O.aC[WG2"G[%A-A]i)o5PBN=HeCK@m-PZBW-Y:
%,-d"a`3Z+*A-8?[JU5KG)f[Oa`QJ2>!VlSoHd*R/U%/tKr55-j_]e(+q`H(!&+=OqQKYm$-faMgE6@tP2Qu>R2nA%Hqj1#IjBR8I
%3b89#iA3B(TDL.HA4's#eqmO*e7KV/V/qkKC.%h(A`_d#G=&FL:aYESji(!76KH?gNu-bO+gN>V,8D@m62_$Eli_`MrD??V^)FS]
%j]-MKNio8H@9c<l>da/jAK+\\=IddP]$k"bjhR%_dREKJhkZ2H+h^Gd.IhYL3j8@]4)5N14!p15_1B\j>o&JfSj?Q"W4"Mfa!%B3
%U8>X9+/e:eHKqfK8:P,':^q_qDCDe2%un:a4uJL,A]VHO<(Oi8@"G7fU.@XD"q!5/SE@Y0B0eR2c<^U,Rp#ml=*KT4YM"pt5ob)C
%E&ZQcXR8jY5,0TV5!TS[B@_=%7u5gb!K?XTiWR*W6j$j<N%]C:a'd%h]7<5q3kZ"U(Hc[EJj_XKQ"cQfK]Vt/Wg).g,VWlrqXd+2
%c^:ks3.d@C#"DP0FC?)j:uTaA<21aDa*^$*:pWO0Ra?#jSZ<u^kRl47?LGOY3Lt*Qg"RMogR0r3bS9OVqVqk+W-9)8!rX;P_e,.K
%Bo`[\-d,Bt%IpGa/U@*!5ru)r4/!877-\%'mbmaNNoMT[)-5q0g2/*9D^T@n^=ltkkt`N*%Qa:oJX.:Ep5%.I!$s[H17``28[]Z2
%TEA0PQ1\FsKjWCiadH>GZn!F/((G1PQ14u'$Re$;WX1?)9I4=jEIpOeG'h>FZ7tRSNBN#JO"(,25SOT^h;^p1Y6VD-$5o4Ra/oH*
%ECX(U;Cd0E.Vr?lOhA#+.nQ`"O[olonZaMkG0/JKW1t.\TX8+4Td./cPVa@P&jUGfkWktr%/C<cV[B^EK)d4e7TdZu(Fj,8rG2W2
%.G`V$'pZ+ZblW:aRZ('JPLXq\fdF;hX%j5/3N\W-,s<;IPcsqpQ'TQUK;+k]Fj4DfP#/A=W0/g"E.QP>8dp33ltZc?!WuM):af;,
%1ZGY?6$i-u$To1k`XH;B'Du/#)^WVG6`57tRnNq0GiF9JcLA\M*N$Tm-&TAOD&?9O52c99ETY8X)3]JLRXN<"!`sk3L'JnVSc02!
%O"MuZjVX#?gDm!q.<..sa9/ogbbiUB$D1=+[?0k#43&Qo\jhKK=aJE8ZD_Qdq=<;85bh];kdu@m+:FiURN)lK[n?]_2a4nT!N]"n
%gRX.d5#+B3h_%b(`G1>H9BBm2+o2]n#[gelF],Nn#7>k1&BR]c)E<eofQ`Rr-B5+$ah350jlg=E<OdJDe(Q#M\kcf-);@QdR6i90
%qLJFR^'oIr0fL>2DjQ2\"JnUsY!V85N,?_/d4>ZE/A+O-Z.HYtl5UP47o[6hY:47sYD]Uk.b8bU'[UjDAt_ic@pXl^6\9n.69tWE
%@Lg@pY?k`p>U@"jMo&o$4Zk<[E(L,W(&I]h`:.?,b_a5nFRJ0E2]BQ^NY9(CD7'rgWtL-V1`p2W)7O*/K0$Y5TUf_l%o"::#TD=a
%,,"3o>2guDV*O3P_`7Q<K$Em[a>Ku39FT;P;hR;%D)RIe]OHug%YC^\DD,a_!tqq9F8ojm]653mA-fKe1Wp+=KR//2hIIRcDf]l/
%1(To'71^h,)hX[%5X>&BBiVp4GJ<F68n]((q:an474\[K\q3uo-nu=Q/)i[ZB`ip5I@-qD(1X=k/bH%T;#R*b-;C5]6f=45)_^*+
%TrU!loLgSQXU3Ln)NNJ[WBQT9Z"O5m'2*5=@:*hIM(2LG2$HO?">tucJ1t[BO`X(dVi-`.BJWVts3-*&Lt&4]H4*X!P=VUOd#Ric
%i.AR"+[^hpOCM*=fO_0@%0+j/b2"0V]VPA"kQo-`CP'n_"9kb025V!a=5[2dEK`u8CTUbj,F9mdYu:c?aq;/d,ujb5C+$+0+S_q*
%'<]\T06$mSEXY6e@$'PIWkhM*0?*$rYTj(.pP$ta6?C0%i/QnHF!nI'UQs/3%q)SB1dD^#.rpD80sT+tL;u-QP-H6b:`uc[EY3!a
%0@7e8k8H/hH)4+72Qi\Hb+&e&1A"LPjC4%griW\"QCSds(Q<d^oP5=KmRhS)S3%\<<lsSp@053"KqB(IXX[,^YEBj=3k_pu$2?.1
%<Y:Ju\ZVJ7FRkVrn>7mS8M>WgL<$.So7/*1Q;5:"cNB=2-!@r6W;''5fOf7u)OIJ\a;OW-WR/C]/L-f[TpIj,Nf`@ql`O=2j\`or
%`*cIF$8+&pGP!lWAdV*]PSn(@'kJCQ!An>nMDA!)/DV#o]X'JD]7B2sT;>,m%Q,6!3,NmHcgq,O+4UG:^`&KY^5K']l3gjj,NN9n
%.Q_U`SX9%Cq<.'=/*%*fH;!4^QI7LG$:h&4PQ&p_hTJm3LPUjF_n/grCrnq9DD1LFBR#0&1hJ(L#$t'm1(JcI34>Yrpc*t4_KAIN
%Opq@`5!)P/AfPAJA/qs"%`%7g&!?&*M[BL&-mT*KZM*#(P]9s!Yl07d5`=Z9H.km_--$`qOJ'a=n9V916))F+KFl(Q&B(5B)/\[C
%`1;QsC"(8@/FGgS'g],NWB;F\7i:q/W$g=#+C$L_VCqTLQ)>G-Pe87Z@0iUR2q+<6[J)u5E)(>U%]R@m?&8)5kHR$"OStG?7OY)r
%m4^plQ=C3p)8$jcO;Dm&Ge&5`>]RWRV(-]<jU<7p&od#4@>-*Jd<opo6kXBZk2h&F'<K\+cfqRr*T,1%n:\GMU(O%*)8D.jo9C=`
%W1BS"b%042f'2'ZegZs*UH[Z/c]c-f^Kk7E[G3?H(35Cm4XB"j5>RGS-IJ""$FQcT'@j1899W1EYOb=Z2;_u%#$I4d.Vb[[7-gaU
%b:6Lf?oqM2gcb6SWEX2n+::B5k*q6iQ>kB.<,$_9WV!-*o32N@PNtgV2i-VW\l(ur@Euhn"iW1KTP.jsY=+'R_&65V>0Y>##Dq-,
%_P^!m>l_!82N43DE1G9TgX-lDOA%kd?@TW:@1eC,p1's\%qB3O@5p6B&EI&e=8e<A'[,%m(":";$[H'l3r\oI.s>1N04c6/QZLk/
%0ti<]`Q_GB6qr2[*2R+Zp%$2IF/7!eZg*mVP]ag^_$MMa_/c)a$o<Te;%7V-ar3DM-^UMW/1]Se'F028eF^Tp4il_)>"]LWmC43O
%X5&&o='!8db92@>RU]bC02m^HTt8&5=76c9aCZ.*Hr_JI;+<2`TrF[9#*-["FW=gkTr;:"&=,EA12[dd)A&H#R'=jX)T#pU<nj/G
%l*0Fa18/#H#h\PV$APn,N2n'N<I9>(iPo@#G!bm/q_NF4h*\Fs"l\r8<))mXhu#WhNOU3\<bDI%WT$0Q'pf,\Mn,00ilKasW_S:6
%YqqCS"V&GF&le(9&!.1$Xa==5KnoJ6<%7?S14Q1O*W_@]NPV-3P#heoUI$8R5Qf44Qud%"?m=c'F8>2)hd>&.`n`5#V`E%`=i>#,
%84]uYis<UK%9CX_,YF^'(tbt[<p`6>#"3ZdTETO56^Wa:3HV_r3j-%49W49d<OTN]8nM>GF(U$)iC7="GJa(lY1k158>@N8'aBOS
%=Bp_Gp(S8-N9_mPp46-Um<aFE>Nh7@>WNgu9MOG\m-;lHFPIDs_;*BS`aNAh"7JRe1ZKs@j6d5VL))f:mY($B<&/U6WW1oKGEb/K
%(m8'T9Lcns,Zd`c:`]ZKEL5d)$S(2"856-/knB9h3"_#Y2k1-or.4kg/rdA+^l,``>i9S55j2tAC*Q:ZbU_<*r-maFE]KZkIs+/R
%l*F="*:<K%]f_J&:AF(SjI2.-#Gij'aA!i7\Tk-4j(POu+a$(I9F-Kk>/57@BTqq)`.U;UVp`_W"i<+9h>Lb6jtOPP$Sr`HFZhZ*
%XP/jo\fC(uV)Y>^I;1S-JLo39C\Y"sE=kuXA[YL)$*t\@XhYJgP%D%QP=f_0L=Io2q>KIdOoL6h-9i3o)]<XuOW*^:d2FU/7I5'!
%T.f!CR/Kmoc-4u4pUD+OGt`SUjDN>HZ/V-^mt)@o6MWF*]>-M7dg*ZBpVf,l3K&C>[85fd5'[dIbL-=)eNXe[Is.=5i^C3OL(n/^
%Ha1/#..4`id"'(cck_bAA*f5tQls)T8=70q(>P.m.q\Ke5]^$gW\5c"Y8$&g\&ZAG%CQm&ULn`g9o,7%,ie'&[ScOFH,nboE4pA[
%]HkT"r\@?d&%BX^(;3?XS0,43o@b@OO06Kj0b,fHnL/NT"2`ZMAaEL#B1WIYcGo7">XiDoLZ'qDg1?p[h?%JCJMHF/5_R=PV7hIE
%o_K[8lY>X'0:TPYFD!j"Xt$@W`=3=1SP45]rjZ;%\.ce2l^HaL\Bn@6SajDe2SLBY&cO7gi%TPN2#-o2EA7"]jEZ_>9o@=OYb=S<
%%u._mC:j:]JECF$5\BM_Q_8>>[LlpUUfYM^p;b_1_kW?<o[Vb%c#NE63h^f'@e@V(%Yb)\*SECR"d)%$"BRsCh!FHfmj3HiP2u[n
%R5!R'qkOgJpq+HFJ)2R!m:$Bo&tBo%$s,YJSf^9in/P>/)(b&j7Tr,uoCp(QPd`agf'S2?<85+Rbs6C#%gfV1:co#?Kge(U>=ZcZ
%N]KHGF\Qd31cT/eB3_WojqUH/,H+omMK%*?Z:Kqn9u:<!gSB*h@.#;D-CDq2Q%:F!9V.L[6pVed:6/'``]c"F6D%?>&r.uB=(e!F
%CK/JVH[;`d_*NE0j*E<AY"3Sd^IT&XjDD1Bg%e(RLk*32R_)5s.G$'RR?+%$`knGa<.>0B.gu[D"U7/*P]AInL7lr.6YD]e#m3U-
%+l-4^oRfVXUjn!uJiJLiIB!=I?YX'GW<K-A+H?'#2ZqH)Ve;\'nT(2CS*A*`JV!KC%m!!k1tC9]L'EFdh&4m=NkD10&cO7[+KFkX
%74pY\.>*3?e)n'<@<Kc(_<@$7`"-ZqTTanF(h9_09gEq7L#sK0.`*:2>-aUKWR[O?D(I5[U:\$A7+pU(cIrq:%1O5^]/.0fS97Dh
%,Q(QY5ig]J%A_g.iaD-MjEZ`qMNN)gS72Eg;Biu!(t"b=%_<.\-b#,(+5l[E6pu,B6[e#k"(gsgU#P%L-QIeufkrU"Hq:'!X*dZK
%blW8Al_1Kk1<aI*!V$[5QSs2ClP&0VpS\Es]l;872;C0mmS:i01?TrXNptZ!Jo>SV74%(jb(seWQSu$eAhrWlDZ/?:QE:R;U(#r*
%edT+5"uC(LD!pkO]UI6bFQdI*$r_$$7+?<9a^Ko\4CtCu)K#[YG:-(fQ+JPu*9")`6kmOC6r?O$O"C)$5%3k7e@EdR(tLQNUJ^%Q
%c:^B^:cu*=A@'P)4fD0Wb7J\]TQ5\d;2Cm*)QuZC+^Wpf_mm>5+<?g+DQ$';09HCD3s7;mJ8((FTR!Ne$*K"%NRchkhnLJMc=ArP
%?R6,p^/#YpI@iKF[Co/'gVmJ`s00`DR#G1&&KVEQC,PP*!P>#>M]oVdo@nl6"PNtVJDnkt&CCrE:h;Hhej,q=p*;dR.&trCnZ`sB
%#`"4\7l-V@qDc]H6@TfHZY'b4o6J<UemXXLR^5j5WsR=Es*fJN'_``.&8+%Qr;8#4;"=MOTDmSPrp@K#q;X,XrKfbKM\_o`RTf7u
%4i=7B>d47b9?TPZ`8<prq1'U\oS8]tcgM_U[D2=]nkZIa-VMWI4jJOtC&*BqpI]=]/aP%!je_:Gm$=!@Zh-Gs?^BRS*/k#eQa+.X
%>k/DrV>()jZ5indq>=#95DHA(g]&Rus7[5WM3Z9a-ohb:\Y5_rQ^n&eQIAl;Da1iQ,)3a2HP-'nK[(ME69lh>D;AtOULW<$h(U%n
%!(2-X6c?<eP[3*^OLZ;Kke+$bmcL([N,.j9AqI)B7UpRb_Y;aiECH0<r)LVllhdKofCt+H1VZSSqffs(qg*)APM"bCJu4RB8-t=q
%76GH#KC[H`8WUpAN=),W8<O'd21uW;@)V!iD+!Hadh><H'iA$-c1Zm.;s!5eTV1P+V"7e"2eo\21Ub'f6o%.j^gACG3[3B)N;=^R
%,`VXDh'C8t5EB<c6DS)TNPS2BrUpjnMD2Br,h4V"gdnTH.QO+4rZ.C^XNVN%KYP!aEfak?Wq=r3!ZP/9S><DZ6@Xi9l]$IH0tsRR
%2-3C9"ck&m-1gn?=Pr0WOFa$$;T_P%2qTKFeR=RMP*+BfkRZhn-AIfT%[73srp9dA?Nh#61?ec)ab0SJBN$8%..sFd%#nsB&-D/j
%-<eUp/`(+_*KUfs#/nI=9$8q^<JMfV:BM:Lm9Br8rk"td)T!gL$`1BD0^d@H#V:VtBLWMuU)Y-ab7B\mN'&)QU4K_f,<4db06qQs
%k`%=-M7(^agBFli92&;qNF!X[*T#uD#*(ec$p-lIXJe>020<-e"pM9=2HnMRLZG@r9HORoUEhIJa=e/Oc#Crj0qoJMa/;')I7[,O
%laJ9k,L7V(UlCAOqT'\nh2-OH9Z'WGD;:=e@Pibd<CXNl9Eu3'!u/]d/7Q^4'm`@D9?@KElJNk/iq5KN<\n9Ai`eF9%fU98W$T9c
%*f4p)6PCTVAk']oWol]:^4+GS,B&M&1i<*%M.1/p^>C44&YP<)1hO58&5tiV`u%ZXWH#DA42eB2LiNUXk1F=R=R$=-`;FSoZF`FV
%-MfMQiU[B3T9Adb@cC:7^1%>V0FNi\QrPHqf\p,5(6NC7TX:^Ed.&O"h*hYs@:?ZL[@'btG8m`m6X"k0M<9%qp:)SndoH<MQ0qK,
%HFe^4i"O/54\Blc-ZPGCbDYFnN9b'&9>gre9`IHn`C[Qf4Wh82ch<s3kk[sRG/Et9jFf=69VjloHc^pM%"fC[gcKNK6A1rS/P(:P
%XF?@S#jk5#:_qNsi4g>U$7b[2cVU%,c>GKqOde_W=f9)a?G:7^9O3NR?q!<l^nEq:]\a?='r,&&hFg,6,aB7\\`n9slLA.)f*8_%
%V&@n-W7,gI/p8UQJ&Rr&pK4&#cGlAZ8_%%pZM>Y?Qf_Kk.Ou7"GNR]M(?g"3TF?TW;!;%<L8(E%^iK$m+@muSTu"7?B1-K-H1*Q@
%.'helI35Q[n,g[4T)PBkAF_Re=*Ld7OE/_>&#%G\>OYA8U5F12\"/P"X<OnkOSoo4#++oPe<Ed?dI=T-"=Q&@CaBBrbcXC8,U%Uh
%80jO!Oq8HnjJY"0&p$'DdCDY:!i/CeKMdoZ@<V9*RS"3fV^6-V<0AL]:%_"&#m&OQEiDbZM>7u61P@5L(YJ_OS>2jD>'tds,K?7M
%YGh>CNNsV?F.m54@WLAC0_<qp_dO(E;_49J>bG_!(++0%:MY`%W(^)i<1U%:Hq&,s;99D<]i2`RW_AlD1u)B3$K0jdk]mm9TT1j4
%`=UL'LQY%;"4;*^,0P_%)H,TD,gOJ[/MRh`&PG)58Uui7)2s_XF$`LUBTscqHqktu.7kosOIA*h&g5TBA99)IHHZm\')Ke^=rdpE
%<YeV;3YEsiP]0Ta&-s7Yq0f55!)42'<MU"5^Qt8.Yslp`C.Pje-!i-gL(p'=gF>aIPkLan72C0<.Le6\oVRY);a\F#M+hS?Up21a
%]semmE^WHhU89"6`7e)o%>dn.%Ts]JA4H-BL31<+Vo27[O6*!0W&KBm>Q]t3`5Gie2PVAqe7W>4l:7#QK%t/6,Dr=&XF<QWS#b)#
%Qj/IkSumI[*)f^6eYsW:R!j3BRedV"V5&(L7"gu2I8`.8Frb#LW>qI+r<4KQc`TC&#_ds57JAL9;1QqbQ<Up42MrJ=9/co&a:j]d
%NNeO\39Wg[>j-GH>.P<gPt@QpWuI&Y4u[u<N<59o0KsG)7fc'k(E\m:JBCCqfK-F8J@oG`mHBMt0Bh*4&7a%--KJL8&'>Idi2'&h
%e;aNLoq3=*epu'Wg/6,el=`XO!Y[N7a#<T8T"_?'UOE?[*i`L'q@OWDZe>0e7W=&n,,65g2WGQQNIF:CXIc>i+'mh%;gKW.k;[t+
%Zom-a^]+&Ts7Xe=qL!iR0qjU8AV!pB)`P=OY[KbP,N20Zh"$T\Pl<KnZjnrI>U7dSa;>e?HSID<$krqj*]n'!7T,D&&W$\W2fo;c
%+Oe!\#^?,/5/l8gd+%DQSesb09r.CsR8r!58g_nG1upqU>,a%qe\,SdKH:a]eGH=Md[?/>$k].!8FA$(AK2oq/p5:&3T4oWRA+42
%\k9PBcj!3jeU>=d'2MP2+>2YQ-oePV_aUKRgBBlmiGWdd6bcrl"8p\\)'?W%0`UX?4%hBDqS_BPYO=+T0YG.c0,]_,E?WquS3q&O
%:iX!goY`LZj+a-#J:X13h8VN4Va;ubp_d#a&!Q`V%KKTA,t6P7"%4B3#XmD9hZaW@+#P3_d;j^K9"uA@.+<_5@hIDYUg4Y283K\E
%ONcV?Sh.=n_K>NpO=.gVTFV&ji)cV>=2d*AC#&I+q>U(CT3pS?i)a"kn-.[!hSFSeG9?S&RK)t1'A42,K_PXg"GF<5*t<M?LTkdG
%J/&:a2YBN*nH[`[mtiq\kh$(^AZ3]%LN@T("&@4E.Wl^LVh$+h[hQMp"34uJi7JMGM>];%>XPq`&HS'\OGVa`fmqj`Ot`EJcA($[
%8^^":T;AO\Hu69k(iZ.qE3L7TNb*+*2j&#-*/BLk<tM"Kr.a3doV1"]@6b$""._gtCk@V3d897_`)k9(f./RDg[2D!:qaIZj4dA2
%a2$j:MI;@u?P@g8IoTg%S)1RJAqoDu.'a:,0r'I*NU(V^Si(WGjsdqh`;BI"`&Waa;g3)g$Sa5dJTC_/722Z($O<qKema60.H+GW
%3OfeB`fJi*mEU7E\G157a#1fQ::%R5h4s%&[%s37ClUBhh/K,D]=YlQEcYKKjT'du0[NeeP6Mue5&nTd5=(mmcAQG_Mi@Np\1r?a
%YRhj7_uU@%EFHm'66;ir5;M<P3_:mG@nR'V@f(.q_?Lt!jYcmSAZoQ6m',_c9D8`:6dhV=%2:RXl)&ZK"uOC!OFp,uj),f46=tH9
%988rMg^Q1\Zb$Tm0,a>D/-ksnKE4Hs-]OW1GDQEV]MG-N(pZlF$'CWHg^CNC1:!VUM$/gM8B#i:aOnn(7urQ_Mtb_G)i"m:<!ijM
%<Zt1a4e\RdkTW24n.BV25\ei)h*rq$JAs4m?JL!Kk#RohpdfoJe73A#KF/Bs?d<TE/5$dfRc@@6e6K`uQO#D1$.>qQZ`f.=e7ms:
%]*5M#DWmNse&;"c%=f^LO2Vp^e../J<'m^QHtPKi>Z1Ur?RPH(0Z1t1[okNVTR%e10[e17UR;ub;JFHb5[Y8O)+Bg`.]]ZS0d&hD
%".^_"7!p]S?m]\*/Ah9YP'aBeYXD(8eEUn'm'%G?jp."-2R/q<>^8^Rcr^fh_,R5/j!NW>a<-bEIq$6kL/U]WRJGXMQhr8\NT.ti
%&#`tq=FFLS++I\a#1T0/Bd0%-T&^ZeY!(]7.ELG8Z*0'>92,"B6)rgAa-Y<+Y]_^G\%NZ@%a2PsTWl)Gpgq$h^B7fCbd\=^HUd/,
%gFX[oD^T@NAgj1=,9V,OHD$CS.TT@iUt#*+?$6dcPT(N04p95k]c5tm55.E_)mgu.TG&j)h8J-.CM:*<\(Y[E<c;VeT:jT`K]+#4
%RU"9Gg*:NRBS7`7N`EUW'n&ja80DW7;aDlQ>As&YcqhKh]A"IGS-I.1FcjJn*N0e'JN!bL0A#hsZ]2lfl\+ViU2s%m,Q(QAi9U8^
%&\\,aAao)(g>%[]jt;a9>]r1JW8\aZ.nNhEgASYj(rsVH[1WuZO`*<']A"I?T/T`s2;K]Ulul^R1XfRQ2@cdk'=*u$o-I+kn5lT@
%YOBpD?f.[g^:d71Y7&T6.c>sWRa;%Yc+on(eI<'9jcY.G<9BSk<Cir;_/9K%Ps]0l@YND8_?\i;l)e7MBohHQ*`>9R]]S!M_i;Lt
%m=ac^P$VdY*9"*L7':75W.Ih6dR?RU?-:q3\hM:d6$@+DiX6;J<H"U>:F&et%Jd5ZW]RX>ms\lPe]nrK$EaP3<)$Fd%m/i!SXnMM
%\1q+!SP["c>ZVV"_I'-rgqI](76\CT(Rao$b1pGTpI3\iUBLYKjsn^S!H)AL$C=4RorX;S6YHun;bCcp/YCe9fO@1!WuiE.3Xa2T
%dk8!n6JE;ookl,Mi0_/SN,)glM6nbhp-O<B5&'4NK,jro;YD$,)k&77W9>MG=C?JL</QbE`bDkd<1+&koIE](n<(gj.hM;(iaSPD
%0TLkn^>b;#WAU^"=L/[HS4XChaE$])Kr$\\\VD6'Zb$L@'.G;F`o["EF[9Pa&YWm$5^VK%6^o^+#2'808p^#%U7`N"fPf2DXQpO$
%K6^J!5.0%^Mh,Id33T#nZX_&^R;>BM4oF5`MCQJ?I6i0kkXe%bD5le9S<S1"=bF4@"kZ.rhM>3,eg"Qe9+;b(e^t$)*r&-4Lb'u?
%iCQoJ6,>Re?GMN]@3Y@A*^`t_9Kie2oJh8J>8f:(%-.`[dh7ii<sH#i\bj8D-l*[g$AK'fSc!Lnp88r`9]k!"pUC9g-1Pp/Zio>K
%<@LS`ifb["F>0s>#mj]`ltm@J"2rXY-=h31Sn@(TaQW2Aehm@u83@j?gM7Ic0?G+[YR(W7CT/.;Efe_\+ljNk?as'iR`=34^22ln
%++6F3W<=;O8+KgL$QFs.F6lG63q<FEKm#*bWj.Jp!NA(O/#M]g-t>&#`MBsPd8AGG[\:eR3FmJh2"g5iXF`WH`cHU0Tg_\f4(8#N
%%;(*Dr(,4"d\skj&QK</C.%S'oe9SR4V2<bgrQ\e/;W=M:^M:=BSkX&_,uOELDa/Z%oc^A2]Aa/'>Ddh#okSC5QPKchPY\0U#SJ(
%WBuh7T3jQ,V_6QB+E$oeUmFbP89VTp'bY>$(;sYSdg=!1ChQ)22e6ZEi@q9`<(!2)1CY]EX1&bNYL1GZ2?VM.Z0/>Ld@RGqD%!?!
%DIL7?gCU^E%T(h!]<f&%bb/RORG"!_)_paIK^4O114/BgQ-E_a0t374Xk@J/X4;*_^3[,Y[FG\-mZ$&Wgd#INZd[.j9Z)_*lKs8l
%CG]Mni`$t4`(J'!=;o$QHDk4p[M*bUd;HEihn<lg%XXu`lL]723:.0+CABQ^5`QO6br/n^eHsd(#R%=D$$\_[V^<Ia"q'/lH@\km
%1^],]MESQe^B&'rMb0YJG,q;aa$WoIUgr\f)k'XJdItQu)q>Fu&:KG)F'J#_?J=-?eJAO&A[R5lFPW-_13cOEMX$1cBfAmr]ii^J
%eJl)qlgAZ4i&.U$eU)VCh*tlHG/Er1)BEA]L/.9Mk-/FdSEiI?0:Zi?`I)g:+]_WJW(P[tgQKBg<%G$DlrH3+R.b^?ogK3j=`'i^
%?2#V1$so.*U3\%qg.g'uD\f]konG*`]";0%GR\G"oq(#T[uje+SZmO%7L*)0ThDu"8Sf8,-[QET$Rsh*;;]'(OHn?3WWI?f2l6!^
%e]@#=\_5-bV-TWgI>U:-APonAH:+T\74ls?\rji>JT0GdAR<S!!hGcsL3*STV6fm'5t4ruTH[]:Dc6q2;2qq@ZWkl3@]%TMK^=UB
%ZI7Gn7D>3^9IXdiCW*VHCGjngYO3rTM/*3a!nMHP`NU63aD3TJ-*Nl]b,t72K^W\U3lpUr<=uk+YiP;FX;0A,X5.aR^3\NF,Hq\T
%&[A4B.>Z6Q7Uhk_/W"=A;i,q>p-fm&M/Aq1A'H9r,W;td,28cu)K+V;G8@PR[Xh0sCV$"0fSjTV[[H':fc,nsZVUA17\ta]hU!]_
%pEZ%UhQsUVH_[tf0'%5#)e=Wq!@j8`FJn-N%(i@ERGO1^(,M60-Y/hm&L%XYKNB"QFF^A"a^^ie:^iK,7)Dn6+t:4'I(\i.PZ)Kj
%$"lP.,]2`X8\;S\P4lCd,jbo@L)Z-&h$MujW+8>[JPIAok--/VRd<<c/Z`bU`I7Ef+]]jkW/@D,gCd))==]R.r)Q1CRW`nlp-fl;
%O`Z,R%,$hHP%N%kMPQ5tBfM5^h-&)?8K56/ddD"0Uckjq8UH&iiC7="GJa(\.`"Y_-'aYHDau37#XB<b4gu$[$[NUVqVH.@k*l69
%_[uF52ZoIQDh,D\CgXc/m%A^3g"EK^)i)u"$/*p$A2]p2b4[N1R!ZnJend6sQ#.qJYKdnkZhsjFX^Sii%:mN743^N<27.UBG:-?s
%,gbC^7jtj$SV1l'457Ht/6\pEikB^pONHqqW;FI*V7XbX]!n)uh.jH>=P]O0I>UG6`Xu2+T9g,teI+e/*r->rQ@rI3?k/fRZlB,1
%A'DA!ShX_9oX.!^;K.<[p0`6r4,+bu?UjDK<^Ve5G'?:H71r`pA>(J7p*>rSfsA)LBVVsRDWFlC(:7Z#L+__q]3@%&O)'HsT&=@n
%d9,4qn9p9g#@Y!5;gtf.C`0Q+HOrXSX5.aR^3\NF.ul/["j$+KM4$N.Pt-1MX._sV]/sHu,)rZdZ;?f/HP/uqm+GQf[*`%d2tF"2
%$ec5-6^J57h(;4)a0d+*:N/2HBWUVspqB3DEuD5Z]fh`SbWCQIXgsB-[!'?@r9eHTp:]AijTWME-asLGm(//.l-3fU1[XL]ln]nR
%e7SC46#%A&PdHE1aGl,_`-ZD*oS7Z_(+J=UR[*W7rS[l5+="9):_C%2[jd9\W((NkfpRR61[XU`m#*,E;YpG/0l&*jKs@&JOkL#A
%eSlbJ]!J%U[1.58=ju1@`b&I#[EShK_hlCumY(%E<3fEV5ZQ+t3@nUO-YoRP`bIG;\?FaI`(97t<5bm&D$jc/XHD4KI\u'n9tNJq
%q]_#Ye36,dbaM*s@;KOkUp`R)2;H9VmOW$CD$-><eoWj)Yo2.aD)4K,E2'VK45p&TQ)rIncm`T$,aL.@ZaE\XUU;$njEGeeA>Jo"
%.[&A)VrH>;];;s(hJTbVe%SSu5"-[*AG1d;a<OYq84;D-5sK1A<pNf]Hq8oba=\JOHMFT`DTE(0(.fIVAB=1V8X_fF'hNb(X5QNX
%Fa(^s2(BV7dY:L?ZKAA;c'mub,V?*@_hJ!QD*tBqZ;?f0]=0)#p97RCmJ3l=(,bLIK^F[SZ6ICW<JKj3/4m0\CIQZ@CGjngYO3rT
%Mkgef11YU<,g@C^MPNDOeSq:g\i\mJ)O1dVBg\3q=d.L$B$L#lOqq65iBi!;[m=%?=f@4?h;+;QHWVMUp@MrQMja9]6M;90<<V2C
%?J7;62obn4akX@KciAc=YfgLQ("l";VqSAhVp_U4D*uNJ4$[@qR,6s81;fQ_B'*_E0#Y-+7oWijO4e.]./UkT@.#'l;mX^W8upo?
%I!''fCRZ4*g_Zj"\U2Q1At,1pRYJKroS=0d:Jg8CCjl?P5QC`7s6'E25$8s?K([>e*S$LMoh2[0HS$Xp$('P#MaO.QgUY,bfDm55
%#J*l.5>1:q%>B^a0BK<:CaZ_@,F*Gn8EQBRo#M5Sj.shrh=k2QnhN^,?ja"SO]o%&d,/L/O#6n75T9Ku3sZ*pc>!&CH*YlHf`-35
%_AL6Pk5-U(]ee3EbQVSBo2rea5UVsSZ<;+m6u@lpTEniEK-4&G!,3G]>SE3VGS^]iTF]0.RksVFmtR<0Zb$U.5/@geb%4i-139J&
%+VY/_b8TM8MBh"&P$I??VGF=&70H8IaefD8p/6YS70Yu,4Aq5h)ZoZFC+N#3`+5Hj1=VIlLTp_O$8a,s83.HVWX<m)`PskTR6u!<
%F=c]Z*"Xe6=c9Y<^Ibhbg*+_afKQ9n&HIO>?UX&);Y$4>OESB1C=VN-1$":2$62S["^u,dP8%OYjG<NHF(8>Y6;GgX3!"C==lLIW
%lHA7a&1"l-BD-"I0$OPl:61UL`n#Uo%fPN.9=<IdH7UU&'Q^ARd2:5`77U?`J+;P=H+mDqjdR,p_F2N$DT+l'(q1-.`5Y>V/Gh?M
%I9W+R%T!k:rl30c&K-l>,VZD&kZX*m&NcX>Z.M`3_(QBO!d>eQ"1L]gNKltBH^JP'ZV\8/@Um(pZ+irK=!&HlEdhq:2434-96Yh]
%)6[jI]NQe:MblPZ2.b58?C3T=J45X51@ZWj&`=HK*fk.d:Q\JelFZ+,Dp1.sEXZqA2KSNaL1KBsW=m7o(a1S!+&]PY1%jsd('aPe
%34fPrp*L')0eUnC6#Lfj$*H<Tesl25+9OTB`W-/f?m/QN^2"agC6Oh!%?dr/5U;%T36JM2k87hW'[HRBfYO+G!$=Td6/W(.!]#l4
%8B;>jFY0\Nfp5Jt1+WWk!\"-Tn77`c,.]n@'5Idq:Uf:E#^YQc2nXEJif@/>4'lh.'HF`s'um_l2Zpe-^E)h:m0td6^:tu`nbl0*
%7Eb.;MgtNNh2O/'r5@1%f=*[D5/+cpJF`XJnkpHE[+X52&%sd.?qCcBFCgu_5n9Nd><MnH3fV3W8<k;@H[[SfgqYEgM+6EjEZ@Ll
%GVG-k*]YF,J%m1q,BX<pJN%OVi*[F%)I*WH6u3ds8HJ*IO+!^Ti)A.#E7c8m*0o0"<mQT%<((ts63lo57*s)H.k?[.5rk#-mI((<
%bK.c^.TMqB^HG$gcdtFP1*^+,2LbtnIXK<W1l9?.7I``+IFQM)PNWh"$rp+.B+9=&;uZQ470J'L:%7-/<IseP]e9*TrlSX*GLtt)
%qrm^L0j?9T14Q6'&?+t*ofY%SB26`.]4YfN1X%U0@J]$aT0q1\k?,EtB]54H[pWji3\ZI_bRQr!RbVnE?o1HKcGk,,160<f]lGu2
%T+j`FaKB)3S.ik)]mH!d"Gk%tK!M0r"!9KmU.<4rHWG"*N-3+D`O!3E7?$X7,d9V(Rt"[_Jh/fp0Q=9Q#J_&Uq,D=bE%"F'C[HG8
%]<Lc9"pMRPmdS<9hZPcROR_^i:-V\&?XN'D8^[i$*etWVHl_8t12-2_>+=/SlgX=&2_dq>7=Q#Q$m\:pJ\?gNptU8)He;an*7O7_
%ghh)2FpG?uUYO)U(<3U::?mTdN!"Ou\[NN&*+g3[4O"("26c-_7B=I5Z*;L.^)i-qC9nlS9W)5(=3S@dp2oC6.pFZ.7GrC@"o?XF
%Q%?5[Ir4]JrRCqopXeS@!qt1+Z2$Z6+!P&TWWOXK+CC8Z"R5T=Hq!6lQ1JS0<togdQ(`hXF\($B%eA/Db&T_f=,3eAq*D_)k%L]l
%Z/mL'+LDuoHpo?8)Z55879Y>rMj:KE#_Q?5&[9X66)^Q/L%\fNZ7c5/Q$BBX4k&Yno(COe2T`5=9$!aTC57RkBjal;-g-5]nM.(+
%Ffc[>91127c;`m0n$mT69FF1gH=6i=3G'fJ2:JjY4'&0bLmP12;W4W1a!qiJ<7mCrD;<_cpQ12aVFL0L+>+4C+Mlfe829(BDl`Nu
%7hI&3lq('PdS\'P41S2g629"#?HAjm-tjq"7;2r@7)d;(\4K:&$UqkI.0!o#Fp'7BPn=a7]@>^`W8l$"QpoU?;G^G25`ep^HPn]`
%24;gM\kX"t`*B18*HRuq(adOg)HAiYk%HcVitI`:6?+>J=]plfZcbOSZG.kE\:cQV'ro%far5HmoM1go8L3E^;M[1jKJJU"7r$-D
%.HaSAC'RBT<[Xnf_#m^0"Q^o+:'`LA(.IS##g[5u=OJ%c3p.iu9n6@')EX>S4Q!Q:/?cGbAqPsZ7?1MY$,X[7Fmf76q6Om[n)aNU
%Ag-%El:>BF3`Tn]IZPD7Uq$4Vaudb48?aW>-h:E,nsV8Qo&N(s'OrLe#WMll;76pkB8!9*JWZ$E\qmR2"/[R1]'(J&6f?=I1%[i*
%WQu%t7nWlIaOl/6['%QW+PCVk(o.Df,skX2!<q#8fFqJpjLiR7L<T`n_YY2PP_1*"<[VQ#`.;!JME6)ies'1F<'\r&nm_,lr%Oj-
%'NJqQ#g.Zo[4Z0u;X<pY0kc4&-is/2ABY3kU4<URbEkmEdhecL&S\(r\K.Wq_sLlLS(Ql$Sq[dD0*j=>'57fo/nAo'AS.l\D--NI
%@P!kVX.9ZmZ?>R5ZOhTAeorRaO764>3PN3\bjk@SE=VC$^-IHSGseBc13ultbJuQ\3^182fOa9YU0YdQ.GXUV>N-[\hA,PTp:c>!
%X6_tm&'hg<k$aIg-0W<mF][(NaoANJQ]6Aogku`S/+DZdHQjQhhA5tYnP-9l@eZbXJ'!G9K!Aa63e]NgS`Qn<g)R-Jo+nPS`uJh(
%UF7RL(ZE'_iUMKNVSp+#"B!XeWjZq]LqA0+[_!!s@Fb6`!`;OL,&R!2Gf6::O;W4n5/^'ho32Y5C9tMc[d2R/=?J3LEWEjJ'o8L:
%FMZ#l.3k.IS$`"&m)k\`B4B\>^AKrWa8'%N;!SE0g'23reA>F5oe@AH?I2ireMMA%g\4'Z#,L;EbOpNhfUL`6D\]e`O2EI2@p1<S
%5;_.tbhc+I??=g8;3(-IaWacc]7c;fng8(JZ1&NKmcIXN$6b53ZBke>\:JF>7NS%Sm2l3cLVfetN%E7WD*sO1G>u(RG8k(GTE3?/
%\U.QXG7SJCi1AhD\5?Jd4^rc[RTD=+J7#12^=1o5$P]T;Pek_UC%I$F0I$KE4UOIWSXU9r?&aWqNcHr"977A'E(_V@Yh)`]]9d#O
%)e=VpJa1N;^!5q[L,D<Eb\oAo=NoVsfNrXQ'iC"\=32X>Tm$ef?f*,g9`-5W5*m#^.j"bMZUGr3Fm2gO-B,4'I)dl!q3m'?J]AaT
%j:pXG+pL*`]#5-[1HI!f_FGuZ2k2n<:l%>rT0=u(/3/PnLid+j\37u'W7(X/pF2>+ZW755ks=e&d(5lp4&Cu@m7jYd@^aq,_@\.c
%KE09]d1Zb6XW%H:`:6?&q>00jRrT.\+mEJDQ?6aXs6T8`<f8og9`OOBe)lF1K8t:tOo(CKPb?$_Nn.$!bM*W,;q-R^SS#,1Yp&!^
%hukMg/p-i,^"%,;5;?B'&1Kf)+DH"j%nRKe8RkGZ9/'9.HZ<3nTj[(m$2L1Se#!^MJG.9:KBOgJnPPpoKo7"N/2g;)#sG*FMO3ok
%LDQXT77n//=Gl>#"eu$-YK>7jh1mo)pNG%9__i$,JR!F)"l57ukQ9RQQINg4_Me4TIL%:RCd,T=EB("dG2WO=CI402%Z\=)M+Ih,
%dO5Gbau'G(?5iA/U?Q'/i27"cW:i`>f_Ee"h$88&KE%^A3<jZ"Y't7PA2.%pH!"PtoqL?\@7$K:&MtYW@S`Qe^fqpDNR,[06R!@n
%]',)t[d+?t^jr$,I/tp[G-&Nj9h\E:F,SYN;MX#[:_4eT_n9j/@pVG^G$_-TbZXSO(c4QkI^)9eI4afbjnVN29;<p=j`G46bGZLQ
%Esm/TfH>6q3^?/o5Q*E"R;kK3Z`43`d;';F'BNj$JF-9OKL`j$ZZ<2@q.:S(fR_2tC-Kh)28)9VMHF#5&oB?@'qQ[mK@%UGAO_o0
%C2DP,_e>8Y_r9UBS63-p'\j!JGc<_!7e_F2UKie:TC8ZY2cX!!>"`S2gO(7QEb/LJfW]L<Jf0LMk!#R;'H^nK&6(SoXeP,kotn@5
%q*]QajBcY$3TQ0V8\X)Z]rJ76;J@RI46P,C>W>gWk/5:NMo&ZoD3N%kMShK2fsLOI%@c//?kqbo1c49j[LsRl$s'</Ul^72`AsWl
%LXu^<:Rs1!>U`G^Wds=I1$k9dLkY4NQK_-,BirH(h1q2+_)[/\1JV"!Ld"/;6ni-SFcu:<]?_#uaMI:4*5`>G,7=_R2d4bCP:/K^
%*%%Q-M&-jkhKb7/d0',k?F>GW.='W59oMEdBH)tk)@jGHAZCg/%Xhbn;9e0(oi6r)`#qo"%h-TK<B%f-kTg96r\BmT/FpWWm#.^F
%B+78@(cmrG],IKGUGW%SBm^JBruhn3*i`4Ep"754@LS_PS-1Gu)7Ef]HTK8-[_H`#2aS0UqgCrELj?9se4G31:6[4%.dW"t(es0e
%>m(YPYeB=d#K*Q&&o]7Lbg(K^KZ`d8iQI;.H=4,Q=R*gSNuU\u2uj<OH87kq-!@?/2QD1)&_2LeJsRW]__IHRATrq%)r,Rk;;l^s
%b$fT%(@h\Mn34a,@?D"=MQ9/[GTob!clsKF]D0r!BT)q]?E7@jJ0Ucm]4>E)Rel'uU(0KOnZnNi9JEAj@$U<fInD9]fd@\d9GPmB
%>.0;-6B>:[7_=:OGbuFS;2_*07n98_oHub?3',kH/aI(gTB[8d:A3\sgL/PJ@60Z8gA+;Ld/rDY)fB/^*7RCmPE"6FQ"Op*U/?L*
%DakiG+bHlK(9QFO)J6u]DXD>'_hDEWM@k8?nQ]N[W(=\&B[eTGa,6Crl51REE]rW'&^![+BQqL`i2HoM#0MY!0/hcr3mK=Jnr2ok
%,_E4dW2s$`)`OG+.E*c&#W1X#EiVf[E0<jMFXhMX6N!hW7e_M,=RQIuNA"T79l[]c\He*)='Ta>?$[[_oDVU:Ud<,K)]'76!NK"/
%4Oqh8[SP9V7P%ELN%-bELJ$9s"%<bO*Af(fQI=Bb<%&T[08GWoKsn=Z&,M\V7/@-W%R0OU0!I1H!NOBdoKmejL[_6-'&%ug1^@dK
%M(14Pd5/4,d>52TNEYsAgdOQT_5^<#iYFhjPcWp*iRGmBes?n^)n(Z0L6cj-YEnQA$Uj&uSaE@,JgjX@<i(cIO0(ohN1=6bY\G*q
%_@gUJ]+_VKO9iRWj,cqI,O9%L+'_r2.iJRt<)Hk*j!u4$csh8[<Dc-HLYPs@R&=ktcY(.06pD,[8ScgF3ugN"iRa0.lW+R"U^^L`
%6c^+I&$EJ:COa+8T!_SQ%_UkLZ+Z.qel]'?0J)ptB-?N1*dijoe-h)L$.C7M/C'[71f=l\X!cp6qO;5;9eK6LV$864+;iRB(/XUe
%df\Z-.9k?DZ$LMrcF?s-WCA4k5/<:&6mZ>Zg]3>))Ts:]H\/sRVDt9aM5D@-q/h*m;#@EK5ltn.`D#F+I-W'+APQK?Q%uTh(.2%L
%X!1Rk*R4e7_SYq&ek^DpTQuR+WPg)V.p*CT9tc@>'$fq&^hM<]C.?nekU_\7-lS8<&HUlJ,=%S4CK*h=[K[J>.PYhhFcE<B>tq._
%0+AO;aT+JOai"[r=k3r-`1Y5`_t_)*Z8VP(o?(&N\-.j37T&1Cn@lVB+Su;82/k7<&Ut)9f,W#a&0s7']$2@jEJ"dHi`k"F"JK/X
%C+s0c=Q:NR5115s:$o5C\e$R^ZLm$\/9.727ms&Q"9qXRMNeUE)QTRd"hIJ@l-$(Sb2n`&6^%-lH(c,$TM_nA8;0iIFBD$e.'9O)
%70/C&H?I,V'ZK]+/sM4%=4WJ2JK(qk75L'49VJVO1oPuApKFhiM7JG1TfBT;#;_2+5U.gF.H]`e/`(G'79&Ik(k^s'J/YeR$XA0.
%HiJ))h"WGNB>*NJ:/U<Z/TFLY!*ch+i![r\&f!E:X:MZHYSUkDb5bd\nXm2,mDcX-5g+\u#C1&\>!g!Hm6Jhp=#G7-0shA]0PZo>
%(aHD"BmI_kVmOClL+`4B7)CbE>5l9$s.=f>k<Jc,]ooV=]0U1JPM!oukDcLb:t?3@!9u88@GDgT-I%^^E@@el14S5&4-]F/G0'Si
%TX^PEru#SbMaisZPR/`llu\B,K4`K.+XXu>7:MgO\.7Yp)5NOLL&[O08+<.%$uulTCWtZVg;1^+HVt.ULW=u&(i6og3IR^EaF;.`
%*N_e>S=ga"1u5fSO6&EQ9\'XTSLIZqpqb\q:@=OKAPLi)F=A32=f<M#aq&QjnhYTj$H6ucJ\N0UE%s,6"U?hbgQ)`Spi*%o\D!(^
%&?#7tn++XjXq?fjT(>XMTi1-q,(nTeqOp<ESZp138D=R:XOpjo@He[,6R<2Q=^cWCggE]nRRSVJ99ck*q?i:5]H9[rQm%UtFE.]s
%*da3[2Q+0o`*h)0EbV4lrWo;L6Aqf&7pf\?55u`7+d*k@mi%cR.lEk+Io<i6:FInl.%hOg&3Lon'b!VA_)Sgcl+T1glAS@93&-D0
%>%t8,Hj=A(),^9?;+,h>GV!bEBG-cPp_bL&Gn4W/6(C.!6M^@EG7XESGE:C1`^nbEWj*#\4P63o&IS*O)mD9'aX"[H:#F.uKa;)B
%:`9Zr"i\"L"VDHVW>Yk[FB#_lcZBZu<)Nj&[/bjB!\Sel-iVat/#1FVBP&sZ`C.:j$.!`BYXQ%Nc!js0oeQq4<R"3%W\>\ODiMIG
%3`P4(.s!HLAC?>O5JUc]hoDNbGi5j3CP!CF/<@Ut=$i`"PLUdYM'dD"TWt3V".(0TPP?CV/q[Y2kB2)jf`E2(CdX!-*1[3j*%Oa?
%%i--)K%[OcP>:0_^;@E):mARRZ;`\"de"6'a^ko7V]93U/$M?SB7;Nika,IQQ5q?)n2;s*ojrG?"dhC4,@)^J`";ME@ZasC9pGa"
%XM(lQLBJg\,@u_eT[9KN=//VO57!#8P!?p$\Q2+@3'7:hROSO$c7p295rL,VVIAKS#NZik$,rr45`^4<CaeXI@;N9%PTmIO6bS'd
%&I[Z@9EkWIED7+!d;"J1D\AP.p1?R2=Gj6b7B?p90gInF1OFbX_4VN2'5_+cV3jjW*:0H!fgBI=ibq@bcNm[..c;/c#q:"omMXQ>
%?LVhH;DQVV7DQ,Ip];5"Co;m20b@V2SD42>A3dns=u<QD,b;GNd/IaS#qSn0X!;soF?I[b'hR!.FZ22mRA&ObkPR]c$t?D3a)Tn3
%+Sft4bl=ee"!(8IkEqTQddclj[ds2:XtTnFX.k"'+[eCDDn*aFV?IQs4^;a5R.hfILZ\^\R&6iO4>,W?2@K.#l9X$L*X[VHd@q#G
%])n#pa[.c'`G@Su<toT8LtU__9&4OHJujBW&nGEu-HupU>/GV7Q*?^n]$QQZb\!f9*`<]S!t0,=K.AbMe>e8\L'K]p\,Zt,bjp#E
%(l-YO*$UJK/OM^^Erc*E[$caqCQ&CV@XYZ&L-jc$2m#\$";:dla"Gk%mLD?t8rr0t#<BmVO2_<`N,`pU!?+D?UID'qq)5n+W\4k3
%O:&kPP>h3T%s9ZQX$CRfe_tlfR6-(Hp%mn.?o%m5LoWpuQSi=AR8Q8_YJ$I"j0P%+bdk6ZBTT_g"=huO]O_S8L3M)^1^kfK,b9%)
%7*p]Z(Zajd&CD<*->"[Qd/e"QKK;@cp]p@TO>kPVD/f%kJ-?JK5a!F="-tkBXpu^e1LM4d*dY-ul`ol+nrK0S(jM?Nj[(:IY/88/
%(c)t+6^!Ng,3e'Ck5]f-_)[2O]&NeOr!MfP8_3Td:1(\rTAPq\_9>q%[Ul-5q62I@']EgagG3Dd35pYiM8RbCDMG\RTn8?UY%CmM
%4qg*G8mFA3.iPNqRBbDlH*]#HIkA=8RU)>tA>(of/Mj$b>d<#r:Ph["o(KL31^KgcYAH9bWAeb)jdB"2?-QFa4+)?U(?WiA&%`I1
%G\?b^_*c(uL?-&g3mbM"8D:Zgk?b,ORpCmDDQTC&#tU4l1UAOl`mpj;PZV'Afj*[:`">&*4SP]UpUDENUUhmoYQf)/R<rtUU6E3L
%h38*:oq(QJ/BC8sq5mA:-I\;6U]7V%e"##\bU=f1W%p^T9a6L0XCH9*qCP^7QLOmD`3c!Z>G8&PqFCtr3qPI5ATErQiZJiegqpU;
%Uo9'e2QFt(;2!L8J#cD9\#F@kcL)hK6YaGrqd#6]f&TH)F&Z/ZEA)3?L+X.X5e9cUe)i)Haes"F\E8cDB95\4Xcem11L'KnGZ#^#
%*g]+[kQF*an`h6D.^K'!k5u6)dYE2hl1%+OCBWa=O@FjSS;.]CN+I3a0-2gp47Oc:<A^&@ZY?oTo)>\XW8X<1o^5tPgD@S-Xf(us
%/+W*8b?0ZXLenfiXW?lU-[^DmKY\Qf/f@G,@8p4<=OR^FiAf@SYll)?6(qZmg2Lckjaj',R[pq[`#)?nrCKdIj`K/uL7SiH)t!Z`
%St.m#%eT,W&;^=:Sm^sPX/.19HFQp+4jW?kS=YT*dlBR>MTjj@*k*?Ib$."+G[lUtpctC"LtmR1'Xa5]faIrm=/<t`0-(Tdnm'$+
%R8i4_4ZW^mI@_Reg,N*OT4g*8pQ]tDXmRYoKCNWHj76DD#/8KY.!T!6OL(NI#m'TC<'0FLI0^Jq'r'?8h+]9=e_M,!VaQC9*TE(q
%;cmQ!".kuU^,01A*e+HD;;T6l%i-8"J&jebM+pbW>jDW?#J[>*:kb.>jAcc]7$N0.[UCK!`Ul%o?=q1e%]V9lqIh^BJ>:n/e-M82
%_<krt\j/mDZ'F=B+eOdXmI#r"$g)u5*<[FATi>QX)aD?AJ27n&)n&1bnO)@o'/7ks(Q]"ljn+;Er@m9-`(Xm@6Es/l#N`FNTDA\i
%G2ZYaLPG:DV$GQ=DM*%9I_28*gH&dU9m>&]@`GhLUHQHDE20\L46-2@SRI@gSf[9R8esJ8lEGT$C6;!idGX!dQ/HK2@m;e<>c0ul
%XR8!f:h`95>._D#r#XHfBhr\7%2uRb$[eS>dapl$+*4T)<BX';Q9Pg8NWGTHEn@'KoYLP?=!GPS$C[<Kjq$jPOpe_![gfY0\Y66'
%j,J$N#206:B>^8IdUu:FhJTic=M:90rO<.1]I(c5r[M(?okhS(j4gBGa7kF32o:q$+d>L5B:ooJ=IE20QI*TeBu=$n?<_epg'n]0
%N-+9$KC"o\d#%2YD@sj(Bu=,$K"Ku2@s*"4pQDp:a`<'L8f2r(T/??>5&p)bII_bkpc=??6`j16:-GQOBL@Of;rM-bf@Z1M#W:PN
%G&35(`+N%8+(BPrV7&`Y=:o:3FLOOsY'rI+Pk=P6lje>0N/)BfoHA:I'3ku*)QUI`^=SP7MC_9mX+\=@pIQT:h^+<,r%<9_k4,+T
%][cMe>R!5dmPsg94s>UDFkY_)F,eG/l\q%SL,:k0H<Uru=rTG@2182VQpD0oRG"]s)i)u"$/*'>aNcV&_I',H^:m5Vq=Z.H7#Kfs
%bq6AM``_]4s8"t[YJ7a0W>7h#eG!3iE3Fnp)O'RY15Ps)(T&GfCZk$k=b9+gs4_ur#)\TfqXBg/MU(#,N5`c<2G#`8'h>Q/,]i"U
%cYIA2]_RR0@r/egdW&]/XTOYs$i,.r1a+ENUpAaJ0Zr-/M;K80GjMZ-A9HX$:#+)?.XT[57DQb'(G!aWl;$dZ;.`)5]u`O;:K_]H
%K7p1lSnAA?V!25p?.;csM"rek6a>bAFscSa&"i@8kL/=CJE>g+C5$8):CfbOTN7?pU/WDU1++?Xi3OU0e6mhL$_)*Jn)>KS0'3Ue
%p(]L0JG#A2!?GGA$kuJh?;PaC:?r><KoDN*nq;_t'^RP.`R$WX=D)]AfTtF!lA2B51Eg)dU[lCBIs]0h&s;[S6td/o*mU/_YKb]@
%;/@R_T?S:g`OCmBPGP_e0VDO&fghR`'q4'N;s;pF-OVU<G62&U\.ceR-Imk/7We]'GYLf?OjadC%mIWAmSOc+$o[mpa`GC8Lg9UJ
%Umq(t9bAF:79]46:?nA*(_r0qcFT3Fi;/]2.4%#-,'"tgH=,dLB/5jJk_I)X,X)fOkI^Le/D&Oh6"0sPLhl^Q+6!dApa4t-ZmCm<
%=0LJ?!BL7c7AeA-%h9WkVViP.5G>h_KR)A"G_/3@#^OO&%'(P'C?m^p8p?@^NR$!.X9^gG=ViE:=n@P*CtJFc<"=Nt1li,IM0pTd
%Msn3oSI:I@IN4ZaaQA6_''P<VDe8%DYqg*L19qKI[>IlthD?Z5H_,LR1=EV<o(MM`X-Ls^Dg[;a#hFnj]8?8Ji%r@Q+n'3qT_X8A
%,fFG-egjI&&<a*JE$ccf./cQM/NGI,9;4D"5lPN/Jd*1j_"`+=]*,M4'TPB:F?oPlU6gt3#E'i(LcEDi3hQ(E=_*'Gje1&jQaHSe
%5CrL4='I;`[KC.:6ZDA^6o?<T.rdrCLsno61">,I1M%g4OIDaWM#?u+,1kE<XZ[lD(lOp&9=+*s9bt8U#t<'WiqN'"opV^$0UO_X
%Fbg[+S/J:ChC^L2K):aE,%FbYf6e7W9f"4(UN-Q+@_m\-k%HGm%,lEm!DlAQ75Co!4o1UDl#DrccBuprbhU`-o<9sMP@R11c-jC8
%JEq4"'(5H;gZHLLK??P+QjJhY0b_K.VD"ImQjMm2EXcVj9#FcT`e9f4I='V5I/L,F@:-lg<>*BSI6#<J;:9gW^)UAkj[n(jb=r/H
%0@-HiftRC)LhD7SBJ2?II.HcAHq\n>^m/%CU><WS&s*5oCBGO2bQ^7@r7d.R&CmgS2fOB=41Ar_0\4m#^,)/dN.rr#Z[pS-_l@US
%\q/05s2&:)[09,m5-^&ACTA96Xf?QFA)a)gJ[O$(C^$Wm81@+mlrH=]o<Z.01)d#Db,<4rd9(>T*nZ`$$%^AullO(XPo^Ak+XF*'
%2;?J$$J2AFh9<R_j;Ada:=1&L'rf.bH_e9IGf2l4'V8"31qhp/\GdDkC4\VZ;k-[+aHFA'f[!\U\sjiMd[ub5VF#REOF8p#h@lUd
%GoH;filkZ36o\-2b.M^gl:^p@KR\U/j6K?i"+Ha#LT)2d&,:"IO)M3-&+G"q^Qr<@*:c]C//JV(<@(3CS4+"9p-YLU<##i%DT'^%
%SaBRI$#-s`,,lit&lH2>.SKq*mY>!5[(t9"kY'k\7TUd*!@cI0k(O4YaTAi*-T(*NiI)HXL^YIbUO&f]C6IusZ'7f-n0.?tJfbQ,
%M5O=[X5]#t0tiUmhub`_Q?j)a5ce."VDi*D._&iGHW09oRQsMqnNIthnuYE>#s$Fr@7)#N&1YW94)-2H)Se,6jsT6T=;dAp@pY[e
%ll^%<37^I7+Ar&F!J9Xn`VOt3lHs[<RHhKV/G?4^f&V">H\'bMl%Irk(kk1VCKFu0W&i1eO`>75EJ22SHa!p%E7%;E*]Yk0E6ZRh
%e3kH*>njb&dgQG_edm1GO:J9,OpT+\T$j+m%3._[_&d`Nq!FO+DRa[gh49Y@P]rHN3Po-u$GO2J(OUV&1AL]0D-f$]`asUqp*O2J
%QE:R;U7>A=+r\$8f7F^=0l0;IeO(jJ`(0LIeHQno1=1mCl>4jXO(k"scYYVr(p)RhW*V70,t7h5p:d]]ZJ;tX4b3RMI1]iiR5VfE
%PUEBh^]lhpU*L$8,W)[XRR+MtN6t1VoBX<%W^t])BA_9']6e&oah5j^Fnb#FMo?lCT1Af6R`JNNN@K2I10sD?Fims#WNY7J_3H.p
%h1Mrd-rLFm0bgEke*A-_524W<=!D;t@\Quep4K<XjH%Q&aND,S,,D'D-efX7Wc7m=6@=!$E':^dZ'r9Dn%$(m,Kg[KPV@@Z3b_Q"
%?6g$;^.t9#G'L0H,/H]KjDAuK3?sP2=G#4KAs`tj_fA>(#:"-DiR$A7XOu:k*3O!n'#f7M0UM%^H>jC)20V"9F1HKaQ6ZAW@IWu5
%dYQ\k8fTkc?R=%MF7S7K.Mn)%_TDW&&S+N2c5#*V4B")h!u'.r<eEMmd_8O"\K>;aaJ#_ia=$YoKu"MZ1c0[RA3VGlb-0L!q32n\
%1itgrQ\<s2*KKWAPebJoBH_:X:(7e;QfrG>NJ!NYnNAesA&(+KbkuDb>%FK[.6%0WLhk+F\0"+Lqg;50gX'Q+"3@1)`fqJ*URR08
%kN68t=OP^d5[T[PGN:a#NtMS6?RCWBI#06qTIuAgMoo3_hiM0`;.3]IaFb<6e2Im85t.AU)g>rO(,.a(&VB;g>niEUkiq"7MM9Eq
%';92>-:1:p>>"5Q:=s#V#8Q_#&C@/i`d:94H%^JqA\[Q]SfC)5Jn-F3-3mt$`:!/I<!0qkbN:h[mmo`pfp[K9B+Ls5O&4,F'S&To
%R*bu"4R7nRk_O/rP4"p]c_m"WL"-]K%?2L8o7_/2jLY:<MQfaZ_::D.ag^:A!6/P>9#Q!JNru`pB@'4Y`iYP9k@+&Y0OL6iU(7p,
%=b?,sr<>%74eU4h67LVs!:hEX7gmZaQl$k6eP=!gNLruqs,-XKrDt]EgaJ6]&2[t\b/S/oPLpR<n]'Qcn7JBE<cXQ]A<,fn4"]o*
%\PCuEK\sl`A"<Er"L.N.@]&NP4WiXt+Y)WQb<:M0^,8H:XEf)CUi]DV'h;T09^Mtho'J^!So#*Q_ZbF9^iE/\+0qC^Xpu@g?QSoN
%3bWl7TK:ktJUA(fm#CT6SQIt"Om9QB4s^[F*h&oLCYBbTQ^Ec"i#5$relY"5Wo-O_@>/^>DrMS<aG2!hO4b0AIMeuqE&q/>'[F]K
%L5'IgQ>^%KZeUeJNqt4ULlrZWNuGrehVilaAUcu)'RD"Ah%$p$"Cq:M6Dtbo/*%;C[2OkU'S8(kQrsAhJipEFa<V):I$AP]q9;5<
%9R<=-^/k.TOBs!-'?jN*"L]3()uFP;4GY4\BXYJK_4I.Ec=eEs7B4/[G*O\)pGum4mH_-)N4Fm^3?^pm"=>njpcR5%K.@nhqn](m
%:]r#BJM*h^%hqu6q'u"cK&o;Z9("M'<LRFojODFuQ*VCr3/DP!n-):,@R_"e&!tUtY6mV)@TE'<A#%`$PUif:qm!lR<VIaNr$kQs
%XfdgU)!_fCd-]#P\^"0uL+gEMW<5@NW?%!#%]CV-Y*Ct68XVce$t;QG;qZA5+%1!k57PNY>V'ti2W*W.f]W5*l%@+lc&HkFk@Gu7
%[bk(UfkTCRoKd$<3ja&hg2jDXTo$W&W?P#YPqI=Y3b<uJY0lB)fP91J[*BXAPUg*8B8DG\mS4*5X-u:6*Z)kMPcq*"ns&fT/@9oZ
%joE@<NmI/D?PP$!JO'+NRjf>!V;_lQFq<"d&`p%ZrS]JAN@NenF[+NFf]o%TJmY@3nC:OM#[^l4N,[<9g3a32H#^/UME6`'5U-6j
%eYs`H/-Yj!Wjm92G&!'L'2b?9ie]f?)b0nKr!U+g5Y3.CoV6dK%[Lg/CrhlpCL/J__"q+&iN!;7;aj7p^E:[=0_;``]<T)g<-K#g
%p_lk[UFoFJ041W8Ygc+a>\>K"e<17085>G%nC0^k,6;K&n=iUt#U5mP<LtE9'd@F8,UlC[6.?'qh:q'o.Oa$>.U+Vb)*g\&bX&pK
%`@VB4S^n=D<Cj[C9,cdf@"ND^g#h^XHd5Z)<)NQ;?,.H3.3kp:OZ('Z=/g7t[9aO#pYk.fJ,K$=pHQ>T]'oBVR16u+Yjd!pMiqV5
%#uiA"?nWcsL'Du(@(67.HpmhBR(0ki8u:5rQP'%hMpE_>-$&er)ildg'B$UeD=6[#&IL/$VR3`?fuPn#cJZ4_g5;QX?aZ#>]6jFk
%4g`nra_9"FrL>8OJ"/()q"5F7B"WM^1o&r85TI)@jlU/+Z*SIAl^@h2H"J<p-&OL9b6<1\*7VU&;3O&IQK8j5L_!.og:.fWj[p#9
%a/'L7o,S/-)"VAEL`e5@g^_[tpM!i`j!):E'9+.8=RtGU"Q2jCVT='PdK&iQ8^&YWpUTo1O>*@LU9r5/29(;ig!)^:#W1*QAK;E5
%4M;]nR3M$W%Kekj"Rn3N$r/gX#.X,\*WnX'#k7.:!QSKBarS5slh8h3@H,DF["H?]31m.e%u;`E.]02N?^1cBcLN$F8(huY<of^6
%?jfM(-dFBL8\c_dkh&^C@D[0GKRB#,AK6J_Q4ce\M&tTnb%+IjdXDOZMt1V.8Q?+p#76!.@R+?fPt@&qpnZ'uN+.D=N9@Xc%rN;<
%#u3tZLD*]L+6^Kn%i$(+Bs>HHY8JsaI-#ls\KmN\,n\]3c1J`**a.5EGr+rW;"uQ=4n=CJ\KnF=,:>,LSoEi%@mFJG[K[dM%uh`K
%G2s5Ml`1k8Fl:X^pfYSr_!tfn@W^+.T8[7(o2c8iZ'+:7AcoeC23e2Dk_B)LP&g-WX(_6q1Y]gC46O8A(9S)i7"<D>.M#e0G8+(f
%=ua$*Nn[2YoL3+)iF35*;,MfOj$[HI5(b$f'@H'?R:MR&=0M%5ZVl$7PVTVPFFse-K?XgBCi(EgWt]=_b_X=\lZBU9TF?YTE7gNh
%H%,I)5Ie`fRl_MSkrJ*p-3sHWW^+X1V$ghlA]fO'YLDW/i2-<\fU$K9(!a]jU!*;)M40%s6V@$jTOBCY+N^ODNWBG!!_m6$K/d&#
%C7dJC"K=p&CI]@;18&/PS&R[gNOIo:&/`O*Tht=PXp7HAP2iI7ZH;<FoMh%2VX-Q!DkRC\1.WV_*&:sR;UT!laH-uA;;*ffpYiY+
%N&7"[d],C"UX[fVdNpULnNjVsIj^@sWRKV\o?75u`bILY'VtWh<iD"/pKC,epea3k<eo'a9VbT_]/aHsF*k@Rc<1-?juO0sM=`8:
%i1,.b&S0-lAH`@.bKPL'0=(a/I[)'!Uoq&BSXd5JAYX!<XHFsDpVqMlXu"rC[Pr);XHOE&).qF7iuWt,"uWB*f%$5NWjbi)UTU7^
%L>0!L2;p2UW!Q><TO\g6"VV>%BN3`VL%N!)GG."9@Ri?$<Ks=M;@:=-$E8-q%djSR0P5ARj#u5\:<@Op+!h=rh0%0(mH_]Q21(TN
%G8qH[cBY.09r]ggf,4?>DBW;#n0F@baL+uRBa%<$"O]eA9/D6[W_lN8]rGe$(HQ(6gf^jd@#F3>/(40pMomoV4q;ZSPgrReLES1P
%e:MmfWL^6,rtdUu<baZ&=>*D_PC.mQS\Yl$cD,I0PAj:<&34_-ChD6nVH9)A=4&B8I/s'p:FdC^i1U&L.j:O>ABks4n,r7#3I7m&
%"raL9!:m5F[^8/e;l$=gmKZ2RL:DX5Ug_u9HNYF6Gg+VN*,n=_cU^`Y%R_NK8Hd?Ea'FR,aI),Bg4;EpOWU71iT0G4O\*BYf'ncr
%e\utqU*LQB9WNYnJlKj`UGu+c4c@`AdAqb[-,SLQ(i)6j`u\maq5!SfdU#h49N3-PQj6.sU^Ff+,(Nb9_h161]NOGX]B@'/N!UV'
%YHn8d^<R"i'jP;RN9E#Qi8s:k+M,mW%&#IsOX6lNobpcAFGTKPcPFO,@S0??TgRP#:Id67.R!(F>h'rNl@oD!5e:bSaH!M5FOlO3
%&#+Aqn[:F[l$&agRlXCoNcq9[PU8`)3qM/64fa$43k-4f_jJ^)O&o@+e5`Zs=PQIRMe^S3L[)-%1VS[nVCikQ5YY.u(6,D"=K?;`
%5eB5reW--]k4&(W%2hk6p2bQlZaK\Xg9'c.-A9F`85Z5dM_1%4*2'EV1M8Q(D.$\X*2X:XKII6!iB_#)AGWdcS:N5HD%tY'`kBDN
%#AK9[hc33C=L3YO_**\/g>-.40?[uR3P^[g"W-[oAAR$P#pYf7CS\M+G:$LWXLq;BHV&*S`tXY_1)2TaZQ_>b@c36o5))MVlCfd3
%f`eo`*K=c-7r1B#Bk."J*npd!D;C3DoR(UMO<a`A8au.ZU8[M[&m=__bCo["ceM%cJi0$qF#C6;jW::6Ehd_c"JeW-E@F.2i;hW,
%k\MV7):IHS)%I0$TjeA;\HBe=lFR]uZ3d.qCicNe+7nI'$E<rk*LmY/@Edm%a*TFicH($a5=QJ\OmAg*\$$E7H@D,AG8ukY;CJGG
%m;s!+LiQI&kan>(@g<^\geg"uYTQh<mI6cudoaZ71hWN8;2a^qCi_XTqqXsjgVNR@*l_s_DS.XEU3j3$if=ZUDdOk$hS)`)&P-!F
%o+M)9`c(0%5CECLDnl2K;7EZI,\++UL`F5jm/-!DWZ)8ckaQ2P!I5RmX16SS/qOM>=Dsm/(0tfH^1TT207OC;OM'o!F(9S<#$IFP
%Qt6hE16!m(We!&frJ>]%bNihie+tHZ^+IinCO&"t&+rmISl3Md&(BSU^V3I.?i9a]?,h*'J2.YG.->ts:$c?nORGe2NEV)F5;Fsg
%Qs5K]UP=%ONDo.]8tC=Y8!X"Jm!PZp'2U((FZq%.I"Anla#0dc`.=G*>/]2@s*pQlI-LM91j[Yg0&j@n&OceD**G=S@1M^"4pBc$
%i7o#c\0X2M;560"3B&i/O,BZ2a8V4oER-EgS97"?a/L"jBMZ#E?1!cVD_14P';D%CMOi3sn9aF1r04nt5Gdkb:MGcAE(4EGF%0g#
%QRQd^s)D3a"Mo`?IVe*_GK:rR]85b/]r#TtPnpY>F%ETIZin;6%k\`Ydh`HVSSgD.aVCY$icN'-Sr3K\ST%>97`BZBemf)[(i,Gj
%.hTDs.Nj*IX-T_7]2m)G)+bNEaO^T_qM*p[Mh765RgqEFiSl-EZb#%aN8i&Mm<l.R0+V,0ou-rAQ+UkQ_Ubn/oL#]Zr&1t"kS#7G
%d4iG17h7E/LH+b5MGlo!hKo`H>WFde#ZA^?>/H5:,U^QV-XgaUda36V$)jpHHaI=75tg6p$noC_QKUTHaDsM,T@&YcS8=94QO/G6
%YENk:rEA4>d8uM"BC]R`n]oWK^5,Tap^SS3WHNoE;2Y"S),5)IK9E<G&W8qpHYs^CqH<X:[(F^FA*r[!\8?LZCUdF4F%h?&X)2]@
%`coRuV8$_s%uB:\G>-Ym#Slm!*ksP/%3&^kUM=3g*<_6iQ#]TUSm2;LZ8,]<*HdHY^02eT&m9]]6,CSIjX[IUn/<7\4<cu.X!8'>
%"]HZ&9nO0_qM9:;Tq1]k0(\-BKYnHA?h:#&R1Mh<@k@>ib$%C-<Kti"/\N#X=nShoq1,Xm[^h_a]@Xm`*I0?.%K[e"=A6,%^!50o
%V8kP["B@*Ce<.dmr'Aa[KI'),(hkNBhrG-h$&lu^rlHi$7l+I3iMbqc99KtaE6=FNr)(2HAoO:sZ!gr#9f](VjA(!r.XtpWf/XQ.
%e>k\=+b-%Unb-NX<Bdt7WK/&'m_(]sr+nCe5jtT1R_&4Oi1>uNDOs.5S=AZu,_Taqlfgf^/1>I2M=rs,\VShY"4Rc?hY=X#6Y8'!
%o,r:g>,O6KL)^.N5+%5tKCe-]?UVXgS`P$UNE7-$C(<r8Z(;@%:%:?fc,O:rop_!HpqW,-H\Y:'4racR:ZKK,eEK*;($jjQiFm4Z
%Y4VL2EOPB1ebKj2H?$qI>-H9*A#o;%i:P">=5;$3f&fQINPqR4c/<Q/@3$`?ZT8#PGScM#Ws+(OREHqa_h5%A*c,m%9$<pEU<qeX
%X-dbLj,`a"?%ofRFpI2_Af.kbqsg8WpWgm$`#g96f%bDri9fjK6-l`ukNetk7JjXkWO!*m9m3#)C2M>R/mE0Y.F'><?sM?9Sjf!^
%4,eFr_:b!LAi43Dr@[!`BRhmMHa:oT*p)/8]*^"!bmpl]pFp3#pZ$[Yh<rC*`#g:aBKiS^#&dirNj.8<nm"nnq_c<#m1A(G7N<=g
%0%/lo(;R>B;/%^`$U(PJV>B5)#uRYAju-bgTg@iC29jBWCqa]'U$:K_cjXDBG<aqKEg$2A]u_^GO8,LB<GfrK$KLO>1re;%WVeQO
%=$A9e)`0i`ICV-2bWd,q"R#2mJn\Xn<#hf#pjW?[ibt`NZ?P`=*hG_g`DR5KD+HmlloiaHfO,m$C^tZ^hX+qjiN'd/I+7?Q+BE9%
%U]!3`qinNZr'BTTF'kcI0_\!Cj5oS`rjd88hq_A;Wt)+KT`1Q%LChE1!nB]j>=:ul+&u\[_Q?&SWTmTpr[`r:/4oA&S;\GIfJ$O&
%U'"O)OOP+O?3i?1?m\;(XfG2C8K>2km]<D4Sn'k9h0&PCC3M]oi0VK=Q`lHFDj;-ZpXgK8(un)K;oWg/LVtf&Fo0k'.Pe0P%>i?H
%NlP9@]WN=@CVVMH/GDCFWe@5ga^bm]NYp*O#YbKOm"nEVI@!_WpiL&P)dOJRaJk)m_opZPGBJMPK!Ga6\mnQ@D/nRS!Alil0d')]
%f!0R6R'WbN7/`T;p2U6Y%t%Cs^d_c294Juf:g'$;oo2HJVlbZ?#kdHBS/g`l]:XumhhT30AA>_'eNF1O8OU,o0q]B*$Zi[n`D`LC
%2iZ9lXOX0$KKnZ!1h0e(F02Y/1=_Y4[rkL);hdK,#JmUh"Q$jR(XO./T+/G]I6PT]imNcnaB.QcYsmk_n$;X_hnK-ciUm[r;mVaI
%6XG5=ZKMUMHKH&3X[t)'2HR4sbeK3>)8]r3M)68W#";Kj0BHo<WPf#29kA20+]0-ZS0EVk%?R2[+*jA5hXIQJXeO<]#Wln):_=;5
%1]H#6%OEYq0qg<Z%G@VTDT-oU,#tj(QaJhaVKYm$>Fa`tN8)PNXQ2N1s(Zt^%,VD;Naa\oJW,)96)PZ'$O-'*Q:90^EL?>fDJG!m
%A6I?7)X>T0:<<A2MULTZJ*E*a&IsXM7>^2>m1SS&P5QPtQep-uk+;Q\-.VNobd`+L468:Ta$^RjmRbH/m[Eo6+EJbM=,La^CTXu@
%1odU]DTDdtTAa/,n;@(n'e(n'PVsoWXQ*41ZTO0<Q^RBA!?j=+5aFuS>T>5qQ9]Pn6V/\e4"A,&!1!Yo52DbAO@p94'!Dg8Q=]:]
%@b@D1+0B'=)b*2UK?sk.`n_G-(8e+G2.>s(;kNQI`1k@7Lrs<UV'eXO%W[Le:+6+!l2JAlX3!&"@FB5?R)rZK6A/!]/p'q?R+JT7
%LTuCdV9S`+4%9R.;GDb6;<uh*5kU3H6Z,[/ImkV:enC@kr&f"[:Uc4GG,-lNob&b$?nW'A5_.",d(UZ==c`p-15Ik!)6KUmHj[E)
%ZfD`#hZT:qI[O&kVcAe8GZ>TV^sSpnG1VTmE&3C+in_I2C@Fo+%>i.2]d%Tq3i3Roh@94?h.=?@fRuT;(G<&We-1;l^>nT6TJ56:
%:1Nqo16k(JRsg[FAfL+qkM2^rVT,nq<n#LuFpKaUND'6tirJBk8fZ#`a<69gMB#fcW-861,X:0gisi"jH&sAO5V#o6LmP=H,qgG1
%5XV:2(ErqsC-^'UrQ&*`q8GdEcOJ6+BFo+)iu6;&7F6<_J;7?l6Pn,#W*LGXPf&^1=Lsp*P6D*PVa0!+p;fLea;D2/N0t:.O,\(6
%n^JF;$j\eb\+3P$EB^h<mW>O_cK`iG,.R9:`b0Vqo;N<!l=@uj=/Q.=?_%b0RB'8<mp;V#q=<'MH/pBCS24sMMmoVh5>H3MZ'uB+
%^F\u^#gK^XnCO`a0tu^;[He-En3l1eOVo<2H*L["1Jp\rRn\a]gj+`Z!d";'8\A6(^dM>b'&1[")C%Nt$9Q^5.O6LUVmsA]mN5N7
%`X!r].so\nEIhIEms+^;#`Q6rP?::rOiX0HYWbNd]-XkgZ6_5J3k&\4,lu7aFg.Ya+.ONNU`c?[(tY(,D#URZADi!X.CE=spqdZT
%B81E*GC^ie$lj;"XSb$R$tQ&2A8+%J:T0/_KJUa7P]:m4m/hkhPk'(@^Pnn:$k6>0DnIeWjS`[h6>**ajH=t2_Jpl)l$#qbT@(;k
%5,X9FS5jk3lFc-DX##[AGC=B!p@[+XgXkW_k:s*om"6qe;Q+p3aQMr%]5&rt33.qVd$"uFpadE&KtfGN/!bp&d4nl5k_5$1")<6<
%k[rV!O`!dV/pSpPF=Hj%GNO:iiOq(>PB`.b%L6!Q@^R,5$$"oK:G=Z[lTnM7dhMhg\W@$U0r:fHDG4tpkBBu4#QH%RKC31'O8&9O
%GY/aAOff@0]_r#0_:lFpSFQ:hOQRce@uju.6Y\:f;#<<!TNS<))jHU\1G41q3a(;%a-h/^6<9sM'^mI--`XEH+=]W%l>9UD)k,Y1
%?Z$Q%'>ahU1.Ht^E?UA3e\UgCqDGCKI^SN5$/0'l@>Z$_?&gsd1?jY,dK;=4Kd(SUK2io71BQ#d8sgOH,CXJLC`jU"OjqQacJcaQ
%Bs=8n\_<HPH(lDB7TE*h.+P,lk@-W\U"LBu4UR(<q_ABPnVH0m<<oj1\8<W3Ht%^34%W@sGpe6!N\'`:dU4V-otobneq\N3iJuAe
%I*+h^r*_M#?>uHtY_k*?&mi;r9Y0uTZ-r`'R%^CQ]O`P&%pifs\HC`qeId:mZ1.<qep:!kFt3T/:9Dn(3NiC(Bugl0)j#`U-]sF(
%)hC?sh;NTW9m2<+fq@:`'s^8J0lNc3OBNKCZ+18DYL0gnHt4^b`XQ&1ejAi"&o^R.A=#7%j?N%X:.4Q<)93Ze*9',E"ME(3:d414
%X+STa9?D?q*3(L%'6!W;fBpk-S+@F-7?f\HaWgJrMhI2rG`ahDnRXG&M(JK[][r5X4YOj,[aAD[b#miG>2[(n[t_'r"8b#ad[8uq
%fVOGe"H!#.7<.'(LNJNCb)'b[AEcWj_T667h$NiF3b\tg"]2)F1?[Vel2o;uis=`m_K$X2j5eD#GjQE2.^.#AU.Ia4lpe6R&]Pkf
%kZO3LAQY4C&@#<K\KMoc$)@&e4tCPPR+,6"b2Z)[SY!lAcH@%Kb35P(igc<uij..=-C-r;-pUS9*1VF^Z';jJn]T,7Fsb"hfB33?
%H$)#U3F&*c=i]-+"KV=oSB.$McH>HS,0m]*<J;k`YjRboZ:>^?%bh['M);(P2(:iF@D<RXQ'3sBa@Ygs4Enf4aUr$TFJ83(i$40Z
%\07TZ.*Z"^I33Hh_+u(D8og47=-Ej5*j4m.7jt%gg=QLONu+VSKT]K(@6I/Fm6#KL0iOb./@L&X#\nYm*@$bNGP$t0,?LsLbKiUF
%.RKYhNl(]"!n>OcM,#$i.F<Z3h6(mA([^XIr:3auSI8SX(M?,/LPtaIHB5*_,,_r/F!?t4X0\N)Ko>QnfXBFm8Q`#8q]W$!j]&0E
%.4GG3Wn)1:V3@@?`QE(Jgq0u`&:m/*4SAOj7)=J^Xcb(4@:m37Y(KHGEWEt:(7@]k&'.,&X7;-tS^h_#e1;Mkbi?]K`&s:Fr/RmC
%.]6o!*+ipfGiF:K\^PJ/F=uW(2k`N,]aiOCiXKRYg^_=D#<4g8,E]NB"uIt&@`gioolIhOJ!o7s'>ge%YrlUJ*fd%L3\RfDkos[S
%7n5p<`$4r=D^Yo4T,3Yd;W8?rC;<MPNeQbeggggJ@DaKUbUm9jP8WOP8r*f28m,5]Ql03Z>Qp%Qp^"RG2_jbjqcRBW1Hns^DA6DM
%:$t1dBuR$:E='b;*93Eo5U7)";Q<$(SQC&GLK!ArK$VnQ-]dSh7#DfqeSnFPge_-YZ_3<u:Bp+h\Y*Tg^RCpOF$5>sM[$H3ei#?L
%X)k'"i)+$&Iko9b2\.2?b]bH,/=nrO^\uq+`+n[g[-,';),Un=UL]Lhj=4TVoQHKVkkJ`K4D*XHp'+f+A:D-QKJ97k3#jiJMd3BH
%:1pVZWTG'c<rT5]`jT'M:kcst;f6EYj0\)#2^4#YOUr)dF6Z5pL"&'."e,A_K.miV>;M@i<mAMq*E,gT`n\fR.#;rOhjk>SHM28?
%B*L(p]-$DhDk7U'Ld+EGS5cX)7LZn18V<%1-I-,AKcSSCn#2Up]4!7Cc4Q+k:`N,X/@nZA`MY8"_;R`3id,Q#P&HdFOPqaCcJe3R
%(/adL/SFG\mK`J?<c`KF4a3nd,Kg[KPV@@Z3bcO#lmd#EmH`hYN4DV5i0O\hE_6%FbF\umpB<tY\3.]71i#H-9<l.\/Kg=+IAM/7
%#7E)dl-S4?XQ8."\;-t5&'j;A&L#ZkG84$+d-T\<cjXDBG<ar*d<A'G,Q9*"7.sn4NCqKS`"?;"<UsD>'nA/-j2[/KgZTXJ\-A7d
%UEtk%B83tT[U%)H_6HI^V!VI4D9+Dt60E2]F-A$7]8!ji#M4TT(ot3ZnX^-'1U8"j7gUDTXfJ6pd<Uj6EfIh+T!+K:!mKuC%\Y(0
%eY`LOTh+3ibn<2@:Ir"b;em6Z0K!+LVScmYZ'!kN[1WA5g2f4<OfI3FQJmB,bsrLF))h@M+1$T_[dJnGOp&BA`W:OE*3*JZ7M)gs
%?6b:tY%pG9RWJUi)S5!&17VlO*GpL[:[jYq26FH-L7-u'gIjanaOG.M[^Hdc9F"P:C0I)00qU>iAGWbVZpW=)mRI):e@I$M&V#ln
%lH"@40_4d7dYQ,Y8t8P5p!odJ[bB*3FB2,9)LW6(^Vk4in=uqG$Ff[7dXIf7W]NSq=:S/X!k1jQ8O\c(H0c[rO'm9$'@H_Cnrds1
%pL>DnLFuBpUM(..9E"?<*+d+,>s;Wrl%U\M'q@GdGXU`Ap(nJFm]#q@jk4"sC"(pgpWHqClGN3hn%\lSJg$IM%J[R(rp\m]If'*d
%5Q()=J,B6BhgG@kj57WOoKeaXG>/f3'S`O#qULAq+.nS\rplCoJ,&R2%mU'YrGTFIrU5429;cY)jf^jqI/h[jb0>^dMnf,IpYZ!_
%r8GEh1V+1]MgtcEO.Y9YI/,YqhXMod6JqcGLAl*4*(7:tM"tM-qQ%C.rhmA`s6fdQIerL2a8b`-pV6OorV&N^)=dWVO3eQ\(P_NG
%^AH/Nhd1$RcfPW$JY'@M[i`?]mC0FrropWch%)`?;"WcYci<='^AH`AX0fO`8cJ5d^VkNfnaF])rS+qapn-IDq#8b2?MO-Y*D0u&
%^XoL+?P=pfm12G\mX\2K#;[53[SX+;#'@(%6!(&>oeq#JEMA%8'QsZTQkeHZ)er-c`VIs`*KmpB,=O:S@]BWWUcMJ!boPr`EH#ie
%)%daWS@di\7?"4$UXRktO<QR_6A_:RR*Q5Mok9F14YtlnEjo^'(Q0&=[&lVXUMu*<'OJ$=-sXBP30g%e759.b$@n$BLChJ@%5c+_
%mk2!@ng5KZ2NOnYXGl..pao25X31kgYHleHBGTEg>HOHXpiDqD>spNuHc%8#]U,?/h,+D?2C83(#PFZ;e%JD(@"(Dl)J.W!+[POS
%)+f=>eb^<\%&XkCB*"hS*F1NngG!e=b6Z/ui6i"N0kdMA\Z't<?:`thBm@ur8E#Z*HpHIQ)/*9BpRJr:oXaYB)d&]j%J7n)Bo0Cd
%SZnH9*i$#)nXqkWL*ZPu&3%Yp+:E%?9]<34Uc:cF0U0uaLhu?J@]qSic88Lp5cICZd&7FX/Kh0d6uQ`!<fV.=C-H%U9=r7ak2k8K
%Y)MgEaoCcDF,p<Ykif"tIGid2e#lEOR8.sk9F"+6YZ,XiAW:u[;0!Xq"gUu&6:io/*rtBm?nAJCN,+NVXMD@a>VbFJVI&<i.-#\+
%K5HE0`3<@:D2;;Q^G0;I6Ttn-A<Y;X78J^k3_`2N:_Kdg6Sgh7p?O-j=eHVa++\j4\X?N;cm!$f2BCCpG4aA?,G^!log"::HG*d%
%Y(H<+B&KJ0EuDGa/3FH(]Wj5IaQ8Io3#^scpr"g-9MQAogS+hd2pe3oIJi>c,'9ZUQUR&J$nh*i$*kSD#XrDr=D>4i_2ScH7(]^`
%kXYI2";/u9,%U.W$]!P;Xk93NhV<N`cg;=Gf'\=i)B"@@QVta]<tSF;MFMsqG9!\ne?YXR3G+%K26&@bObIm-4EjZUj3nT/3f=?B
%8k?]+.Gg0gh&"ah3YN]2#X_&OD8n-o#@Wm.%H-'4Jb6S#_P;tuJi,K_VJ0qj1@s<.EH5(bpOd5uX1A,t^4O:*of7eP6R@B1@?%[[
%=[R?CI`Z%lUkSpeoEnjL+\t_,j6UO*5__fK?)-,uXg-c#!I/a2Da1]8Z!+a]m/pS_AYG($m$(ut\+W/M7r_*f5U"9Z+)_8H7J9Q=
%o^>m@LqnS9$[YT9Af2'oM?P&3i.2MNiq-4-Fgjd0rX=XLqp"Kcbs4eYnNqf],+bj'LR<f)YL/QNObqj/Ubb)#=18^##odMKV.YAq
%!mip"7+k.I&k?D%M6UBlrZ/;%3BW*=q^>92"Q1%L'-[+f]bs$0qmdl>GfF!*%GphC\!rF&)Ed.oHWS#`F=LI(W!L\Ds,A%8_%&tj
%V"Gjq3:r/5Zl;dq1@\C=KLUeXVZLct:@+FQ1+nE(!j`Oj/j@s/^jlKmmOUQ<#O6l4<.['iQh^hL(_4h\O?"J-0;:JB`Q^^tQS+.'
%K;+W!MSd=_&q]Yo8q.#9m;YLuNskP<@!]^%kg`iAqa9&F5Ihrl2hTCA5QFb'iV$+:QIr7HQS743#D]R9+qK)*jdpRTO[Y"WMasaa
%E'X!8Z.D,:#VeC^Vd>sT:h*"611Rm/EspsR4K]BN/kFV0Gqb0?&(pY'%\SU:2t['%L]i4iJ.*lD1_Rofn>[]jl(pDd:K!=-%QM2E
%-78P*!>YB#!u`HT!i7$eV`Z<qW^Nb$?cb<Z$(qhSmuZ>gKM8T'RSLgK][jB^"f,aBLuY5^\>P9%Gj;`573T+Z?E?/#=dScPW<#G"
%f<Tf.s,P8oZ@g$1LR5b5o"h?-c?(2U!677#>=oARUAU1JGK9QYr\uRDS,$r6Y<0:bQmobdq==ad7E;HS@tIrPd[X*'&4XRiaFZ#f
%,[amo1RpVmB7%.DQa%W3;Ir)VKOVC#%EW8Yl37L8:b^V12C.Os6Wa0<$)sTLriHFM-t[OEUO<<2^Q+Z"d1MPt%J`QfNE%7aU9oK^
%5j27ai-+SsEU\V69$)hn#N:!6N@hpWHssOha!]UQbe2p07>:O!mb2u+Fal;m1WD57dMX2<k_#\H]@Vji2m8AHmp76[f/%hfEPcA_
%Oh*iY;]X6iG@EgtNqhg.6ECZC*uT+5+AO]`(P]h[j)!Ij3&G7kYK8OO8rZGmZHWi()14Yr=!9`IbRUc\pFoWhGN1i!YVWT?if=ZU
%DdOk$hS)`)l1n?M>dR[`_$4tf<u)eK=_u-[G72^pTm'Hg9Qh5'7M"`#O5!B!`GX2X1_8RObo=cBDF7Y))0#!S]=#&)m*FDQB(p5<
%FqiZcrFl5-[Ms=Tq=![!@mCce\>D`XJ5^QYiL::SK;JM96/7.kTs]jsU2Nl)U1nC8:@h>hkEt,.#PSdACUYNO'aeUG35Q2(">=,Y
%$/W?h'tepZ/miVi)1?0L[rL&J%]G1O,TB:Z>/AlB<0&tb%ho#?V8I@naIohc[q;>ApDA!E6dshTRJX=&lS74"cg=$"f'Z"Sc=LWV
%\]#X7$XUPB(jZ!&Br'WfM0![s)>?O0Ss'%A`8A)b1Yf.D/<XuVf/^7.\UCeKmQS.r[R//>@0=BC#kb*aX>)dr9VTV;KD6eIbF$FB
%?dFSI/'''bWJBc(7Z\6o6hl;dRonKD)MCH#R%Q4Z8jOB>n1B]Q,,*LX&-).0E3=1^FFDpb?Ycga[Fcj1E@h?%8#5Qh;ZQ+7S8JT4
%4Wu<[/cq]KE1h'h&tgDG:pf8\p5LG648oG<)R!Xlr:g0em.c_83B.-C]l*aTXol]AE5Gm%]<i6pgfQ5dP;-;T5;LC9c9r)f*'e<b
%h0)FsmA%Bd2,b?a.sXBV4?(i6%/O_X]E$+)X!4/?f4Qi1H3r&Uh@aNt!4>5oE>@X;59O)+.JZ.!_4IC9N:%MELhRoEY+mE5ZL:aj
%,9eXqClhgT%;+Cpb!WOFcqcLdC-XPRU<;""6@J:gK7(:@&0^dLcf>mV4d[jVG-')"$sn.Y(i'pA^lj[[CdmREOdQpuL(V#[UU%CS
%A<k9cdZbXkKH6%<SK/$KCEbUrQPZU$C(q?BSTKSiGlm.[_qTf#DFeDAg^pMA3RD#fHFklZRr/q]Plh12:C/_H%Oas:E3SMe.7n,+
%"NfI"[#7Iq-rCJ&,bRoK`VS_3\N!LPCJX!PV)W?dSu'gF99J>#BJ3[b&_D?T`$oaVAd$+d#5Xdb8:M4!h?1%tF/&861.r3UOr=C6
%.;#COK@AgdMLbV2-Wl7oDTq4P&i1.h"U`ef&n,?^P*rura(P_P[c9u5VnL=?>_tkep+f_/4e4buKb:sO/uO2fKud*<G$Kf!Ya-'k
%3\7YR1p[ZJ1DYeUM)!^p-T/*Y1'A4e8np"H5jG8Q=!?_'F]n[S$3;==U03117g)3Vj"c:r^T&s*>_^T=<D(QE$rJ9&F&qZ`*2mAe
%XM##KKl379/Y0W@'[kK2WG/$_<@Uohfj.QqXGfe"%2#[d#<s&tUHmk@UTQ=BA+^^H%[`L%_]?:+I@`oTqC81"+/iN9C/nmVk-9B9
%N[8eaDB3.8nOX3dBf`&D=Eqt\@Z>0I';cgb!H)9b?$aCN>L3HW$8kd8_NHl%_5hAkn;X0;7YD/3Q[L,M3o>LK?^^`qPa\7E_LpYj
%W[*I8+5jr!S,2Bb36T3!C`6kG7U[m,4'k4HRms_QA5:1b5:3XGGh-$;9]W/M"_2qCJT]=-%/Jr`8SHd<,Z@'e/jJNmGB!\;]:R>0
%'s;Ra8"(EHUbdAD9+FI9P^.u#e8(R's3J13rV6@6ro*Ci1M+dJVCBjqEP-q!JQNA:]V`')\L.'3m<B]S(pr).=;j$&!).bI&E?O2
%cD]c-Sq;$H^Hq4`fO<[3G$'<$Lb:gJ6Bptk:U%>2dJX[mK(Aci1CD:0hMg>f7!Y&7TS_UaaSEB@&m(2FAODD9@I=1Mam,KZ1;M@&
%M<%>iVJO2Lf+tmO+T8h"F\8q#/@gWR=f4k&(Bmkl\nSQU4!El6:6f_0`Vh+mM8<t:XG&pAOlZ[.m(MrMa/c'o:_]Sc!WISuc?aB=
%j%9G#*D^!/,'soK!OYrHQS/u-E:F.&[,\g'(TAd7qJ@OY`j:mpO2TGPEPJC*!4$r23Z4[1*g8%gToOSh!!<n?n2n]M,OuRj+'Gre
%*Ygm)Vf;VGE]B\>no2laI3[Op?'GsX-kY\AZC//LB</13I%j;0eo'RRqka]Mh##rB&O*')@q8<!<oKEtD!Bh"1']g\a;W4,K:TM7
%I';gMOJ5^W_D2I=i[NY"bL=^FK2fJ(5]C:p/529ke,1B::'n!f2(lKm8[19-9uKEB/l-$AN(&K&^+:uV1]\$YUPPq+j$k`TL.],C
%QakV(oi1Ph*07q1/A*?j)fX4FT:caX;`ob)OJP+90+M3,L%^/<=9q_^7`<OoM^Z;#[YSgoB47nB27%Q^n=ln.$5D6A3Z7>>f2-_I
%Ug-mAAa46SX4YZ/'@^u*1rZ*X/-(t^LYs^55.2GK/5E3HYc'OA6sV_o3.Z?#`Gmd6;(<fV9\^H8F5Y,=FRMik:LP-[`1p@G,th,R
%rkE#jeoY_h^9IU*;Tdr4WDma>_Imq?$W=GEijQXSNX2k3\6tg8p(^P5%KNK'49Fgn@`^;3MVP5O]qb-.23[XmH'^:N7]9PL`<7RA
%-pAOjO]-rXDPA5(H6b?A#/uf8l,7S:"s&K:as_WE^4K+<\mks.h%ot3/W5<]E`Sgk6!tB[c]Dm5mjr&>#[/2N[ZIY^/:+=QU.(UO
%G\u3=2eI2lp*3,'/)Et+2qk!m]@ZC0jY]rl(-=k48#bRe7>H4F^.oFYAoX#mD\5hLDd3(R4&2]T,P><!G31It9a"pE713CE\V+ek
%UJ,=f4W5$93EC;9dGA91Z4O+r>4$^4&O)SU8W+Msa:O6:\3@bTs&BC@C2YHkCcagH1rr=mf\>TD31#DFpkF@,1Mh$(Zf<-gkT&R\
%aJ-Qm'gFWq5A(fU;QUIIrppU%HsdM8%Ujl!rBjif9OWGP3OJXTGoY`E1]Bg_J.I%j:E0Uq4/4.aY2`KsJsKomdJB__R]&j!mORFI
%ZhZZ.>m'12PLd'0ikRUg&;a<E`j&B@M]*`I@gfqT/];I,q*p+V'=E`gY=0t9eAg``IfpRNQMQg0c%MZ!4eLq.3G&_?Dc%a5f1-7F
%]f?Gig%1sM?UNTj=bO;_j1gfmO-39;cWc8k0So`^`N)Bbr`KX!#:BA,K_PZ,q3)3V00+ofV:*btlR*(#.n1Gt@,>BSZh9>o"B=)P
%Y(OAY:.-bu2<Jq(%af^pd+CbQd<^E["cf3K;liN\lmF0Tb!k^OIVoU0[WO[SIj(.:G#j3K&+j1APY%Y`VR)@1ai5jH-Fb6>I=+s3
%ojmq[B&cU@eeW?Mq*q'[5o'1Ng`Tlji[mN>7JQ05hL9>QD7+OGg,"ebF.sZD8'-@LY7h+Y?R?4g^.t3%kM/P'4)5]eD=+5GMB'tq
%MiJu=^"(\aX!K=<@Ki>7-QRY'YoFfYittbUTt(WsGP0dO3ge',F/Xe:r2_$P^1[3&@s2D:f%j_@ij='$*:ZOuK"%r47GbaJ)<pla
%g0A`:qgts4kga:PmT's<FR9hYL2qU*X=].FGH&0[HV[@SC(`\cH8*'Q/:(`n>EBSR#1Y;8\$i`1rE6c4m/F*lc.KD2qpGC9m6Km<
%qLBNrDfgiUHB=\PjC\.;$%N3Tb_$1hj?7=g[%INC2`aCeDJfbU6Z]U4e:SSr6Wu(tNUg$iS.ak45=,jmGb#t%q`7=$kpo0tMEB+S
%H198`S:[u^3@c)f,m&O2^=dDD34hYTY3--3dLUBP5\@VgTHXS7F"/^7=8-TB3]EZdUXGHGa8$?dh,3245=c<tH^uAOp*H.uV_:p/
%C;.M;[DLbd22HEn<=L)d<Kb.c0Xl1]TiI>W-0TYgKpsJaF\P1>1AkuuVQsqf9i_"69bN7tL<h[p_Z_6<b)La!CGiUY=O\o:hkV1A
%M>@GTGX)pCEJ,2>(3NA^6IB2@cA(+.s&L^QQdb4fd2Xq%L1Ho6>d;#I+ksh[o]$OSj$P<>Qk!(\L2r,8[,aPc!q@(4F@GPjABA!(
%^Rr.DS1R@4R:Y5IF@^r#D7E,UrTH>VqcGb$((t5I<g@<rUm9JaJ1gJdVP5amWbO[X`aNs;<&?36eF^0.'r##T%bQX2%Gri!\b)bT
%#?,6aQ)CHkO@&1OI>aRq_Q4VT1CHG%-*SO;?UMjPPfepTJ[!@XE)UU7`ApE8D.`#epk4sLgVLUUb##[\:i8i-<NJEJL^IA_N@bbd
%'5'l+L.%H7$/UaLBdnElO=8#9a42+A@@<!'_]f["Agb/</.uM.@`gVD6He@kZ7(A@/fn\a7/*JT,7]]o'u9fhMg3:pP,^j#G9Z5.
%EPUR,5RW`PNKa2ME^=oC2In?Z24Ac2i3)%72CQqp6<+kC/46'1EfiPF,YT7XffRUjG_Jb]Y#I!_BuG\.T8/2o>]mh!L^&R\gI[tg
%j>PAt:.*%9C!7Y$qe8B2F5OtJN=87@fa;X2Ud*ZYV+n^_RZ9tW<6+QblOM"5EFfm\T2$g-Gn4mSD1I3;1eP;Rf:jYh?3RinIM/kB
%VpV.T'ja$Ch<M@;O#tFEZj:DcPF_e+6^kg(^'NBLLB>C#;^@$J_S63KOXcR.!3/r^%$"/UA-[o%(s\j/qM>8Sn9"Q'4Ge"f'_cX/
%!$.JaE>XudBS2XiQr/@S-@t:`([4o;kk&0%e/8SthA>?!nad:`Pc.CPK_jE/pn]JRc=u9-AliM.9s_`poR<=Tb@*j9^j<Tb\0?Ka
%*AWus$"'TnF0I/MN1mgdO"1i_G-$)(=(F_tYEnR5N)1>#EjHs"T,E+/MN!ps*pnh)([i2V\64q+`rKK5MN!?RTeFesP4tdKlsuhY
%)>a0,=clZ*[!&c$,GVrX?'6&6cZVao=&EFmm#"2qTj6U.OpkJK;=>6VDgCIkZn!oIS\96Z,U9$AHF?I%N\r#Pg3-%WGdYs3H7d5E
%ch/0n02$=Z@s'E]/4iN_abM0&+Q#Po9CeZP?[3QnR]Nc6FY?$H\70]FW_I\dKN/Ef@(0f/C<^j/LlfEQ=jAK,7$,o8JZ1q,-<+/;
%%]==?dT@qfZ4(.V>h-O._u!Hn=Q!I('9@R_Ccg3+AU0VU7V:Nr1P^ro'.tDk:tCgnjCP6b5R:DLKmR=tiain$E]ALI,[2BHRI5]8
%$WV9,%C)+Bg5O72?@.sE".h60&d0S(iqX5h7;3B\_=9=?7@uI0,R#Pcod8FD6b8u-(iSO0<?t.hI5$=tC_#tn+WeCel'!$&mkWl:
%Al,1[+X*BIAuK3R$tc]/,]M(n6p6HI&YZ`t>?V@=A9d^b:5('b"?U&+i7;j'ZQAqO>Mo$Jf64Fp:F:XO#SKC;\-_$>4n?BKfa]$Z
%Ba4,7F,nR*02HF?H"[:*-k9:bdE`t"a&I![E*V:1YiJN=[>V('-3j^/ATAt%rqaR:L,uf<EH,ZJAd.jjWW3Sl"0%KG4AE\M)KM)H
%EN77D7"fi[FQKi6#b!$;@+&KqFI_Wm\h^5IO<E+1ms`bOZdS#*QC5m-(uUd'E_f80a&`$GkJ<]d,7))Z/Z-F<j5fMm4Z!u6`0tVZ
%Md#<Bcp,#CMDOB773+Ii9WfBg:9TgdDit:\cmu_h&8t+-PY3]0VI2Yd:HA48F9HWKo4HkY-iD1+j-e-hNeIWahdj7T?KAfZ;YQW)
%Q66,#.mmHGe(FQd^\d[&j6n$"Nq'YJ.72tp$BamYL.^8KcT!+]ZnR2<!VR-"2ifqKJ4!"sOs&et3EQNdT7nI%!d@#oR$F.0@tNqC
%/.L2`e)>JZH]Hg'58PC@TEB_-,Ne8odM1BU_.&?Bac:\RZHf;4&>@O3.@\/%HE"gFK/5*LUP<I^n.hh'AEK^=a/Q,)ma:FSisN,B
%a839Yf[&7mmrm%)f1k)==8qMaLLTd@d[&qCSTjjVE2J>1oJgu#BulJ?OQ9=)`M>WKl3Z(2#43JWEF%R)=:V_d;M1=;2/jTXm(gq-
%DPN"*KL5*tD;Z+UeZaNu8%b2dgg9Kdqn)=snG_Hl^NnH8muP2,eHbPcr=9_AJ'IlYTu##M,l/d?Qe\)Arc\m$@![VP2%@cK?df,G
%6#p:C,QH,$?Xl.kco:sBDKl-WpIfnk=[F@?fM!9;3(AcaCod%8p<]ll'\d@C9]2Sf('V.b01P0g!c5:<fl=>dZu3TlTg=<]K/8P(
%d7KmaLuc&La2%k(h_Pjcs8'LRO:nkF60*IsCK<bkK2;:3\3r%`oKq4O'J4t2#UfP'qCW*=!"_-g%8Q[9)NKJ3n-nD`co?_+ppN4'
%S]uf.H-;a+BA>&\e$r\VhN310C,4TJY6sEr>pt"$j\j,>%G/UYr"Eb+iD[Aqi3[>^1Egj0Z>LL5,5VYO5]KgSY.b*lk"TnU(c3G0
%XMh$m)QoF:J!dE7#[^"W/tI=^K:D_<2)?EPfsdm.1_3^gr]"3Dp<n'rTpp(!*%dCc)`OJqNA2,n*pTUZmObE#^>mc\g:5_d&L^&Y
%Xk@"kioXTe?e`i]pZCjok8a@]-EU+8aO:F3j3Zso<pp6d;1p9)cC*^>Il)9ne@P#f$GI4W\+O-^ae8748ki2E5^QZDMFbfP3+o_/
%(j:D[Eq\qYH>noH8]-[!aUC*a#<Y@$e',qH;,#A>^m3$LBq:";/n'HUbJpD8QEq6'#B]iN*36Nhd$1pIFJ-H:(GkLA(<[WM)r='a
%W05dD(0]Rh9F$Fr@C2;f"4i^O4_99c&VXE<EO'5oAcL3[2=`B)i_Ft0SF;Z_6OkoubtG!j^$rI]1Cu;0A,Q\CH?G8%"r^N4H4`!I
%\u3=QM&K:,e79oudfE_fg62_oY'Cp!Jq0\<SC$X$)s41[&&Mr+@Pl=Ia=rcC-c_Y;-=<51=pEh(>R\9#Yo*7b]['%e,3]?=h&iT#
%dCI1WA$(qt\Y`;;M3#gsPa-FNB?tm7ICEgM""cF2'$.F<jcl;<,LCW6Q9[5nRf_u+[*SL+2Fk=ol=u9g8JW.f:,YVf%]nmfPTpm1
%_/<m'-4:S>?-lg:,20!hmN#J!1+I4=[JfaMW8[5XTWpp>28n6:+3j'kWtG*4QU%m#m"`k`*Vj^F0T2St#@*^0[Qu<JAY1Vo16-&s
%-C(:<>lkK2I[j1QGa?"";(ea3.@f"#)WB3Y_?!!5IFe6!$`-FNmuD92d5sYYT;C[9/Y[e^eJ58jE&&'i&^:UNN_F)Q=U#.Hg=hon
%B0h/cCJjd`.$B(dr)/+M7&^Y\e3-h9[)4%_)9f#:c,)RE].#(p9$r%XX^lK&/-E3)GLE/5D&?hs`jl0CoYKkI9+>G<<`^X=/>YV!
%<n9Bgf_HkbJOL<Q`scJbYYb1nOEb4+RVG)%HUdjcrE3mKA"M^o.I$+jSsci[JKb>eTE\J6"53K.BTh(-P5ATEc+3[/P8Wo7UeU(r
%Sf7_>Z8C]?<ZQIS@R"i*gG=";/r('9D]&=eHQte5]g<MEHN6M"_8:02FX&;297*(EQ'J;N(T`jLQ@+:LebSoK:pXdp%-`0?R3H]p
%gA\_q'GseKDX[Hf#u5:6XSW!$N3%]<2NuZ-Zfe!77tj"JCefBuCMO3!$epc.mi.geU1nMjc2+H.6B&%t_^3-\IPk_L@p]I9k/^d4
%ls/rD5_05mSM7O(ic20[*FU#HOT@;dok[4hh>P#IR<`+j*o'#Gg2-)N-RVuHK#;f"Jor.($u,opJZV!+QU#US.^67Ti*StJ*aosH
%"3j]go]dF(%3ukHo#murf0'S'b7_B`;uoMCW*U`'TJ?m-dd&)9T/sd%*s[S!s7dCED!7"<;FAAD;Q,ep);c8"B#k[*gpAXOOTR5l
%UC@5RJAu^9lK5?&!ciPE4$CCo#:MKuil'j[GQqi8)&/1.Ba*#FJ<;$<=dh8\mi``Y#6+*7&eM/,i"cJE_\J80L)B$a8EZ?SAO1E'
%Y!ND%(qmmmW-C$=g38<SJMr5o.c_.-Rcad+LrC(j]<arY\g8Yo5niNVVA%H@l916O)5kE'D*C8q!.-!>9`]6DHPR=t'%Z"Y4_Tmm
%aFPh)6o,sYEEjK]j1q1Nfg+'&FEG"H#<cl-f_G!!!::>>!JBJ"gfUg]I*mLW->!boG/K:NOH7g)BE\am*]TS//3-9X`HSQpjWF[F
%PUV",Kgl"b4J&2f.`tg6^76=Gc`3=6B_",8qQ)dcANh6Yc:I)OkuQ^7Tdca`\;gZ+3#@MppGW[%Z2%DN35W2F0'cT""8ip%U'%Y/
%XZKZ[3*h?g,gmVWi5k6%Uf1hkjabN2Z3Z$$@oGa)o[q2cYu:fi'`q9G:@4.Q&-nGu`KgR*bn*2aPD=c9Ai@NSM[AuS@-5ECF>&2.
%fqVJrW&PV*F:j.]J3"?X_&]@6YFj?]ZU>fhM?6DeT9/S68dVH$r%_PLC\=EdJmFnE2>A[EFX5Tt1;+nAhFKs<W&#mlJt>E/<uLUA
%*c1=u$3CrA+p:<1-)"XtNjiHklgijKaRU?#^+hjndg"E65iPKQTLK)Nq(C*Y<?2@`0TaMa#/N$$\3TNk([<=>0`fF5XX#].',-SW
%7@fKq]\/M[`=[^BN%7gj<4Xpi0Gi4`6ctBK5kgXO71a!u,?O@cYJN!?4Zot.=I&&ITb+*=8?IQ6iu/:VR,-l!cm':r=_3nF.rbY,
%]"U8"0u1M6Y_)'d*5)'+.d$;Pb(9QVA<2"OY2P$)R;\Cg8I<669=pYC?J/0rOa:7c&dN,p+Uep)6Kb9Nl*U?-\_@Y3Ij-4j#2)Fp
%g1+,rE'b4=Kk<=!(>fF%X#mZoiU!:*6iKL^73$MWR6-D&FROnL,SNY<jG!f5(l>#[-Sm<j[n%7fNX&[Z)-0R:-1eqQjoa*o8)g0U
%#pPmiZ6UmP[;iIX3'n:7R@#RZ&.?%SF&SbG$@;lsO#>-3M?jR!Ac\n;2#IR'Cgg0pUQfd2[(;nEgonUU)6-;^7<02eLu2m2Lr@DC
%Q&J^HVW=^M^qZ`#fWlZQ#6Hi(XGJ+-1.ssO"/Z=F^lmmr71"Z;\BCX`ZVO#7^#Kju)N1^rnfm&EeA=;i=]G'08[cuJ.IWC//Wlh_
%"f<Dog`_9&1dFOskZ-c3qIFi`MVjad+Jn.BI^^$JSLDDa'@VPN#apLS?4&gCF=MZR90]L#'((]2*UcJo+`_%SB+W3dQRR\:oIL@4
%bV4giK0:^4n@+'c$;'po,TE*7.]?tE<@3_HT^oWC;J.c-&ZR5kpf?6O'WJ"N.8YbM'XSRebW]>(/R"jN.;Y4UG0G--O@@R7c5eRT
%B@_oU0=V^O-:a4ufcR^H(2lteTUm^-EN1G>Rbt-jSY"4k@6/5R"%mSB!!JXj<9R1>O/?lpkBCq&io+H&\fXG>KQM6pOoS<[.+9V_
%6.DBJA4Wj^&%YM*JFOak'd0,UT:`72WSml3URWBo,(,7K+Vh'uFg5c`+_g%7Mr_bOC(,]S$/qRg5_6t?9\7TU`%u6RTGXI)3mldu
%A]Au=)PY&_ms=WDo`^E[T4'Vb;GP(]16t_&_e%0M:YS0CBqQTZ5!]:\=;DY2$%`R^FR7pf6TOED":%;_r.%7)/gP0U.&a?sZ+b5G
%D":DeqRUnd9!Kk)2HH`R?"rqgAN%B&0rl1jAj(aNmr-1n'Ji5e2$P]'J:*KCJ>Od'&B]4Z\DF'[+h)_:>i,jfcd!!t%V;:OTKl"4
%CuDR.GpEg.FqJ'n7k+D^+@%dI]-BB1Z47J$f,Z5\$pPr$r#R\:M0`sp+C_BDR*G<"GG0i"h&rCa7F0dIQ$RuQG"G?W7T#5r92BSL
%\n^$1eI2_l`#]?*G<L&A`s7_,R"r!VDt\12Z4Qr)MUESDAKiBbBr?&=ZjiE<VdDhI]K87AE=1.kgIC.2Wt%Qge90IQ&S<@6(jZa0
%KaAOnW_f-c1SE7[!?H2V3hK4cJqB5e5)u(?,_/LeRhdQp"#M>Xh^sd(i3!+T=$h"g$d?lal?l[u*E/hJ86._G;N2#3_p&0XT-o9t
%[2d;EGe'RC#2U[,-'r]eauBh3&hP2$2,H6q]:ChAfC;@VWDqR%TVm!k-Ip_87MG>FBVQU2-pX'f0C1R]-G5Uf%>li,6BNc<,Gr*R
%e@Rop_/.8cXgg?7hB74$3h6aHBrDqgTK&9_(<$lG3uu`iZ6mb+d=YU464$/U*(:?j[3%dgPD81)&8RD=5N76*aD-LJ,*h1NlnGdB
%1do[T)qYi<JnuQKa,ZbQ1_QKa#1V]P#gqp;>%HE,P6ul$6;uZp+uam;$=cA1T?C5FHus[+LEjRXqRlId&LCBG#<Cfhhk'##E?%Zn
%KRSF1OkTu,bY6S0,Wo%2"&O6/c3F_',c=GZ!L,CMJWeLg3,.p6J=80?qS:a)Wu+[R@Ye0J$4^qqmfZ@!.^Fkj@lQ*`5p/t&gfSVc
%%i"&2_H(VF'l=DW'h.QkNP;EY6e#BV25B?H9.rcP&&lY>&G\f,I[A2u5`T8o#?;*nf@*]q:iT";1A[(A#fP8r3\XEseHk2t.Vn6W
%`!.gYER4j<Ps5=4iZjp3.ml7OZ+<Bj<"Pku-WNKnGl^lZT4\W$,ZTcUa?cT#gd):"[D*8Q"8Q>;h4.YabA<br[1)s#cpD9CGJ?i<
%HM8i7;MA=35Wp>;pY@@OFtBrT+G,*KA;1>XA-EB`Cp8-q<O>/FT[JFEjGmm77h)2&P?44pQ]]deV4&/,.+.\nOFnk)63Weud39DA
%JQoW)<U9uomt*n^UH-EfY#)9IbT(;95qf;!B&35iYJj%Tb^HG]!^[0r2@,7XT52fQcQ1%LO.1ifI!jJ=]P[d#N#^qb'<;C8f'>1;
%h1RZ[Wl8j:cMBK#()n_uHRMW$gq:8i'J\0J@6q+$]p2#JA?780gpkJIHpI_(FXnQNV==0%*95t:Ysi435ohd>B=gUr>S*3q/N2!'
%_3R(ZglTlHZA!rNV5q'R>,Y6ZD1p?h/5Rup:ZW&0WZS.rTq%%@QsPhe##e\;jr*:e,%a:m:#t\MWYg5hkFn1b;Na<Hp""7S4&1>q
%RZeFC(0->HTGAkROBVc_epH1Sa1?,_1`oG`P^_Z!:CuoGC=.k2'5;qQ9B?/AQ8CFo44t*oNaj?\`>-)Riejs:KT<j7!RUV^PbKiZ
%6Q_fYHGrJq[)<0k+$IVe3*d*DCM6#@@CUkDPW$kamQu8RIfd=r.<.+BmK?E1O'm<iGgJC_SB5_S6ts@DT0V3hBb*mj!gTYsiN'2"
%oQk`lMhnY]6SKPnh*Uo%6?1/gD$s03W]Tat?NWmT(WN_WAI/[g<4[03raag+J9\cs3!o&r\AD6\0qdiH,.`;*]$3Mie8Sn"<+t(r
%6-CPo+m3Bg@uHme%n;.#OVJYN*aGP\euA00Lb+/`^i%Q;_Gdh\5r5)I4nocK#V<"n<KEF'e<(?,-<GG()\hs";+Fak3sFu$R3hjR
%ecXq!*tZ=:`(C]@-^V`)-E:&0<B_%:<^q8Hb.F?hKb?e-^?ZXh80^p,(Doc%'g3<ZaF#s(FbYt[l:jr]5`7&E1:6+ncad)>O\k)n
%!)$!>&3e8[g<^?@,-G4;PXEhR:T-[ZmqP1:J:TQu+;[\E^K$Ec:I6[JCD4R=95?I*'T,d>+_Y1ldee'_T,5@p7ABq-6'OA-eEP;r
%.IV@QK(i=3?'ugF0`c<r?%^Cp']&1SKsE)>*(8MfOOg,*eh^1<fjS"Ai^SGYehUU/)OII<-jXc1l"G_45@b[cER>n*)&0W&DA4J$
%!_5=;D4Y49)$?+4;;G:&%2Pd[]UZgB?uT66GX7@3USEsR+UV2G<ZuoMMUM1m?rEiTQokUJ!%N7O.iA(3'FIc%0KSRbqj'lVZ'r2E
%*2$,6RdV^e[nB+nQYBg'_$DoK(hX288Ik%=MLqVIKE+(C:\L`!6[ONBC)G!GKik0akHSBT3kRDd4/,7f(kosnVg4ea4MYcG\#]U\
%fG/(&k?V13KS+62=)$G;'-k\q??%48(@2LV7oKG=hBl8qDH!/=?k$LsauVT6+KAcOc%hs*&,L27dThPpHm4g*J;G#p_L/i8<<`de
%W^U=&'2:53;0<,Q91U[8r:?Z&jlit`.52\DLoe9<W`D[H<!:@?W?&+d1@1$IAfe0aa\j3R+/dYs_GgOa#LT`k4f+#dS\s\W[tA"-
%&1PE;[`d5X0([`%U?k/`U"=2n&k!]^`$Z0QWDPi'@E-rT."H>Hs)<UG/qFY<G.kTpADqeaU9Lng,8GBa]n)6M#\Bt5l,/F:C"$f=
%F3oJ'D(I#[V!rE978u!<A#_[7jMDTuA4)JC&]&G+@ONrZ*?+2TdVA5M?f0hF$7OtG"WH90APcBqZ8a/'U2pfu/g_(b!bi[@]d,2O
%X:8DL*S8o_#Q$PqO)K:>*BVh:Z@!#/WuW1c2fq5#lF]S39Ild3Ceqkdk2n47Pd#a)T8$'&8U0aS8)`A<A-8<_*`.``lZYMEHVkLm
%e%Oc-PZ0l7=3VYV?$1J?7cFP)\5S&2Q7n:\#,l9cg`R$iY]g/2bM+j9SXa/KH.F$7FRD=A)Q'KgW#g;k:Pr3>F74!NQtDnQG#,2F
%)'5qie:HHe6@f'VYh:ru,u05`%(BYH%t'<e-6]B"9k7O(eCe8&ZNYnT&N^\L!;f&1&qbWY_Rh]^gVNf*luILX.^$G^/u9""0o[JR
%mm&:GIB$gL=9g\TWbAM7h@2=jeA)HF=A07P3"i55oT1Y"**#JCHs<2m:2EPDn-]t,N_kkZ!Z)RlO<dkibk)8%U^BmU5;hp=lHXA'
%l>jhkD%][$dhXfbc4#mb?.7&N*X^ONON1??d(Ja3EN7&L\8Cp#UBRr\2tf@D7%W3DU_ecpo%e:L0pb?$c\8I`\,]5^T^$q]P^8YS
%lIFOfcSRIAEl9)UO]"`BcucsSd^7'=X@'6&-_MXtD&`Wuo*C0<m?7!#hoUf9[YpRU:h9r?Y0l)/C/q\ga;uq9$m#k"6\(;)hM!bj
%ge#N2'QB"jE$^Te-X90;=rA-.Vkem2Pef8Bl;kN\_^Y[$6sb0D,fs1,3oN\&kV6m$n)c%mRt/%bKZ5<,GAu+AI4Hhu#H*mP#h''P
%`&)o.G`lcOb3GBkEHZUXOTUm7O/Hd`5gJAR((:PKWXXX%90c&<Ok'=PG&[f5Zoj/FO.q0)G7$WuP7c0<@[_H@TcX\PWnU+VWH#1U
%*=$_87jr.N8rKG=UV'd:=)C`&*"+648*X3Q1o>^Z9mn`:VP7&V(?I0T9OXn/W;3/Hh\O`)*`j#h3Ub$SE[*^j!kB:jXcm$)ZT"Gp
%@>441AVf,5fHO]+(#9=8YK4Lk+_Y5oS3mKAGX_(tbY@cuLlVI-YH*=LaPE$,*^_nIVg`i3dU?c,OonQ._>8l/<am>A?:d2J/1n5n
%4;NT/BT_Hjdi$GX$9t!/%ZnkE'O8G$2(7di2l@05?Np"7>3a!N*g0o*!JbnW+B:#P3-<\sJ7+(Io?@`U4C??)2;eL\Fo[dOar74@
%g3P]eWRPE!1NJ@4T]1\F3/d!G:rq`6k.<?Y<?*@<M_anI2YE0)7R:/(l_QQ63;Klrfcos@no9M#hCElcTHPp<jCWOJm"1sS_DVXY
%,Sjm5F6DRqJ$T+/ZO*q*0lng?/lcBm2O^!rW`)Z)`jc(ZBFP+hp%.q]r0LDgjWm"o6`<u0!Ht_nN-:=gKFWcTTXR7H3D;m!#o^a*
%$9N;E$@+T-9NAnuE,\O"2Q,Imn;#G)CC3[#3D,GgY8gMTAXZ?8p&R[OU9fg.`&p?&?O"=ZPaeN7$*9&0601j6=3m\bAQ$L(o4L>V
%0che%3?uBDB3<4k8/2?`60'^9]l%">*(I.eF`+1%esme,DW^Kbj=H+]Y[ZXH/ZJ#,[(og4%Jk0OGphO3\GdPOiIGMe6r&',aOH9:
%WX0(_9>&8[Q)`e7e/6)q#*@mt>qYM7LoM&8GG7(<Abh/N;pd*.VEi!l[=tW0$\AB,'L^a1i3;<p5J67=hj&)4=CGK[di_2sTVng1
%[+6P691C&0>5/d8'ZI9c8P+mnh/_5V?E2,/&&t^3.^6i'C0@*\)"qJ`O7^VD^>%/n'rmKR]BFUKXp'#_^l\[pXB#5F*6uTTC763S
%K_Usi,L=h)_a6'@Q'?QUhq9BT=^Aij$>:7u&Ch)p[[?K&b(HIDL#=)Ua.N#:3cp&JOm8GO*ttd*n%Q]`IJ7R'@Pg*>]l<'0om),A
%+,;F9<=et,fQtCUi^@d2F137;6"1OZ"?gR6Gb:Dm@]k?TkWuKcm8fMj*bX'la`>,#Xu%PMV@s0);&F<;+@_in#pngR&]dr1`Ln+"
%nQ&YTeK!TuEVAd7gnW=>3Xbhg(XMMh(kClSVHUCf25lN90LP*ujT-q<lB^='L:K.YG+6ZQ>*U=sjCZ8iDA7t3BG(;&VblbWRDU'f
%"endtR.!Z:o<L@V)V]<EnW!te3p5JG7&8D8YG*R0QSegX^h&%*%&uOmn8ol(jEq;AjZHmEbX>!%%lO3K't.*C?)rF_\`p;hZec2N
%D%Pm,KW7$t^5-N5CcXZod:Ve\C0Bnb$tNqXDUq<J;L_G$.uDTA%s2iBRbZ2NX,n8.%(/+\7>eSMB47JJ\JN->K?EZ@2(&m,L`4&8
%P*)KE(IE[[V+r;_V@al<.3(X>U%$&2fDM@OTiFJoDTc$5&I>B&6+?:gq[fDE/qUa!@mr8Bm$p\2kX7.`fMb@_N.&(K,:nbl;K&VK
%)B3>or]JB9'86p%hlSY?*:0=M@OuF4P=Uf=$i4au,"5mgEt\-2R=0eS"RJ]3:A$Bc&EpRS<,EiA)7XoI>WPMcQu3"\HB9R0A\OEY
%l@,1.$a-Ir9,Cdbq\`J3oDQ11K#?V2Q4F!D17'UECQ%6lLVnJih5isU!3!GRMc^mP$4Ch[2eNHdH(WY\0=H=KTM$jTPeBge+&%BN
%]#Z]Ee_;AdeOI@!^o8,Z@01t6X):c1NMDmh1`0'rm1J5G@Nc;9HQuKR:bNYPo)S(P!J72e[i$?j.$(-65fAt2iNrgG`Flg<#]Wap
%C/pTeO?a0np]<\G,bqlR4aObB+T1HrBEpk`L=J9G=r,fH`()7Uan\Q.1%cQh9DNm-8#r.O3:>fBD<;:R>\KBRUjfcMlpd*HJQr@j
%joO2r6B1Nq$R2[2_\n/VX/_P(d%+)jKs&"C!'^r%[u)^(KQM*AW:i7@\,+CfUl/`&UH>?eg:AbQYrqk^-.<pl&FSZ1?)AcZKSB&O
%UT\R"`?P@O\RWr;ojjDs2luP$cdO&E^r6!3(8\20STZlTr&M,8JZ5e=g??Y&p0ll:fg:2bmO)P6HW@5qGQ2O\J,OTef73DjDr/2-
%k79e+o?@8anXn_=p;;CWnbmYR5Q(9ms6@).HiJj3:[c'u*a-3@r8[S$dr0a6n@P<Aq!l8Nn%SbZT7GjrotiA2nMgL45Q&L8qS2LQKan~>
%AI9_PrivateDataEnd
